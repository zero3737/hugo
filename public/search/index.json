[{"content":"内容调整规范 ‌避免使用刑事罪名表述\n删除“诈骗”“洗钱”“非法集资”等词汇，改为客观描述纠纷细节（如“虚假宣传”“未按约定提供服务”“商品与描述不符”等）。\n补充必要证据材料\n上传交易凭证（如订单截图、支付记录）、沟通记录（如聊天截图）、商品/服务问题证明（如实物照片、检测报告）等完整证据链‌。 商家主页截图 明确诉求与事实\n用简洁语言说明纠纷经过，避免情绪化表达； 提出具体诉求（如退款、赔偿、道歉等），并与证据对应‌。 注意事项\n避免脱离平台交易或通过非正规渠道沟通（如个人转账、非官方链接） 如遇人身安全威胁等刑事问题，直接向公安机关报案。 投诉内容调整建议‌（符合平台规范） 标题修改示例\n原表述：闲鱼话费诈骗 规范修改：闲鱼话费充值未到账且商家失联 避免使用“诈骗”等刑事罪名词汇‌ 正文内容调整方向\n核心事实描述\n1 2025年2月X日，通过闲鱼平台支付95元购买话费充值服务（订单号：XXX）。商家承诺自动到账，但至今未收到充值记录（附截图证明）。2025年3月28日发现手机因欠费停机，查询运营商后台仅显示本人后续充值的50元记录，无此笔100元充值记录。商家目前仍活跃但拒绝沟通（附聊天截图及商家主页截图）。 用时间线+客观证据描述纠纷\n诉求明确化\n1 要求闲鱼平台协助追回95元支付款项，并对商家违规行为进行处置。 聚焦退款及平台责任，避免情绪化表述‌。\n补充提交的关键证据‌（提升审核通过率） 交易凭证‌：闲鱼订单截图（含订单号、支付时间、金额）‌ 沟通记录‌：商家“已读不回”的聊天截图‌； 充值证明‌：运营商后台的充值记录截图（标注缺失的100元记录）‌； 商家状态‌：当前活跃主页截图（证明未注销账号）‌。 同步采取其他维权措施 ‌向闲鱼平台举报‌：通过订单页“举报”功能提交欺诈行为证据，要求冻结商家账户‌； ‌报警处理‌：若金额累计较大或涉及多人受害，携带证据向当地派出所报案（需提供交易记录及商家信息）‌； 运营商申诉‌：联系运营商开具“未收到充值”的书面证明，作为补充材料‌。 注意事项 避免在投诉中提及“诈骗”“洗钱”等词汇，仅描述事实及合同违约‌； 警惕商家诱导脱离平台沟通（如微信、QQ交易），所有操作均在闲鱼完成‌； 定期查看投诉进度，若超3个工作日未回复可联系黑猫客服催促‌。 通过以上调整，可提高投诉审核通过率并推动问题解决。若后续发现商家涉及团伙作案等刑事线索，建议直接向公安机关提供完整证据链‌。\n","date":"2025-03-28T22:36:55+08:00","image":"https://hugo-ap0.pages.dev/bg/55.webp","permalink":"https://hugo-ap0.pages.dev/p/%E9%BB%91%E7%8C%AB%E6%8A%95%E8%AF%89%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/","title":"黑猫投诉注意事项"},{"content":"立即申请退款 提交退款申请‌：通过闲鱼订单详情页发起退款申请，理由选择“未收到商品/服务”或“充值未到账”。若订单已自动确认收货，仍可通过「客服介入」通道申诉‌。\n未自动确认收货，可以无理由退款。若确认收货只能「客服介入」。\n上传举证材料‌：包括订单截图、与卖家的聊天记录（如未收到话费的沟通内容）、话费充值记录截图（可登录运营商官网查询）‌\n联系闲鱼客服介入 人工客服通道‌：拨打闲鱼客服热线9510222，选择人工服务，说明“订单已超时未到账且卖家拒绝处理”，要求平台介入处理‌\n强调关键点\n卖家账号是否存在异常（如高退款率、信用差、店铺关闭）‌ 提供完整的订单证据链（如充值时间、运营商官方未到账证明）‌ 明确要求平台冻结卖家账户并追回资金‌ 通过支付宝投诉 ‌账单投诉‌：在支付宝中找到该笔交易账单→选择“投诉”→填写投诉理由（如“未收到商品/服务”）并上传证据。支付宝审核通过后可能冻结卖家账户资金‌\n二次申诉‌：若首次投诉未通过，可补充话费未到账的运营商官方证明进行二次申诉‌\n通用投诉渠道 ‌黑猫投诉平台‌（提交订单截图及说明）‌ ‌12315消费者投诉热线‌（需提供卖家企业信息，可通过信息披露获取）‌ 法律维权 万不得已只能通过法律维权，呵呵\n要求披露卖家信息‌：向闲鱼客服申请卖家实名信息（需填写《信息披露申请表》），为后续法律途径做准备‌\n‌法律威慑‌：告知卖家已通过支付宝冻结账户、向12315投诉，必要时可报警或提起民事诉讼（需保存报案回执）\n线下刀战 连都法律帮助不了你，只能线下真实，把他全家刀死就行。不考虑后果就行动。\n注意事项 保留完整证据‌：包括订单详情页、聊天记录、运营商官方充值记录，建议录屏保存操作流程‌ ‌警惕二次诈骗‌：勿通过QQ/微信等外部渠道与卖家沟通，所有操作均在闲鱼平台完成‌ 时间敏感‌：充值类纠纷建议在72小时内处理，超7天订单需尽快补充运营商出具的未到账证明‌ ","date":"2025-03-28T20:43:45+08:00","image":"https://hugo-ap0.pages.dev/bg/45.webp","permalink":"https://hugo-ap0.pages.dev/p/%E9%97%B2%E9%B1%BC%E8%AF%88%E9%AA%97%E7%BB%B4%E6%9D%83/","title":"闲鱼诈骗维权"},{"content":"资源收集阶段 高危地图定点搜刮\n危险行动模式‌：优先选择水泥厂地下金库（必刷保险箱）、大坝22号协议箱（固定出金条）、长弓溪谷鸟窝（隐藏紫材），单趟20分钟收益约80-150万哈夫币‌。 ‌全面战场模式‌：摧毁坦克/直升机必掉「精密零件」（单价50万），组队使用RPG集火效率更高；优先争夺「棱镜攻势」航空箱（内含2000万材料）‌。 活动与任务速通\n‌赛季限定活动‌：如阿萨拉先遣队任务完成5次物资押运可得「蚀金玫瑰」皮肤（黑市溢价800%）‌。 ‌剧情战役速通‌：普通难度通关「黑鹰坠落」解锁安全屋钥匙，无限刷取3级甲和狙击配件‌。 危险行动模式入口位置 主界面模式选择\n进入游戏主界面后，可在模式列表中找到「危险行动」选项，该模式与「全面战场」「黑鹰坠落」并列为主要玩法‌。\n烽火地带等级解锁\n若选择特定地图（如长弓溪谷），需将「烽火地带」等级提升至7级后才可进入‌。\n零号大坝资源分布 区域 地点 资源 说明 ‌西侧物资区 军营 约5个 水泥厂 约19个 二层骇客电脑 水管铺设工地 少量 随机物资（需探索） 东侧物资区 主变电站 约13个 主楼 南边备用电站 约7个 游客中心 约10个 ‌北侧物资区 养护站 少量 行政辖区（西楼） 约13个 行政辖区（东楼） 约13个 集装箱区 未明确数量 特殊区域‌ 坝体地下金库 未明确数量 高价值金装（需破壁者行动解锁） 密码房/密钥房/彩蛋点 随机分布 高价值道具（需探索鸟窝、井盖等隐藏点） 补充说明：东侧物资区西边野外营地，会随机刷物资。\n","date":"2025-03-28T20:41:54+08:00","image":"https://hugo-ap0.pages.dev/bg/54.webp","permalink":"https://hugo-ap0.pages.dev/p/%E4%B8%89%E8%A7%92%E6%B4%B2%E8%A1%8C%E5%8A%A8%E6%90%AC%E7%A0%96%E6%97%A5%E5%B8%B8/","title":"三角洲行动搬砖日常"},{"content":"画面参数性能优先级表 参数 性能影响 调整建议 分辨率‌ ⭐⭐⭐⭐ 低配设备降分辨率并启用DLSS/XeSS补偿画质，高配可保持原生分辨率 ‌。 阴影质量 ⭐⭐⭐⭐ 高设置导致帧率显著下降，且阴影锐度过高影响真实感，竞技玩家建议关闭 ‌。 反射质量 ⭐⭐⭐⭐ 动态反射增加GPU负担，高设置画面变暗，优先调低或关闭 ‌。 环境遮蔽质量‌ ⭐⭐⭐⭐ 高设置增强立体感但帧率下降10-20%，中低配建议调低以保流畅 ‌。 体积雾质量 ⭐⭐⭐⭐ 不可拉高‌！高设置增加烟雾/沙尘效果但严重降低帧率，且干扰观察敌人 ‌。 ‌动画质量 ⭐⭐⭐⭐ 影响角色动作流畅度，高设置占用CPU资源，中低配建议关闭 ‌。 全局光照质量 ⭐⭐⭐ 提升画面明亮度，对帧率影响中等，高配可拉满 ‌。 后处理质量 ⭐⭐⭐ 高设置增强滤镜/景深效果，但可能模糊画面细节并降低帧率，竞技玩家建议低 ‌。 场景质量 ⭐⭐⭐ 包含视距和细节加载，中低配建议“低”以减少远处物体渲染压力 。 ‌粒子效果质量 ⭐⭐ 高频爆炸场景可能影响帧率稳定性，中配可调中 ‌。 ‌扭曲质量 ⭐⭐ 控制爆炸/能量场特效的视觉扭曲，高配可调高增强表现力，中低配建议低。 纹理过滤质量 ⭐ 几乎不占性能，显存充足时直接拉满提升贴图清晰度。 纹理质量 ⭐ 高显存设备建议拉满，低配可选“中”。 锐化 ⭐ 算法优化边缘细节，几乎无性能消耗。 优化建议 中低配设备‌\n优先降低分辨率、阴影、反射、粒子效果，开启DLSS/XeSS超分辨率，纹理质量保持中高‌。\n高配设备\n可拉满纹理、锐化、动画质量，适当调高场景视距与全局光照，同时保持阴影和反射在“中”档‌。\n垂直同步（V-Sync）与NVIDIA快速同步（Fast Sync）的区别 定义与核心原理 垂直同步（V-Sync）\n通过强制显卡渲染帧率与显示器刷新率同步，防止画面撕裂。当显卡完成一帧渲染后，需等待显示器的垂直刷新信号再输出下一帧‌。\n快速同步（Fast Sync）\n一种改进技术，允许显卡在帧率高于显示器刷新率时动态选择最新完整帧输出，避免等待垂直刷新信号，从而降低输入延迟‌。\n工作机制差异 垂直同步\n若显卡帧率 \u0026gt; 显示器刷新率：强制降低显卡帧率至显示器水平，可能因等待信号导致输入延迟增加‌。 若显卡帧率 \u0026lt; 显示器刷新率：可能出现帧率骤降或卡顿，影响流畅性‌。 快速同步\n当显卡帧率 \u0026gt; 显示器刷新率：仅输出最新完整帧，跳过中间帧，减少延迟且避免撕裂‌。 当显卡帧率 ≤ 显示器刷新率：自动切换为垂直同步模式，防止撕裂‌。 优缺点对比 特性 垂直同步（V-Sync） ‌快速同步（Fast Sync） ‌画面撕裂 完全消除‌ 高帧率下消除‌ ‌输入延迟 较高（需等待垂直信号）‌ 更低（直接输出最新帧）‌ 帧率稳定性 帧率波动时易卡顿‌ 高帧率下更稳定‌ ‌适用场景 对画质要求高、非竞技类游戏‌ FPS等低延迟需求场景‌ ","date":"2025-03-23T18:57:25+08:00","image":"https://hugo-ap0.pages.dev/bg/25.webp","permalink":"https://hugo-ap0.pages.dev/p/%E4%B8%89%E8%A7%92%E6%B4%B2%E8%A1%8C%E5%8A%A8%E7%94%BB%E8%B4%A8%E8%AE%BE%E7%BD%AE/","title":"三角洲行动画质设置"},{"content":"主流平台 腾讯游戏账号的购买渠道主要集中在第三方专业交易平台\n‌交易猫\n阿里巴巴投资的综合性平台，覆盖腾讯旗下《王者荣耀》《和平精英》等热门游戏‌。 提供账号转移技术、找回包赔及24小时客服服务，交易流程相对复杂但保障完善‌。 7881\n老牌平台，实名制交易且承诺“终身找回包赔”，赔付流程透明‌。 支持腾讯游戏账号交易，审核严格且到账速度快‌。 螃蟹账号（螃蟹游戏服务网）\n覆盖近700款游戏，包括腾讯系《王者荣耀》《英雄联盟》等‌。 提供资金托管、账号核验及售后纠纷优先处理，安全性较高‌。 DD373\n专注网游交易，支持主流大型游戏账号交易，注册用户量大‌。 交易品类多样，但服务偏向端游，手游支持相对有限‌。 闲鱼\n综合二手平台，可交易游戏账号，但缺乏专业审核和售后保障，风险较高（搜索结果未提及具体保障措施，需谨慎选择）。\n补充推荐平台 换号吧\nB2C模式，所有账号提供电子合同签署和永久包赔服务，适合追求高安全性的用户‌。\n选择建议 优先专业平台‌：交易猫、7881、螃蟹账号等专业平台在审核、赔付、客服等方面更完善‌。 ‌警惕私下交易‌：避免绕过平台直接交易，选择有资金托管或官方背书的渠道‌。 关注服务条款‌：重点查看“找回包赔”“账号转移”等条款，降低后续纠纷风险‌。 ","date":"2025-03-23T17:06:11+08:00","image":"https://hugo-ap0.pages.dev/bg/11.webp","permalink":"https://hugo-ap0.pages.dev/p/%E8%85%BE%E8%AE%AF%E6%B8%B8%E6%88%8F%E4%BD%8E%E4%BB%B7%E8%B4%A6%E5%8F%B7%E8%B4%AD%E4%B9%B0%E7%AD%96%E7%95%A5/","title":"腾讯游戏低价账号购买策略"},{"content":"‌核心信息修改清单 实名认证与密保手机\n必须修改‌：通过游戏官方安全中心将账号的实名信息、密保手机号更换为自己的（需原号主配合）‌。 ‌关键操作‌：更换后每天稳定登录账号4小时以上，持续15天，强化系统对“真实主人”的判定‌。 登录密码与密保问题\n密码重置‌：设置包含大小写字母、数字和符号的强密码，并定期（每3-6个月）更新‌。 ‌密保问题‌：避免使用生日、姓名等易猜信息，建议设置为个性化答案（如“最爱的电影角色”）‌。 绑定邮箱与第三方授权\n邮箱更换‌：解绑原邮箱并绑定自己的新邮箱，确保密码找回路径唯一‌。 第三方授权清理‌：撤销与账号关联的无关应用（如QQ/微信插件、外部登录工具）‌。 登录设备与地点管理\n设备清理‌：删除所有非本人设备的登录权限（如原号主的手机、电脑）‌。 异地登录锁‌：开启安全锁功能，阻止非常用IP地址登录‌。 社交关系与数据痕迹\n好友处理‌：逐步删除原号主好友（每次删1人后添加1名自己的好友），并将新好友设为紧急联系人‌。 活跃度维护‌：每日登录、参与游戏对局或与好友互动，避免账号被判定为“非活跃状态”‌。 主流用户防找回策略 优先级最高的操作\n90%以上用户优先修改‌实名信息‌和‌密保手机‌，这是账号归属权的核心证明‌。 80%用户会叠加‌双重验证‌（短信+身份验证器）提升安全等级‌。 高性价比操作\n通过‌平台验号服务‌验证账号实名是否可更换（不可换实名账号风险高，建议放弃交易）‌。 购买含‌终身包赔‌服务的账号（如戏仔、交易猫等平台），即使被找回也可获全额赔付‌。 争议性操作\n人脸识别绑定‌：仅30%用户能完成（需原号主配合），但对防找回效果显著‌。 角色转移服务‌：官方渠道（如藏宝阁）支持将角色数据转移至自己实名账号，彻底规避找回风险，但仅限部分游戏‌。 ","date":"2025-03-23T16:58:28+08:00","image":"https://hugo-ap0.pages.dev/bg/28.webp","permalink":"https://hugo-ap0.pages.dev/p/%E6%B8%B8%E6%88%8F%E8%B4%A6%E5%8F%B7%E9%98%B2%E6%89%BE%E5%9B%9E%E6%8C%87%E5%8D%97/","title":"游戏账号防找回指南"},{"content":"前言 交易猫不存在双倍包赔的服务，呵呵\n交易安全险 适用场景\n卖家恶意找回账号、账号因违规被封禁、账号被游戏官方回收等情形‌。 保障期内（通常为60天或90天）发生的风险事件‌。 赔付金额\n订单全额赔偿（不含已支付的保费），需用户提供报警回执、交易记录等凭证‌。 若因平台验号疏漏导致问题（如虚假账号），平台可能额外承担部分责任‌。 充值损失险 适用场景\n充值后账号被封禁、功能异常导致充值无法使用‌。\n赔付条件\n需提交充值截图、账号异常证明等材料，赔付金额为充值损失部分（按交易额5%计算保费）‌。\n","date":"2025-03-23T16:52:14+08:00","image":"https://hugo-ap0.pages.dev/bg/14.webp","permalink":"https://hugo-ap0.pages.dev/p/%E4%BA%A4%E6%98%93%E7%8C%AB/","title":"交易猫"},{"content":"闲鱼店铺等级划分体系 入门级卖家（L1-L2级）\n仅支持50-500个深库存商品上架 功能限制较大，仅开放宝贝分组、粉丝价等基础工具‌ ‌过渡级卖家（L3-L4级）\n功能扩容（如库存上限提升） 新增粉丝抽奖专区任务，可提升店铺权重‌ 专业级卖家（L5-L6级）\n享有PC工作台、直播挂宝贝、商品优先收录等高级权益 显著提升曝光率和订单量‌ ‌**顶级卖家（L7级）**‌\n拥有全部权益，可参与百大鱼老板评选 流量和权重达到平台头部水平‌ 店铺等级与运营稳定性的关联 高等级店铺（L5级以上）更不易“跑路”：\nL5级以上卖家通常具备专业运营能力，享有平台流量扶持和优先曝光权益，长期收益稳定‌。此外，月成交超10单且金额过万的商家需遵守平台规则，违规成本更高‌。\n时间成本与等级提升周期 常规升级路径‌：\n从L1升至L5级需约1-3个月（若日涨分超100分可实现快速跃升）‌ 每月仅允许升1级，且需通过动态评估（如好评率、成交数据）‌ ‌长期运营要求\n达到L7级需持续运营6个月以上（需逐级晋升且避免违规扣分）‌ 维持高等级需长期投入：如差评会抵消30个好评的权重，需持续优化商品和服务‌ ‌注‌：平台未明确要求“3年以上”的等级门槛，但L7级卖家往往需通过长期积累（如1年以上）稳定权重和口碑‌。\n","date":"2025-03-23T03:32:35+08:00","image":"https://hugo-ap0.pages.dev/bg/35.webp","permalink":"https://hugo-ap0.pages.dev/p/%E9%97%B2%E9%B1%BC%E5%BA%97%E9%93%BA%E7%AD%89%E7%BA%A7/","title":"闲鱼店铺等级"},{"content":"前言 淘宝店铺信用等级分为四个大等级体系，每个等级包含5个小级别\n红心（星级）\n‌1心‌：4-10积分 2心‌：11-40积分 ‌3心‌：41-90积分 4心‌：91-150积分 ‌5心‌：151-250积分 钻石级\n‌1钻‌：251-500积分 2钻‌：501-1000积分 3钻‌：1001-2000积分 ‌4钻‌：2001-5000积分 ‌5钻‌：5001-10000积分 蓝冠级（皇冠）\n1蓝冠‌：10001-20000积分（对应10001-20000笔好评交易）‌ ‌2蓝冠‌：20001-50000积分（对应20001-50000笔好评交易）‌ ‌3蓝冠‌：50001-100000积分（对应50001-100000笔好评交易）‌ ‌4蓝冠‌：100001-200000积分（对应100001-200000笔好评交易）‌ 5蓝冠‌：200001-500000积分（对应200001-500000笔好评交易）‌ 金冠级（金色皇冠）\n1金冠及以上‌：500000+积分（具体划分未明确，但存在1金冠到5金冠等级）‌ 天猫旗舰店‌（独立于信用等级体系）\n‌品牌背书‌：仅限企业资质入驻，假货率低于普通淘宝店铺，支持官方售后无忧服务‌ 特殊场景适用‌：购买家电、美妆等需正品保障的商品时，用户普遍倾向天猫‌ 时间成本 等级名称 时间成本（日均稳定交易量） 1心-5心 日均10单：约 ‌15-30天‌（新店起步阶段） ‌1钻-5钻 日均50单：约 ‌6-12个月‌（需累计5000+好评） ‌1蓝冠-5蓝冠‌ 日均100单：约 ‌1-3年‌（需动态评分达标） ‌1金冠-5金冠 日均200单：约 ‌5-8年‌（绑定企业资质与保证金） 资金沉淀成本\n‌保证金‌：5金冠店铺保证金通常为 ‌15万-30万元‌（类比天猫旗舰店标准，违约将直接扣除）‌68，5蓝冠保证金约 ‌5万-10万元‌‌。‌\n技术服务费‌：年费 ‌3万-6万元‌，达标后部分返还‌。\n运营成本‌：包括商品采购、推广、人力等，5金冠店铺年运营成本普遍在 ‌500万-1000万元‌ 以上‌。\n消费者应对策略 优先选择‌：天猫旗舰店 \u0026gt; 5金冠 \u0026gt; 5蓝冠（信用积分越高越好） ‌验证资质‌：点击店铺头像查看「企业资质」公示（仅天猫/金冠店铺强制公示）‌ 缩短账期‌：使用「账期保障」服务，确认收货后资金延迟15天到账（跑路可拦截）‌ ","date":"2025-03-23T03:26:47+08:00","image":"https://hugo-ap0.pages.dev/bg/47.webp","permalink":"https://hugo-ap0.pages.dev/p/%E6%B7%98%E5%AE%9D%E5%BA%97%E9%93%BA%E7%AD%89%E7%BA%A7/","title":"淘宝店铺等级"},{"content":"搜索指数热度分级 低热度‌：0-100\n关键词搜索量较少或存在波动，通常属于非热门话题‌\n中热度‌：100-500\n反映明显搜索需求，可能关联行业关注或一般性热点事件‌\n高热度‌：500-1000\n代表广泛关注的热门话题，如持续性社会热点或重大活动‌\n顶流热度‌：1000-5000\n具备爆炸性搜索量，通常对应突发重大事件或全网热议现象‌\n资讯指数热度分级 ‌低热度‌：0-100\n资讯传播量有限，话题未被大规模报道‌\n中热度‌：100-500\n媒体报道量明显上升，形成区域性/行业性传播‌\n高热度‌：500-1000\n跨平台传播，进入主流媒体关注范围‌\n顶流热度‌：1000+\n全网刷屏级传播，占据头条新闻及热搜榜单‌\n应用场景差异 搜索指数侧重反映‌用户主动搜索行为‌，与潜在需求关联度更高‌\n资讯指数体现‌媒体报道强度‌，用于评估舆情扩散程度‌\n注：实际应用中需结合具体行业特性，例如娱乐类话题可能因粉丝效应导致指数虚高，而专业领域500以上即属高热状态‌。\n","date":"2025-03-21T20:10:48+08:00","image":"https://hugo-ap0.pages.dev/bg/48.webp","permalink":"https://hugo-ap0.pages.dev/p/%E7%99%BE%E5%BA%A6%E6%8C%87%E6%95%B0%E7%9A%84%E7%83%AD%E5%BA%A6%E5%8C%BA%E9%97%B4%E5%88%92%E5%88%86%E6%A0%87%E5%87%86/","title":"百度指数的热度区间划分标准"},{"content":"前言 教你如何系统的薅羊毛，薅羊毛理论基础\n方法论 薅羊毛用户主要获取线报的渠道有以下几类\n专业线报网站 社交媒体及自媒体。微博、小红书等平台上有不少“薅羊毛博主”，他们会在评论区或专门账号中分享最新的优惠线报，很多用户习惯于通过这些博主获取信息。 微信群和QQ群。专门的薅羊毛群也是主流渠道。群主通常会整合各大平台的优惠活动，通过微信群或QQ群实时发布线报，方便群成员第一时间抢购优惠商品。 线报论坛及资讯平台。一些论坛或者专栏（例如知乎专栏）也会讨论和分享各种电商活动的优惠信息，这些内容往往经过资深薅羊毛用户的整理和验证。 微信公众号。搜索“优惠券”“折扣”等关键词，关注垂直类公众号（如“羊毛情报站”）获取精选活动推送‌。 ","date":"2025-03-21T02:30:45+08:00","image":"https://hugo-ap0.pages.dev/bg/45.webp","permalink":"https://hugo-ap0.pages.dev/p/%E8%96%85%E7%BE%8A%E6%AF%9B%E6%96%B9%E6%B3%95%E8%AE%BA/","title":"薅羊毛方法论"},{"content":"使用 可以最多添加 5 个关键词，进行分析\n其中分类点击箭头图标可以选择子类，用来去除歧义\n往下滑可以进行关键词分析，用来查看该关键词是不是在表达同一个意思。这里 clash 有很多个版本，你到底在关注哪一个版本呢？是 windows 版本呢？还是安卓版本呢？\n消除歧义 使用系统消歧功能\n输入关键词后，在搜索框下方会自动弹出语义分类选项（如“品牌”“动物”等标签），需手动选择“品牌”分类标签进行锁定‌。\n添加限定词缩小范围\n在搜索栏输入复合关键词，例如：\n\u0026quot;啄木鸟 品牌\u0026quot;（短语匹配） 啄木鸟 + 皮鞋/箱包/男装（结合品牌主营产品） 排除动物关联词\n在“过滤条件”中添加否定关键词，如：-鸟类 -动物 -woodpecker -biology，排除自然生物类搜索干扰‌。\n利用类别和地域过滤\n如果该品牌主要在特定行业或地区运营，可以利用谷歌趋势中的类别过滤（例如“购物”、“零售”等）以及地域设置，进一步排除动物作为自然生物的搜索趋势。\n关联主题对比\n查看“相关主题”板块，若出现皮鞋/男装/服饰等词则验证为品牌数据；若出现鸟类/栖息地/动物保护则需重新调整过滤条件‌。\n查询对比测试\n分别对比以下两组数据差异：\n啄木鸟（品牌分类） vs. 啄木鸟（动物分类） 啄木鸟 皮鞋 vs. 啄木鸟 -鸟类 通过趋势曲线分离度判断过滤效果‌。\n案例 比如搜索螃蟹，我的目的是搜索螃蟹游戏账号交易，如何消除歧义？\n通过加限定词，查看对比。然后选择地区、时间、分类进行消除歧义，避免混淆\n使用技巧 分类中，不仅可以选择分类，还支持选择\n","date":"2025-03-21T01:49:20+08:00","image":"https://hugo-ap0.pages.dev/bg/20.webp","permalink":"https://hugo-ap0.pages.dev/p/google-trends-%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B%E4%BB%A5%E5%8F%8A%E5%A6%82%E4%BD%95%E6%B6%88%E9%99%A4%E6%AD%A7%E4%B9%89/","title":"Google Trends 使用教程以及如何消除歧义"},{"content":"常用术语 搜索指数\n反映关键词在百度搜索中的用户主动搜索热度，综合PC和移动端的搜索量，经算法处理（如去重、加权）后的标准化数值。\n数值越高，关注度越高。例如“双十一”期间，“购物优惠”的搜索指数飙升，说明用户兴趣浓厚。\n资讯指数\n衡量关键词在百度资讯（新闻、文章等）中的媒体提及频率，经时间加权等处理后的综合值。\n数值高表示媒体集中报道。如某明星绯闻曝光时，其资讯指数骤增，反映媒体关注度。\n同比（Year-on-Year）\n与历史同期对比，如“2023年5月 vs 2022年5月”。\n消除季节因素，分析长期趋势。例如旅游城市搜索指数同比上升20%，说明需求年度增长。\n环比（Month-on-Month）\n与上一周期对比，如“2023年5月 vs 2023年4月”。\n捕捉短期波动。若某品牌新品发布后搜索指数环比增长50%，反映短期营销效果显著。\n对比与注意事项 同比 vs 环比‌\n同比看长期趋势（如年度增长），环比看短期变化（如月度波动）。\n例：春节假期旅游搜索指数同比上升（年度对比），但环比可能下降（因节后淡季）。\n使用场景\n搜索指数‌：分析市场需求、用户兴趣。 资讯指数‌：监测媒体报道热度。 同比‌：评估年度策略效果。 环比‌：监控活动或事件影响。 注意‌：数据经过算法处理，非原始绝对值；需结合具体事件（如节日、新闻）解读，避免孤立看待数值变化。\n关键词混淆 百度指数避免“啄木鸟”品牌与动物关键词混淆\n‌限定品牌场景词\n在搜索词中加入品牌关联的行业词或产品词，例如使用“啄木鸟男装”“啄木鸟皮鞋”替代单一关键词“啄木鸟”，直接锁定品牌需求，排除动物类搜索‌。\n操作建议‌：在百度指数中输入组合词，对比“啄木鸟”与“啄木鸟男装”的搜索指数差异，筛选出品牌相关流量。\n","date":"2025-03-21T01:08:12+08:00","image":"https://hugo-ap0.pages.dev/bg/12.webp","permalink":"https://hugo-ap0.pages.dev/p/%E7%99%BE%E5%BA%A6%E6%8C%87%E6%95%B0%E4%B8%AD%E7%9A%84%E6%9C%AF%E8%AF%AD%E8%A7%A3%E9%87%8A/","title":"百度指数中的术语解释"},{"content":"前言 呵呵，不兼容 rclone，本来想通过符号链接指向 rclone 挂载的磁盘目录，wallpaper 总是闪退，可能不兼容 rclone 挂载磁盘的文件系统。\nraidrive 挂载的磁盘文件系统为 ntfs，如果创建软链接指向 raidrive 创建的磁盘，这可以正常打开，但是不能下载。ftp 方式比 smb 方式使用更加流畅。raidrive 免费版只支持挂载网络磁盘，要模拟本地磁盘必须给钱。如果模拟本地磁盘，则软链接应该可以完美兼容，也就说正常下载。\nraidrive 收费版本，模拟本地磁盘，选择 ftp 方式，可能 ftp 比较适合小文件传输，所以使用体验比 smb 好，这可能是完美方案。\n最后还是通过 syncthing 方案备份 wallpaper 壁纸，这样占用本地空间，看着难受，呵呵呵，如果通过软链接，则必须 windows 原生功能实现。我测试 smb 挂载网络磁盘正常打开，可不可下载不清楚，我这是通过 wifi，总是资源管理器崩溃。如果使用网线，可能使用体验会很好。\nraidrive 收费版本，模拟本地磁盘，选择 ftp 方式挂载，应该使用体验最好，可是没钱，可以正常下载壁纸，可以切换壁纸，可以正常打开 wallpaper 软件。\n还有通过 iSCSI 方式，这种方式也是挂载本地磁盘，但是 iSCSI 不支持共享目录，只能共享整块磁盘，和文件传输协议还是有点区别。\n本地文件手动备份方案 单张壁纸导出\n通过 Wallpaper Engine 内置保存功能：选中壁纸 → 点击保存图标 → 命名并确认 → 右键壁纸选择「在资源管理器中打开」定位本地文件‌。\n文件路径示例：steamapps\\workshop\\content\\431960（壁纸ID对应不同文件夹）。\n批量文件备份\n直接复制整个壁纸存储目录（包含视频、图片、配置文件等原始文件）至外部硬盘或云盘‌。适合需要完整备份动态壁纸交互属性的用户。\n","date":"2025-03-20T21:42:05+08:00","image":"https://hugo-ap0.pages.dev/bg/05.webp","permalink":"https://hugo-ap0.pages.dev/p/wallpaper-%E5%A3%81%E7%BA%B8%E5%A4%87%E4%BB%BD/","title":"wallpaper 壁纸备份"},{"content":"前言 本来想通过符号链接将文件备份到 onedrive，可是软链接对 onedrive 兼容不是很好，某些目录不能上传 onedrive\nrobocopy 和复制区别 ‌robocopy\n是专业的命令行文件复制工具，专为大规模数据迁移设计，支持多线程加速（/MT参数）‌； 支持断点续传（网络中断后可恢复复制）‌3、增量备份（仅复制新增或修改的文件）‌； 可保留文件属性（如时间戳、ACL权限）‌； 提供日志记录（/LOG参数）和错误重试机制（/R和/W参数）‌。 ‌常规复制\n图形界面复制（右键复制粘贴）依赖剪贴板，仅适用于少量文件‌； copy/xcopy命令为单线程操作，无法处理复杂场景（如网络中断恢复）‌； 默认不保留部分元数据（如权限），且无日志记录功能‌。 robocopy 定时同步 1 robocopy \u0026#34;Y:\\usb01\\08_doc\u0026#34; \u0026#34;C:\\Users\\carlos\\OneDrive\\附件\\doc\u0026#34; /MIR /MT:12 /R:2 /W:10 /B /MON:1 /MOT:60 /XF ~$* *.tmp Thumbs.db /MIR：镜像模式（删除目标中多余文件，慎用！） /R:2 /W:10：失败重试 2 次，每次等待 10 秒 /MON:1 /MOT:60：检测到 1 个文件变化后触发同步，每隔 60 分钟检查一次 /MT:64：参数（64 线程），显著提升文件复制速度，尤其是处理大量小文件时。线程数建议设置为 CPU 核心数的 2~4 倍（如 4 核 CPU 用 8~16 线程）。 中文乱码问题 修改为 gbk 编码\n在简体中文系统中，ANSI 等同于 ‌GBK‌；在繁体中文系统中可能映射为 ‌Big5‌，日文系统中则为 ‌Shift_JIS‌‌。\n记事本另存为\n选择 ANSI 编码，保存即可\n设置开机启动 batch 脚本，检查 rclone 盘符是否挂载\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 @echo off setlocal enabledelayedexpansion rem 设置源目录和目标目录 set \u0026#34;source_dir=Y:\\usb01\\08_doc\u0026#34; set \u0026#34;target_dir=C:\\Users\\carlos\\OneDrive\\附件\\doc\u0026#34; rem 检查 Y: 盘是否挂载的函数 :check_drive if exist \u0026#34;Y:\\\u0026#34; ( echo Y: 盘已挂载。 goto start_backup ) else ( echo 等待 Y: 盘挂载... timeout /t 10 \u0026gt;nul goto check_drive ) :start_backup rem 执行 robocopy 命令 robocopy \u0026#34;!source_dir!\u0026#34; \u0026#34;!target_dir!\u0026#34; /MIR /MT:12 /R:2 /W:10 /MON:1 /MOT:60 /XF ~$* *.tmp Thumbs.db /LOG:D:\\script\\backup\\logfile.txt echo 备份完成。 pause vbs 脚本，隐藏 cmd 窗口\n1 WshShell.Run chr(34) \u0026amp;\u0026#34;D:\\script\\backup\\backup.bat\u0026#34;\u0026amp; chr(34), 0 ","date":"2025-03-20T21:09:11+08:00","image":"https://hugo-ap0.pages.dev/bg/11.webp","permalink":"https://hugo-ap0.pages.dev/p/windows-robocopy-%E5%90%8C%E6%AD%A5%E5%A4%87%E4%BB%BD%E4%B8%8D%E5%90%8C%E5%88%86%E5%8C%BA%E7%9A%84%E7%9B%AE%E5%BD%95/","title":"windows robocopy 同步备份不同分区的目录"},{"content":"前言 可能装机工具默认禁用 onedrive 的问题\n操作 同时按Win+R（同时键盘上的Windows图标键和R键），输入gpedit.msc\n在本地组策略中依次点击：计算机配置-管理模板-Windows组件-OneDrive，双击右侧“禁止使用OneDrive进行文件存储”。\n点击“未配置”或“已禁用”，重启电脑。默认\u0026quot;未配置\u0026quot;改成\u0026quot;已禁用\u0026quot;\n","date":"2025-03-20T05:06:30+08:00","image":"https://hugo-ap0.pages.dev/bg/30.webp","permalink":"https://hugo-ap0.pages.dev/p/windows-onedrive-%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80/","title":"windows OneDrive 无法打开"},{"content":"前言 win 11 图片变白\n操作 按下组合键 WIN+R ， 输入 regedit 再按回车运行，这时候会有一个提示，选择 “是”。\n一层一层找到 计算机\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\DriveIcons\\ 这个路径\n根据自己变成空白的硬盘盘符（我这里是盘符 Y），右键点击DriveIcons建立一个跟你硬盘盘符同名的项，然后再次右击刚建立的项，建立一个名为 DefaultIcon的项。\n选中刚刚创建的 DefaultIcon，在右边面板双击默认，然后会弹出一个面板，直接确定即可。此步必须做，否则不生效！！！\n","date":"2025-03-20T04:28:24+08:00","image":"https://hugo-ap0.pages.dev/bg/24.webp","permalink":"https://hugo-ap0.pages.dev/p/windows-%E7%94%B5%E8%84%91%E5%9B%BE%E6%A0%87%E5%8F%98%E7%99%BD/","title":"windows 电脑图标变白"},{"content":"同步中心 控制面板，找到同步中心\n管理脱机文件，点击启用\n这里可以设置可以缓存脱机文件最大值\n资源管理器 右键，点击“始终脱机可用”，即可下载脱机文件\n如果想删除脱机文件，找到对应目录，再次点击即可\n","date":"2025-03-20T03:18:16+08:00","image":"https://hugo-ap0.pages.dev/bg/16.webp","permalink":"https://hugo-ap0.pages.dev/p/windows-smb-%E6%B7%BB%E5%8A%A0%E7%BC%93%E5%AD%98/","title":"windows smb 添加缓存"},{"content":"cp 和 rsync 区别 cp 命令不支持显示进度，改用 rsync\n功能定位\ncp‌：基础文件复制工具，仅将文件或目录完整复制到目标位置，无论源文件是否已存在于目标位置‌。 rsync‌：增量同步工具，通过比较源和目标文件的差异，仅传输修改或新增的部分，适用于频繁更新或大文件场景‌。 传输效率\ncp‌：每次执行均完整复制所有文件，资源消耗较高，尤其对大目录或重复复制场景效率低‌。 rsync‌：仅传输变化部分，节省带宽和时间，支持断点续传（-P参数），适合网络传输或备份任务‌。 使用场景\ncp‌：适合单次本地快速复制小文件或简单目录，无需复杂配置‌。\nrsync‌：\n本地或远程增量同步（如 user@host:/path 格式）‌； 定期备份、镜像服务器、大文件传输等需高效处理的场景‌。 附加功能\ncp -a 可保留权限、时间戳等属性‌； rsync -a 默认保留属性，且支持更多元数据（如符号链接、设备文件）‌。 远程支持\ncp‌：仅限本地操作，远程复制需依赖 scp 或 rsync‌。 rsync‌：原生支持远程路径，可通过 SSH 加密传输（如 -e ssh）‌。 复制命令 rsync 复制目录并显示进度\n1 rsync -avhP /mnt/usb01/content/ /mnt/hd01/wallpaper/content/ -a：归档模式，保留文件权限、时间戳等属性，并递归复制子目录（包含 -r 功能） -v：显示详细传输过程‌。‌ -h：以人类可读格式（如 KB、MB）显示文件大小‌。 -P：等价于 --partial --progress，显示每个文件的传输进度（百分比、速度、剩余时间），并支持断点续传‌。 cp 命令复制目录\n1 cp -r /mnt/usb01/content/ /mnt/hd01/wallpaper ","date":"2025-03-20T02:58:43+08:00","image":"https://hugo-ap0.pages.dev/bg/43.webp","permalink":"https://hugo-ap0.pages.dev/p/ubuntu-%E5%A4%8D%E5%88%B6%E6%98%BE%E7%A4%BA%E8%BF%9B%E5%BA%A6/","title":"Ubuntu 复制显示进度"},{"content":"安装 官网地址\nBill-Stewart/SyncthingWindowsSetup: Syncthing Windows Setup 默认下一步即可\n初始化 设置开启局域网访问\n删除默认文件夹\n添加设备 找到标识\n服务端复制 id\nwindows 端添加远程设备\n服务端添加设备\nwindwos 端添加文件夹 添加文件夹\n设置同步目录，分别是名称和路径\n打勾表示共享给服务端\n仅发送，表示不接受服务端的修改\n扫描并不是开始同步，我也不知道干什么，让他扫就行\n服务端接受分享 添加，接受分享\n设置服务端同步目录\n设置共享\n设置仅接受\n强制同步 服务端仅接受，如果和远程不一样，有一个强制还原的选项，还原远程更改\n同理，如果本地和远程不一样，windows 端会有一个强制还原的选项\n设置开机启动 保存 syncthing.bat 脚本文件\n1 2 # 打开 “记事本” 软件，将以下代码复制进去，另存为 syncthing.bat。 start \u0026#34;Syncthing\u0026#34; syncthing.exe -no-console -no-browser 如果上面的脚本不起作用改用 vbs 脚本\n1 CreateObject(\u0026#34;WScript.Shell\u0026#34;).Run \u0026#34;\u0026#34;\u0026#34;C:\\Users\\carlos\\AppData\\Local\\Programs\\Syncthing\\syncthing.exe\u0026#34;\u0026#34; -no-console -no-browser\u0026#34;, 0 复制脚本文件到 syncthing.exe 同级目录。找到 syncthing.exe 所在目录，将 syncthing.bat 脚本文件复制到该目录。\n将脚本文件快捷方式添加到 “启动” 菜单\n选中 syncthing.bat 脚本文件，右键创建快捷方式 按下 win + R，输入 “shell:startup” 打开 “启动” 文件夹 将快捷方式复制到 “启动” 文件夹 ","date":"2025-03-20T02:24:02+08:00","image":"https://hugo-ap0.pages.dev/bg/02.webp","permalink":"https://hugo-ap0.pages.dev/p/syncthing-windows-%E7%AB%AF%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/","title":"syncthing windows 端使用教程"},{"content":"添加设备 手机端客户端安装地址\nsyncthing/syncthing-android: Wrapper of syncthing for Android. docker 版服务端点击连接，获取标识二维码，用来添加设备。\n手机端顶部选项卡点击“设备”按钮。\n点击二维码添加设备。\n添加文件夹 手机端右上方点击“+”号按钮。\n点击文件夹图标，选择目录。\n选择好目录，点击“允许访问”。\n“文件夹类型”选择“仅发送”。\ndocker 版服务端选择添加文件夹即可。\n设置好同步目录。\n服务端选择“仅接受”。\n服务端忽略删除操作 如果想让服务端忽略发送端（发送端：手机作为发送端）的删除操作，别称：无视删除操作。比如服务端同步好数据，这时候想节省手机内存，想删除手机备份好的数据，又不想影响服务端已经备份好的数据。\n软件网页端“操作-高级-文件夹-Ignore Delete”打勾，即可忽略发送端删除操作。\n选择“文件夹”。\n“忽略删除”选项打勾，然后滑动到底部保存即可。\n","date":"2025-03-20T00:59:22+08:00","image":"https://hugo-ap0.pages.dev/bg/22.webp","permalink":"https://hugo-ap0.pages.dev/p/syncthing-%E5%AE%89%E5%8D%93%E7%AB%AF%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/","title":"syncthing 安卓端使用教程"},{"content":"取消在线订阅 主页 -\u0026gt; 社区中心\n创意工坊 -\u0026gt; 订阅物品\n可以取消在线订阅\n定时更换壁纸 crtl + a 全选点击加号\n点击设置\n登录时自动更换壁纸，也就是开机或者重启软件时候自动换壁纸\n保存播放列表，可以通过快捷键换壁纸\n设置快捷键即可换壁纸，可以创建多个播放列表\n","date":"2025-03-19T23:51:51+08:00","image":"https://hugo-ap0.pages.dev/bg/51.webp","permalink":"https://hugo-ap0.pages.dev/p/wallpaper-%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8%E7%AF%87/","title":"wallpaper 入门使用篇"},{"content":"安装命令 1 2 winget install Rclone.Rclone winget install WinFsp.WinFsp rclone添加alist服务器地址 1 rclone config 输入 n。\n输入名字。这个名字之后命令会用到。\n这里选择 webdav，根据自己的 rclone 版本号选择。\n输入 alist 服务器地址，注意 /dav。\n输入6（根据自己版本号选择，描述一样即可，版本号不同，编号就不痛），再输入用户名，再输入y，后面填两次密码后一路回车即可。\n3 次回车，按 q 退出。\n挂载alist 输入命令即可挂载，该命令是挂载成本地磁盘的形式。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 rclone mount smb: Z: ^ --cache-dir \u0026#34;D:\\rclone_cache\\smb\u0026#34; ^ --vfs-cache-mode full ^ --cache-chunk-size 64M ^ --multi-thread-streams 16 --multi-thread-cutoff 32M --transfers 8 ^ --buffer-size 128M ^ --vfs-cache-max-size 2G --vfs-cache-max-age 6h ^ --vfs-fast-fingerprint ^ --no-modtime ^ --file-perms 0755 ^ --links ^ --dir-cache-time 24h ^ --poll-interval 5m ^ --attr-timeout 5s 注意 --cache-dir D:alist 参数，这里把缓存路径改成 d 盘 alist。\nrclone 403 错误 alist 后台，把权限全部打开即可解决。\nrclone eof 错误 把 alist ftp 驱动改成 smb 即可，可能由于 rclone 不兼容 alist ftp驱动吧。用 raidrive 就没有问题，但是该软件有广告。\n","date":"2025-03-19T21:53:54+08:00","image":"https://hugo-ap0.pages.dev/bg/54.webp","permalink":"https://hugo-ap0.pages.dev/p/windows-%E5%AE%89%E8%A3%85-rclone-%E6%8C%82%E8%BD%BD-alist/","title":"windows 安装 rclone 挂载 alist"},{"content":"游戏装到 d 盘 左上角设置\n添加存储器，把 d 盘设置为默认盘\n关闭开启启动 关闭 steam 开机自启\n管理下载 点击顶部管理下载\n临时转区 将物品添加购物车\n更改国家即可，前提是你得连接外国节点，才可以更改\n这样就可以浏览禁止的内容哦\n","date":"2025-03-18T03:57:02+08:00","image":"https://hugo-ap0.pages.dev/bg/02.webp","permalink":"https://hugo-ap0.pages.dev/p/steam-%E5%88%9D%E5%A7%8B%E5%8C%96%E8%AE%BE%E7%BD%AE/","title":"steam 初始化设置"},{"content":"关闭开机启动 软件右上角点击设置\n关闭开机启动\n","date":"2025-03-18T03:55:06+08:00","image":"https://hugo-ap0.pages.dev/bg/06.webp","permalink":"https://hugo-ap0.pages.dev/p/spotify-%E5%88%9D%E5%A7%8B%E5%8C%96%E8%AE%BE%E7%BD%AE/","title":"spotify 初始化设置"},{"content":"前言 在Spotify平台，歌曲的播放量与知名度、流行范围的关系可参考以下分层标准\n基础知名度 ‌10万-50万播放量‌：在独立音乐人或新兴艺人中，达到这一区间通常意味着作品在特定圈层或垂直领域获得初步传播，开始积累核心听众‌。 ‌50万-100万播放量‌：作品进入区域性流行阶段，可能在小语种市场或细分音乐风格领域形成稳定受众群‌。 进入大众视野（全国流行） 100万-1000万播放量‌：在中等规模国家（如法国、韩国等），这一量级通常标志作品进入主流音乐榜单，具备电台播放和商业合作潜力‌。 ‌1000万-1亿播放量‌：在人口基数较大的国家（如美国、印度），播放量突破千万意味着作品已渗透至大众市场，成为国民级热门单曲，并可能触发平台算法推荐至更高流量池‌。 全球流行 1亿-10亿播放量‌：进入国际主流视野，长期占据全球榜单Top 50，成为跨文化传播的“现象级”歌曲。例如，2025年Spotify“十亿俱乐部”中多数歌曲均具备此类影响力‌。 10亿+播放量‌：全球爆款的标志性门槛，代表作品生命周期超过半年至数年，覆盖多代际听众（如Drake的《One Dance》）。截至2025年3月，Spotify“十亿俱乐部”收录875首歌曲，其中34首为2025年新晋作品‌。 ","date":"2025-03-18T03:40:54+08:00","image":"https://hugo-ap0.pages.dev/bg/54.webp","permalink":"https://hugo-ap0.pages.dev/p/spotify-%E6%92%AD%E6%94%BE%E9%87%8F%E5%88%86%E6%9E%90/","title":"spotify 播放量分析"},{"content":"销量与知名度的关系 基础知名度门槛‌\n销量达到 ‌10万份‌ 通常被视为进入「大众视野」的标志，尤其对独立游戏而言，这类销量已能形成社区讨论热度并吸引媒体关注‌。 若评价数量与销量比例（按30-50倍估算）达到 ‌1000条以上评测‌，对应销量约 ‌3万-5万份‌，可视为初步具备市场存在感‌。 显著知名度标准‌\n50万-100万份‌ 销量属于中大型项目的成功门槛，例如《双影奇境》首周200万销量使其迅速打破发行商纪录并引发直播效应‌。 头部5%的游戏（如《黑神话：悟空》）以 ‌千万级销量‌ 和 ‌10亿美元级营收‌ 定义行业标杆，这类游戏能通过长尾效应持续扩大影响力‌。 回本销量的影响因素 成本结构差异\n独立游戏‌：开发成本低于100万美元的项目，需 ‌1万-5万份‌ 销量回本（按均价14.5美元、扣除30%平台分成及税费后计算）‌。 3A级项目‌：开发成本超1亿元人民币时（如《黑神话：悟空》），需 ‌500万-1000万份‌ 销量方可盈利，且需覆盖宣发和长周期研发成本‌。 ‌区域定价与退款影响\n若销量集中于低价区（如中国、俄罗斯），平均售价可能降至 ‌12-14.5美元‌，回本所需销量需额外增加 ‌20%-30%‌‌。 计入 ‌5%退款率‌ 和 ‌10%税费‌ 后，实际回本销量可能比理论值高 ‌15%-25%‌‌。 总结（关键阈值） 目标 独立游戏 中型项目 3A级项目 ‌知名度 3万-10万份‌ 50万-100万份‌ 500万+份‌ 回本 1万-5万份‌ 10万-50万份‌ 500万-1000万份‌ 质量参考 评测率≥30倍+好评率≥85%‌ 社区热度+长卖效应‌ 口碑发酵+行业标杆‌ ","date":"2025-03-18T03:31:06+08:00","image":"https://hugo-ap0.pages.dev/bg/06.webp","permalink":"https://hugo-ap0.pages.dev/p/steam-%E9%94%80%E9%87%8F%E5%88%86%E6%9E%90/","title":"steam 销量分析"},{"content":"前言 wallpaper 品质配置参考\n根据自己的显卡占用率设置，我使用的是 1060 亮机卡，呵呵\n参数说明 帧率（FPS）\n作用‌：每秒画面刷新次数，60FPS为流畅基准 性能影响‌：实际是其他设置的综合结果表现 优化建议‌：目标锁定显示器刷新率（如60/144Hz） 抗锯齿（AA）\nFXAA：牺牲锐度换性能（性能消耗★） TAA：动态画面更稳定（性能消耗★★） MSAA：4x时性能消耗达★★★★ 性能黑洞‌：8x MSAA可能消耗20%+ GPU资源\n后处理（Post-Processing）\n关键特效‌：\n环境光遮蔽（SSAO/HBAO）：增加场景深度感（消耗★★★） 动态模糊：高速移动增强真实感（消耗★） 性能技巧‌：关闭景深可提升3-5%帧率\n纹理分辨率\n显存依赖‌：4K纹理需要8GB+显存 优化公式‌：显存容量 × 0.75 = 安全纹理质量档位 阴影质量\n硬件杀手‌：软阴影+动态光源时，性能下降可达30%\n层级优化‌：\n分辨率：优先降至1024×1024 距离：缩减30%阴影投射范围 体积照明（Volumetric Lighting）\n性能曲线‌：\n低：约5%性能损耗 超高：可能消耗15% GPU资源 替代方案‌：开启屏幕空间反射替代\n反射效果\n技术分级‌：\n屏幕空间反射（SSR）：性价比首选（消耗★★） 光线追踪反射：性能消耗★★★★★ 折中方案‌：反射质量降至中档，分辨率减半\n性能消耗梯度表 参数等级 低→超高档性能差 阴影质量 18-22% 光线追踪反射 25-40% 体积照明 12-18% 抗锯齿（MSAA 8x） 15-25% 纹理过滤 3-5% ","date":"2025-03-18T02:25:39+08:00","image":"https://hugo-ap0.pages.dev/bg/39.webp","permalink":"https://hugo-ap0.pages.dev/p/wallpaper-%E5%93%81%E8%B4%A8%E8%AE%BE%E7%BD%AE%E5%8F%82%E8%80%83/","title":"wallpaper 品质设置参考"},{"content":"前言 内存条品牌选择中，可参考存储设备（固态/机械硬盘、移动硬盘、U盘等）\n品牌技术积累与可靠性 高端定位品牌‌（类似三星、西数在固态硬盘领域的地位）\n芝奇(G.Skill)‌：主打高性能内存条，适合电竞和超频用户，如幻锋戟系列RGB灯条以高频率（DDR5 6800）和低时序（C34）著称‌。 金士顿(Kingston)‌：类似西数在移动硬盘中的稳定性口碑，骇客神条系列兼容性强，适合主流办公和游戏场景‌。 性价比品牌‌（类似威刚、光威在固态硬盘中的定位）\n威刚(ADATA)‌：XPG系列兼顾性能和价格，适合萌新用户，且支持超频功能‌。 光威(Gloway)‌：国产高性价比代表，采用长鑫颗粒，适合预算有限的用户‌。 性能参数匹配 世代与速度‌（类比固态硬盘的PCIe协议与速度）\n‌DDR5‌：类似NVMe固态硬盘的高传输速率，适合生产力用户（如视频剪辑）或追求极限性能的游戏玩家（需主板支持）‌。 DDR4‌：类似SATA固态硬盘的均衡性能，性价比更高，适合主流用户‌。 容量与颗粒‌（参考机械硬盘的容量需求与存储介质）\n‌普通用途‌：16GB双通道（8GB×2）已足够日常办公和游戏‌。 专业需求‌：32GB及以上容量适合多任务处理或大型软件运行（如3D建模）‌。 颗粒选择‌：优先原厂颗粒（如三星B-die、海力士A-die），稳定性类似TLC固态颗粒的耐用性‌。 ","date":"2025-03-17T20:58:19+08:00","image":"https://hugo-ap0.pages.dev/bg/19.webp","permalink":"https://hugo-ap0.pages.dev/p/%E5%86%85%E5%AD%98%E6%9D%A1%E5%93%81%E7%89%8C%E9%80%89%E6%8B%A9%E4%B8%AD%E5%8F%AF%E5%8F%82%E8%80%83%E5%AD%98%E5%82%A8%E8%AE%BE%E5%A4%87/","title":"内存条品牌选择中，可参考存储设备"},{"content":"Obsidian内置文件快照（需预先启用） 启用文件恢复插件\n点击左下角「设置」→「核心插件」→开启「文件恢复」功能\n恢复历史版本\n在设置界面点击「查看快照」，选择对应时间点的备份文件进行覆盖还原‌\n‌ 或者，命令面板搜索“恢复”即可，crtl + p\n","date":"2025-03-17T20:44:05+08:00","image":"https://hugo-ap0.pages.dev/bg/05.webp","permalink":"https://hugo-ap0.pages.dev/p/obsidian-%E5%A6%82%E4%BD%95%E6%81%A2%E5%A4%8D%E8%AF%AF%E5%88%A0%E6%96%87%E4%BB%B6/","title":"obsidian 如何恢复误删文件"},{"content":"媒体库配置参考 语言和图像语言配置\n元数据大部分都能通过 TheMovieDb 刮削到\n某些敏感元数据刮削不到可以这个选项没有打开\n保存元数据到本地\n不清楚但是按照这个配置，能用就行\n字幕根据自己实际情况，这里 emby 运行逻辑不是很懂。勾上就会有字幕？嗯嗯\n补充说明\n如果 TheMovieDb 还是刮削不到某些冷门元数据，比如 av、里番、3D 里番等等，需要去 github 寻找插件按照即可。有些插件还指定 emby 版本，呵呵呵。\n多版本命名 Emby 中多版本电影的命名规则是将不同版本的同一部电影放在同一个文件夹下，电影文件名为“文件夹名 - 版本”。\n对于 Emby 中的多版本电影命名，为了确保 Emby 能够正确识别并合并显示同一部电影的不同版本（例如 1080p 和 4K 版本），用户需要将所有不同版本的同一部电影放置在同一个文件夹内。在这个文件夹中，每部电影文件的命名应遵循“文件夹名 - 版本”的格式。例如，如果文件夹名为“ABC”，则文件夹内的电影文件可以命名为“ABC - 1080p.mp4”和“ABC - 4K.mp4”等‌。\n剧集刮削不到元数据解决办法 当 EMBY 剧集直接显示原始视频文件名而非刮削信息时，通常是因为视频文件名包含过多信息导致EMBY 无法正确识别。解决方法是将视频文件名修改为规范的“sXXeXX”格式，以便 EMBY 能准确刮削数据。\n千万不能将时间浪费在 season 1 季文件夹上，这是由于视频文件名太复杂导致的。\n","date":"2025-03-17T20:32:57+08:00","image":"https://hugo-ap0.pages.dev/bg/57.webp","permalink":"https://hugo-ap0.pages.dev/p/emby-%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8%E7%AF%87/","title":"emby 入门使用篇"},{"content":"前言 优先通过版本回退解决，避免修改配置文件或删除数据。\nemby 容器更新，导致容器启动失败，第一想到的是卸载新容器，回退旧容器。而不是删除配置文件，别乱搞配置文件，数据丢失得不偿失。\nmd，复制了一份 library.db 文件，并重命名为 library.db.bak ，想回退，md emby 居然不认了，数据库文件重命名不了一点。\n回退旧版容器 ‌停止容器\n1 docker stop \u0026lt;新容器名称或ID\u0026gt; 删除容器\n1 docker rm \u0026lt;新容器名称或ID\u0026gt; 确认旧镜像版本\n查看本地已有的Emby镜像列表，找到稳定版本标签（如v4.7.11）：\n1 docker images | grep emby 重新启动旧版本容器\n使用旧镜像运行容器，并确保挂载原有配置目录：\n1 2 3 4 5 docker run -d \\ --name=emby_old \\ -p 8096:8096 \\ -v /原有配置目录路径:/config \\ linuxserver/emby:\u0026lt;旧版本标签\u0026gt; ","date":"2025-03-17T20:17:51+08:00","image":"https://hugo-ap0.pages.dev/bg/51.webp","permalink":"https://hugo-ap0.pages.dev/p/emby-%E5%AE%B9%E5%99%A8%E6%9B%B4%E6%96%B0%E5%90%8E%E5%90%AF%E5%8A%A8%E5%A4%B1%E8%B4%A5%E7%9A%84%E9%97%AE%E9%A2%98/","title":"emby 容器更新后启动失败的问题"},{"content":"前言 锂电池因化学特性对存放条件敏感，需通过电量管理、环境控制和定期维护延缓老化；而交流电产品因无储能部件且依赖外部供电，存放时仅需基本防护，稳定性更高‌。\n‌锂电池容易放坏的原因 化学活性衰减\n锂电池通过锂离子的嵌入/脱嵌反应工作，长期存放时电极材料会逐渐氧化或分解，导致容量不可逆衰减‌。 高温会加速电解液挥发和电极材料破坏，低温则抑制离子迁移，进一步缩短寿命‌。 自放电特性\n即使未使用，锂电池也会因自放电导致电压下降。若电压低于临界值（如2.5V以下），电池可能永久损坏‌。\n存放条件敏感\n电量要求‌：满电或亏电状态存放会加剧容量衰减，建议保持50%电量‌。 环境要求‌：需在干燥、避光、15-25℃环境中存放，避免高温、潮湿或机械损伤‌。 交流电产品不易放坏的原因 无储能元件依赖\n交流电设备（如家电）直接依赖外部供电，无需内部储能部件，不存在电池老化问题。\n物理元件稳定性高\n主要部件（如电路板、电机等）以物理结构为主，长期存放时仅需避免极端环境（如高温、潮湿），老化速度较慢。\n维护需求低\n无需定期充放电或电量管理，存放时切断电源即可，维护成本更低。\n延长锂电池寿命的关键措施 存放前处理\n电量调整至30%-50%，避免满电或亏电‌。 若为多节串联电池组，可断开部分连接线以减少自放电损耗‌。 定期维护\n每3-6个月检查电压，若低于安全值需及时充电‌。\n环境控制\n选择阴凉、干燥环境，远离火源和金属物体‌。\n","date":"2025-03-17T05:06:55+08:00","image":"https://hugo-ap0.pages.dev/bg/55.webp","permalink":"https://hugo-ap0.pages.dev/p/%E9%94%82%E7%94%B5%E6%B1%A0%E4%BA%A7%E5%93%81%E4%B8%8E%E4%BA%A4%E6%B5%81%E7%94%B5%E4%BA%A7%E5%93%81%E9%80%89%E6%8B%A9/","title":"锂电池产品与交流电产品选择"},{"content":"静态资源加速‌ ‌CDN 分流‌：将 CSS/JS/图片等静态资源托管到国内 CDN（如七牛云、又拍云），或通过 jsDelivr 加速 GitHub 仓库文件‌。\n‌资源压缩‌：使用 Hugo 内置的 minify 功能压缩 HTML/CSS/JS，并通过 ImageOptim 等工具压缩图片‌。\n‌Cloudflare\u0026amp;Hugo 博客‌的加速方案 一、‌托管平台选择与基础加速‌\n静态资源托管方案‌，将 Hugo 生成的静态网站部署至 ‌Cloudflare Pages‌‌ 或 ‌GitHub Pages‌‌，利用其全球 CDN 节点分发内容。\n优先选择 ‌Cloudflare Pages‌，可直接与 Cloudflare CDN 深度集成，支持自动 HTTPS 和自定义域名‌。\n‌自定义域名与回退源设置‌：在 Cloudflare 中绑定自定义域名（如 blog.example.com），并通过 DNS 解析商（如 DNSPod）添加 CNAME 记录指向 Cloudflare 分配的 Pages 域名（如 xxxx.pages.dev）‌。\n启用回退源（Fallback Origin）‌功能，将未缓存请求指向原始托管服务（如 GitHub Pages）‌。\n二、‌国内 CDN 节点优化‌\n‌分线路解析（境内外分流）‌\n使用 ‌DNSPod‌ 的线路分组功能： ‌\n境外流量‌：解析至默认 Cloudflare CDN 节点。 境内流量‌：解析至优选 Cloudflare 国内友好 IP（如通过工具筛选延迟较低的 CN 节点）‌。 工具推荐：通过第三方脚本（如 CF优选IP工具）定期更新优选 IP 列表‌。 ‌ 自选节点与 CNAME 接入‌：在 DNS 解析中，将境内线路的 CNAME 记录指向优选 IP 对应的 Cloudflare 节点域名。\n三、‌缓存与性能调优‌\n‌Cloudflare 缓存规则配置‌\n启用 ‌Always Online‌ 功能，确保网站部分内容在源站不可用时仍可访问‌。\n设置 ‌缓存级别为“标准”‌，并调整 ‌浏览器缓存 TTL 至 4 小时以上‌，减少重复请求‌。\n创建页面规则，针对静态资源（如 CSS/JS/图片）强制缓存并忽略查询字符串‌。 ‌ 资源加速与压缩‌\n使用 ‌Brotli 压缩‌ 替代 Gzip，降低传输体积‌。\n对 Hugo 生成的 CSS/JS 文件，通过 ‌公共 CDN（如 jsDelivr）‌ 加速加载，但需注意与自定义域名的兼容性‌。\n四、‌图片与媒体资源优化‌\n‌图床与 CDN 分离‌：将图片等媒体资源托管至 ‌GitHub 仓库‌，并通过 ‌jsDelivr 或 Cloudflare CDN‌ 加速访问‌。\n使用 ‌PicGo 工具‌ 自动上传图片至图床，并替换 Markdown 中的链接为 CDN 地址‌。 ‌ 懒加载与格式优化‌：在 Hugo 模板中集成 ‌懒加载（Lazy Load）‌ 插件，延迟加载非首屏图片‌。\n转换图片为 WebP 格式，减少文件大小‌。\n五、‌监控与维护‌\n‌速度测试与节点更新‌：使用 ‌ITDOG‌ 或 ‌17CE‌ 多节点测试工具，定期检测国内访问速度‌。\n每 1-2 个月更新一次优选 Cloudflare IP 列表，避免节点失效导致降速‌。 ‌ 异常流量切换‌：在 DNSPod 中启用 ‌D监控（宕机切换）‌，当优选节点不可用时自动切换至备用线路‌。\n六、‌替代方案（低成本）‌\n‌静态页面全量托管‌：将整个 Hugo 网站迁移至 ‌Cloudflare Pages‌ 或 ‌Vercel‌，直接利用其亚洲节点加速‌。\n‌直连 VPS 反向代理‌：在境内部署 Nginx 反向代理服务器，缓存静态内容并转发动态请求至海外源站‌。\n总结 主流方案需结合 ‌Cloudflare Pages 托管 + 境内外分线路解析 + 自选节点优化 + 缓存策略‌，辅以图片分离与懒加载技术。通过 DNSPod 的分流能力和 Cloudflare 的灵活配置，可显著提升 Hugo 博客在国内的访问速度‌。\n","date":"2025-03-17T04:43:50+08:00","image":"https://hugo-ap0.pages.dev/bg/50.webp","permalink":"https://hugo-ap0.pages.dev/p/hugo-%E5%9B%BD%E5%86%85%E8%AE%BF%E9%97%AE%E4%BC%98%E5%8C%96/","title":"hugo 国内访问优化"},{"content":"官方限制 每个仓库仅支持1个自定义域名\n无论是用户/组织主站（username.github.io）还是项目站点（username.github.io/repo），每个仓库的 CNAME 文件中只能包含‌一个域名‌，且仅首个域名生效‌。\n用户/组织主站的特殊限制\n每个 GitHub 账户只能存在一个用户/组织主站仓库（即 username.github.io），且该主站仅能绑定‌1个自定义域名‌‌。\n突破限制的实践方案 多仓库绑定不同域名\n通过创建多个项目仓库（如 project1、project2），每个仓库可独立绑定不同的自定义域名。例如：\nproject1 仓库绑定 domain1.com project2 仓库绑定 domain2.com‌。 通过外部服务实现多域名指向\n利用 DNS 或 CDN 服务（如 Cloudflare）进行域名重定向或转发：\n将多个域名的 DNS 解析指向同一 GitHub Pages 仓库的服务器 IP； 通过 CDN 的 URL 转发规则，将不同域名跳转到目标页面‌。 总结 综上，‌单个 GitHub Pages 仓库仅支持1个自定义域名‌，但通过多仓库或外部服务可实现多域名间接绑定‌。\n","date":"2025-03-17T03:29:46+08:00","image":"https://hugo-ap0.pages.dev/bg/46.webp","permalink":"https://hugo-ap0.pages.dev/p/github-pages-%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A%E8%A7%84%E5%88%99/","title":"GitHub Pages 自定义域名绑定规则"},{"content":"获取工具与基础配置 下载项目文件\n访问 XIU2/CloudflareSpeedTest 的 Releases 页面，下载对应系统的可执行文件（支持 Windows/Linux/macOS）‌。\n解压与运行\nWindows 用户双击运行 CloudflareST.exe； Linux/macOS 用户需通过命令行解压并赋予执行权限： 1 2 3 tar -zxf CloudflareST_linux_amd64.tar.gz chmod +x CloudflareST ./CloudflareST 测速与优选 IP 基础测速命令\n直接运行程序会默认测试 IPv4/IPv6 的延迟和下载速度，输出结果按延迟从低到高排序。示例命令：\n1 ./CloudflareST -dd -tll 90 # 测试延迟≤90ms的IP，并验证下载速度 参数说明：\n-dd：测试下载速度； -tll：限制延迟阈值‌。 筛选最佳 IP\n测速完成后，结果中会标注延迟（Latency）和下载速度（Speed）。推荐选择延迟低且下载速度稳定的 IP 地址‌。\n应用优选 IP 至网站 DNS 解析配置\n登录 Cloudflare 控制台，进入域名管理页面； 修改 A/AAAA 记录，将 IP 地址替换为优选后的 IP； 若需动态更新，可结合 DDNS 工具或定时任务定期执行测速并更新解析记录‌。 CNAME 加速方案（进阶）\n将域名 CNAME 指向已优选 IP 的其他域名； 通过 Cloudflare SaaS 回源，实现加速与负载均衡（需域名已接入 Cloudflare）‌。 其他优化建议 定期更新 IP 列表‌：Cloudflare IP 段可能动态调整，建议每周或每月重新测速‌； 关闭代理工具‌：测速时需关闭 VPN/代理，避免结果偏差‌； ‌多节点备份‌：优选 3-5 个 IP 备用，防止单节点失效‌。 总结 通过上述操作，可有效优化 Cloudflare CDN 的访问速度，降低延迟并提升下载性能。若需进一步加速，可结合 Cloudflare Tunnel 实现免端口访问与内网穿透‌。\n","date":"2025-03-17T02:59:02+08:00","image":"https://hugo-ap0.pages.dev/bg/02.webp","permalink":"https://hugo-ap0.pages.dev/p/cloudflarespeedtest-%E5%AE%9E%E7%8E%B0%E7%BD%91%E7%AB%99%E8%AE%BF%E9%97%AE%E5%8A%A0%E9%80%9F/","title":"CloudflareSpeedTest‌ 实现网站访问加速"},{"content":"前言 如何在 github 页面查看自己 star 的项目\n实操 点击头像\n仓库导航栏点击 stars，即可查看自己 stars 项目了\n","date":"2025-03-17T02:49:26+08:00","image":"https://hugo-ap0.pages.dev/bg/26.webp","permalink":"https://hugo-ap0.pages.dev/p/%E5%9C%A8-github-%E4%B8%8A%E6%9F%A5%E7%9C%8B%E8%87%AA%E5%B7%B1%E5%8A%A0%E6%98%9Fstar%E7%9A%84%E9%A1%B9%E7%9B%AE/","title":"在 GitHub 上查看自己加星（star）的项目"},{"content":"优选 IP 优化原理 节点优选\n通过筛选全球范围内延迟最低、带宽最优的 Cloudflare 节点 IP，将用户请求定向到最佳边缘节点，减少数据传输距离和网络拥堵‌。\n缓存加速\n静态资源（如图片、CSS/JS 文件）缓存在优选节点，用户可直接从边缘节点获取内容，降低源服务器负载和响应时间‌。\n智能路由\nCloudflare 实时分析全球网络状态，动态调整路由路径，避开拥堵或故障线路，提升访问稳定性‌。\n控制台操作流程（优选 IP 配置） 域名准备\n主域名（如 www.example.com）用于常规访问，DNS 解析托管在原有服务商（如阿里云） 次要域名（如 cf.example.com）接入 Cloudflare，用于绑定优选 IP 和源服务器‌。‌ Cloudflare 配置步骤 添加次要域名\n登录 Cloudflare 控制台，添加次要域名并完成 DNS 解析验证‌。\n设置 DNS 记录\n创建 A 或 CNAME 记录（如 cloudflare.example.com），指向源服务器 IP 或域名。 启用代理状态（小黄云图标亮起），开启 CDN 加速‌。 SSL/TLS 设置\n选择“完全”或“灵活”模式，绑定自定义主机名并配置证书‌。\n优选 IP 绑定与分流\n在 DNS 记录中添加优选 IP 的 A 记录（如 优选IP1、优选IP2），设置权重或分线路（如境外线路）‌。 通过 ‌Page Rules‌ 或 ‌Workers‌ 脚本实现动态 IP 调度（如根据用户地理位置分配节点）‌。 性能优化与测试\n缓存策略‌：在 ‌Caching‌ 中设置 Browser/Cache TTL，启用 Tiered Cache 分层缓存‌。 ‌性能测试‌：使用 Cloudflare Observatory 或第三方工具（如 WebPageTest）验证加载速度和首屏时间‌。 动态调度进阶方案 Workers 脚本‌：编写脚本实现智能路由，例如根据用户 IP 所在地区自动分配最优节点‌。 双 CDN 分流‌：国内用户走本地 CDN（如阿里云），境外用户通过 Cloudflare 优选 IP 加速‌。 ","date":"2025-03-17T02:48:02+08:00","image":"https://hugo-ap0.pages.dev/bg/02.webp","permalink":"https://hugo-ap0.pages.dev/p/cloudflare-%E4%BC%98%E9%80%89-ip-%E4%BC%98%E5%8C%96%E7%BD%91%E7%AB%99%E8%AE%BF%E9%97%AE%E9%80%9F%E5%BA%A6%E5%8E%9F%E7%90%86/","title":"Cloudflare 优选 ip 优化网站访问速度原理"},{"content":"相关概念解释 自定义主机名‌\n在 Cloudflare 中，自定义主机名指的是你可以将你的域名（如 www.example.com）指向 Cloudflare 的 DNS 服务器，由 Cloudflare 为你的域名提供 DNS 解析、缓存、安全防护等服务。 通过自定义主机名，你可以利用 Cloudflare 的全球网络来加速你的网站，并享受其提供的安全防护功能。 优选 IP‌\nCloudflare 的优选 IP 功能允许你的网站仅对特定的、可信的 IP 地址范围开放访问。 这可以帮助你减少不必要的流量和潜在的攻击，提高网站的安全性。 需要注意的是，启用优选 IP 可能会限制一些合法的访问，因此需要谨慎配置。 ‌回源\n当 Cloudflare 的缓存中没有用户请求的资源时，Cloudflare 会向你的原始服务器（即“源站”）请求该资源，这个过程被称为“回源”。 回源是 Cloudflare 加速网站的一个必要环节，但过多的回源请求会增加源站的负载和延迟。 因此，优化缓存策略和减少不必要的回源请求是提高网站加速效果的关键。 优选 IP 加速原理 优选 IP 是一种访问控制策略，它允许网站管理员设置仅对特定的、可信的 IP 地址范围开放访问。 通过限制访问来源，优选 IP 可以帮助减少不必要的流量和潜在的攻击，从而提高网站的安全性。 需要注意的是，优选 IP 并不直接加速网站内容的传输，而是通过减少潜在的安全威胁来间接提升网站的整体性能。 使用优选 IP 的访问流程‌\n用户浏览器输入 www.example.com 并发起访问请求。 DNS 服务器将域名解析为对应的 IP 地址（该 IP 地址可能由网站管理员设置为优选 IP）。 如果用户的 IP 地址在优选 IP 列表中，则请求被允许继续；否则，请求可能被拒绝或重定向到其他页面。 请求到达源站，源站处理请求并返回所需资源给用户。 优选 IP 的核心机制与速度优化原理 优选 IP 的功能与作用\n‌并非单纯转发请求‌：优选 IP 不仅用于请求转发，而是通过选择最优的 Cloudflare 节点 IP 地址，优化用户到服务器的网络路径。例如，自动分配距离用户最近的节点，减少数据传输延迟‌。 ‌访问控制与安全防护‌：若用户 IP 在优选列表中，请求会被允许并路由至最优节点；若不在列表内，可能触发安全规则（如拒绝访问或质验证），从而过滤恶意流量‌。 优选 IP 列表的提供方\n‌由 Cloudflare 提供‌：优选 IP 列表是 Cloudflare 基于其全球网络节点动态筛选的优质 IP 地址池，用户无需依赖第三方服务即可启用该功能‌。 动态优化机制‌：Cloudflare 会实时监测网络状态（如节点负载、延迟等），自动更新优选 IP 列表，确保访问路径的最优性‌。 间接提升访问速度的途径\n减少攻击干扰‌：通过优选 IP 过滤非法请求（如 DDoS 攻击流量），降低源站因恶意流量导致的负载过高或服务中断，间接保障正常用户的访问速度‌。 优化传输路径‌：将用户请求引导至低延迟、高带宽的 Cloudflare 节点，避免公网拥堵路径，提升数据传输效率‌。 缓存静态资源‌：若资源已缓存在优选 IP 对应的节点，用户可直接从节点获取内容，无需回源，进一步缩短响应时间‌。 示例流程（用户访问 www.example.com） 用户输入域名后，DNS 解析返回 Cloudflare 优选 IP（如 1.1.1.1）‌。 若用户 IP 合法且匹配优选规则，请求被路由至最近的 Cloudflare 节点。- 若节点已缓存资源，直接返回用户（无需回源）‌。若未缓存，节点向源站请求资源并缓存，后续用户可直接访问缓存内容‌。 非法请求被拦截，源站仅处理合法流量，确保服务稳定性‌。 总结\n优选 IP 是 Cloudflare 提供的网络优化与安全功能，通过动态选择优质节点、过滤攻击流量、缓存资源等机制，间接提升网站访问速度，其核心逻辑在于 ‌路径优化‌ 和 ‌安全防护‌ 的协同作用‌。\n通俗版解释 Cloudflare 自动帮你筛选出性能最好的服务器 IP‌（比如离用户最近的、网络不拥堵的节点）。\nCloudflare 的优选 IP 机制会和它的安全防护（比如防火墙）配合工作：\n如果某个 IP 地址发起大量攻击（比如 DDoS），Cloudflare 会自动把它踢出「优选列表」，或者直接屏蔽它。 正常用户的请求会被引导到「优质路线」，而可疑流量会被提前拦截，‌相当于变相帮你过滤了垃圾流量‌。 Cloudflare 的优选 IP ‌是动态调整的\n某个服务器节点突然卡顿了 → 自动切换到其他节点； 晚上欧洲用户增多 → 自动分配更多欧洲的 IP 给这些用户。你完全不用操心，Cloudflare 自己会在后台实时优化。 总结\n优选 IP = Cloudflare 自动选「最佳路线」的服务器 IP，帮你加速+防堵。\n","date":"2025-03-17T02:08:17+08:00","image":"https://hugo-ap0.pages.dev/bg/17.webp","permalink":"https://hugo-ap0.pages.dev/p/cloudflare-%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%BB%E6%9C%BA%E5%90%8D%E4%BC%98%E9%80%89-ip%E5%9B%9E%E6%BA%90%E6%A6%82%E5%BF%B5/","title":"Cloudflare 自定义主机名、优选 ip、回源概念"},{"content":"前言 在哲学框架中，“是什么、为什么、怎么办”三个层次分别对应不同的思维范畴。\n方法论属于“怎么办”的层次\n核心定位‌：方法论聚焦于“如何解决问题”的实践层面，为“怎么办”提供系统性指导。它通过分析问题阶段、总结规律、制定工具和策略，形成可操作的原则‌。 功能体现‌：当明确“是什么”（定义与本质）和“为什么”（因果与原理）后，方法论负责将理论转化为行动方案。例如，通过归纳法或演绎法推导具体策略‌。 三层次的关系与分工 是什么（What）‌：属于‌认识论‌，界定事物的本质与属性（如定义“方法论”是解决问题的系统理论）‌。 ‌为什么（Why）‌：属于‌因果分析或本体论‌，探究现象背后的原因或原理（如解释方法论为何能解决问题）‌。 怎么办（How）‌：属于‌方法论‌，直接指导实践（如设计股权分配方案、制定员工激励工具等）‌。 方法论的特征 系统性‌：整合科学原理（如逻辑学、系统学）与哲学思维（如唯物辩证法），形成通用框架‌。 普适性‌：适用于多领域问题（如法律风险规避、技术成果权属界定）‌。 工具性‌：提供可复用的“公式化”解决方案（如通过“内因+外因”模型分析问题）‌。 方法论是连接理论与实践的桥梁，在“是什么、为什么、怎么办”体系中居于末端执行层，通过结构化思维将抽象认知转化为具体行动‌。\n","date":"2025-03-17T01:34:38+08:00","image":"https://hugo-ap0.pages.dev/bg/38.webp","permalink":"https://hugo-ap0.pages.dev/p/%E6%96%B9%E6%B3%95%E8%AE%BA%E5%9C%A8%E6%98%AF%E4%BB%80%E4%B9%88%E4%B8%BA%E4%BB%80%E4%B9%88%E6%80%8E%E4%B9%88%E5%8A%9E%E4%B8%AD%E5%B1%9E%E4%BA%8E%E5%93%AA%E4%B8%80%E5%B1%82/","title":"方法论在“是什么、为什么、怎么办”中属于哪一层"},{"content":"域名准备 主域名‌（如a.com），用于对外访问，无需直接接入Cloudflare，但需支持DNS解析‌。 ‌回源域名‌（如b.com或saas.b.com），需通过NS记录完全托管至Cloudflare，并指向源站服务器IP‌。 回源域名配置 DNS解析设置\n添加A记录：将子域名（如origin.b.com）指向源站服务器IP，并开启代理（小黄云）‌。 添加CNAME记录：创建CDN子域名（如cdn.b.com），指向Cloudflare提供的泛播IP（如cloudflare.xxx.xyz），关闭代理‌。 SSL/TLS设置\n进入回源域名的SSL/TLS → 自定义主机名 → 设置回退源为origin.b.com‌。 添加主域名（a.com）作为自定义主机名，并完成TXT验证（需在主域名DNS中添加指定TXT记录）‌。 主域名DNS配置 CNAME记录\n将主域名（a.com）CNAME指向回源域名的CDN子域名（如cdn.b.com），关闭代理‌。\n子域名扩展\n若需添加子域名（如blog.a.com），需在自定义主机名中添加该子域名，并在主域名DNS中配置对应的CNAME记录‌。\n验证与优化 验证生效\n检查主域名解析状态，确保SSL证书已签发（约需10分钟）‌。\n优选IP机制\nCloudflare的泛播IP会根据用户地理位置自动分配最优节点，无需手动指定IP‌。 若需进一步优化，可通过工具（如CloudflareSpeedTest）测试本地最佳IP，并更新CNAME记录‌。 cloudflare.xxx.xyz 域名的来源 Cloudflare自动分配\n此域名是Cloudflare为每个账户‌自动生成的泛播IP入口‌，用于通过CNAME记录间接接入其全球CDN网络。用户无需手动获取，只需在配置SaaS自定义主机名时，根据提示填入系统提供的默认泛播域名格式（如example.cloudflare.net或cdn.example.cloudflare.com）‌。\n查看方式\n在回源域名的Cloudflare控制面板中，进入 ‌SSL/TLS → 自定义主机名 → 回退源设置‌，系统会显示当前账户绑定的泛播域名，格式通常为[随机字符].cloudflare.xxx.xyz‌。\n费用说明 基础功能免费\nCloudflare的泛播IP、CDN加速、SSL证书、基础DNS解析等功能均免费提供，无需绑定信用卡或付费套餐‌。\n高级功能付费\nSaaS自定义主机名‌：需绑定信用卡验证，但基础使用（如回退源配置）仍免费‌。 内网穿透（Cloudflare Tunnel）‌：完全免费，不限流量和节点数量‌。 注意事项\n付费功能‌：SaaS自定义主机名需绑定信用卡或 PayPal‌。\n","date":"2025-03-17T01:06:08+08:00","image":"https://hugo-ap0.pages.dev/bg/08.webp","permalink":"https://hugo-ap0.pages.dev/p/cloudflare-%E9%85%8D%E7%BD%AE%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%BB%E6%9C%BA%E5%9B%9E%E9%80%80%E6%BA%90%E5%AE%9E%E7%8E%B0%E4%BC%98%E9%80%89-ip/","title":"Cloudflare 配置自定义主机回退源，实现优选 ip"},{"content":"前言 Cloudflare for SaaS 网站加速原理，与 cdn 加速的区别？参考了以下视频，优选 ip 的段落\n没有公网IP？cloudflare优选IP，高速内网穿透_哔哩哔哩_bilibili Cloudflare for SaaS 开通条件需要 paypal 账号，绑定银行卡信息，懂得都懂，小心被反薅，免费的东西，永远是最贵的，呵呵。\n核心机制差异 加速对象不同\nCDN‌：主要针对静态资源加速（如图片、CSS、JS等），通过全球330+节点缓存内容，用户访问时直接从最近的节点获取数据‌。 SaaS‌：更注重动态内容加速，通过「回源优化」实现。用户访问主域名时，请求被分流到Cloudflare优选IP节点，再通过跳转域名回源动态内容，减少源站负载‌。 域名管理方式\nCDN‌：直接使用用户域名接入，无需额外域名配置，通过DNS解析到Cloudflare节点‌。 SaaS‌：需两个域名配合：主域名（如blog.a.com）用于前端展示，跳转域名（如b.com）作为回源域名，实现动态请求的分流和缓存策略设置‌。 ‌适用场景\n‌CDN‌：适用于静态资源占比高的网站，如博客、电商产品页等‌。 SaaS‌：适合需要自定义域名、动态内容加速的场景，例如多租户SaaS平台或需要隐藏源站IP的应用‌。 加速效果的共同原理 全球节点覆盖\n两者均依托Cloudflare的全球分布式网络，用户请求会被智能路由至最近的节点，减少物理距离导致的延迟‌。\n负载均衡技术\nCDN通过节点缓存减少源站请求量，同时通过Anycast技术均衡流量压力‌。 SaaS通过运营商分流（优选IP）和动态回源优化，降低源服务器直接暴露的风险‌。 缓存策略优化\nCDN默认缓存静态资源，而SaaS可通过自定义缓存规则（如设置跳转域名的缓存时间）加速动态内容更新频率较低的部分‌。\nSaaS 与优选 IP 的关联性 SaaS 服务包含优选IP机制\nCloudflare SaaS 在动态内容加速时，通过运营商分流策略自动选择「网络质量最优的IP节点」进行回源，这种机制本质上是优选IP技术的应用‌。例如用户访问主域名时，系统会根据运营商类型（如移动/电信/联通）自动分配对应的优选IP‌。\n优选IP并非SaaS专属功能\n优选IP属于CDN优化的一种通用技术，可通过独立工具（如宝塔cf2dns插件）手动更新三网线路的优选IP列表‌。而SaaS将这一过程自动化集成到服务流程中，无需用户手动维护IP列表‌。\nSaaS 如何选择CDN节点 动态分流与缓存策略结合\nSaaS 通过「主域名+跳转域名」双域名架构实现分流：\n主域名（如 blog.a.com）负责接收用户请求，并解析到Cloudflare优选IP节点‌； 跳转域名（如 b.com）作为回退源，动态内容通过缓存规则（如边缘TTL设置）决定是否从最近CDN节点或源站获取‌。 智能路由与网络优化\nCloudflare 基于实时网络质量数据（如延迟、丢包率）选择最优节点，且支持：\n多运营商适配‌：为不同运营商用户分配对应线路的优选IP‌； 负载均衡‌：当某个节点压力过高时，自动切换至备用节点‌。 关键差异与适用场景\n‌维度 独立优选IP ‌SaaS服务 ‌技术目标 提升单线路访问速度 全局动态加速与多租户支持 ‌配置方式 需手动更新IP列表 自动化集成，通过域名策略实现优化 适用场景 简单静态站点或已有CDN补充优化 动态内容为主、需隐藏源站的企业级应用 结论 ‌SaaS ≠ 优选IP‌：优选IP是SaaS实现加速的核心技术之一，但SaaS还包含域名管理、动态缓存等更复杂的服务架构‌； 节点选择逻辑‌：SaaS通过自动化优选IP和智能路由选择最优CDN节点，而独立优选IP仅解决单线路节点优化问题‌。 结论 Cloudflare for SaaS通过‌边缘节点缓存‌、‌智能路由‌、‌协议优化‌和‌自动化管理‌，将内容分发、安全与性能优化整合到全球网络中，显著降低延迟、提升可用性，并简化运维。其核心优势在于将传统需要复杂配置的加速技术（如CDN、SSL、负载均衡）无缝集成，为SaaS提供商及其终端用户提供无缝的快速体验。\nCloudflare for SaaS 是一套‌整合型服务方案‌，专为 SaaS 提供商设计，覆盖域名解析、内容加速、安全防护等核心功能。以下是其关键能力及对应的服务模块：\n一、DNS 智能解析与路由优化\n全球 Anycast DNS 网络‌：通过分布全球的 DNS 节点快速响应用户查询，自动将请求路由到最近的边缘节点，降低解析延迟‌。 分线路解析‌：支持结合国内外 DNS 服务商，实现域名按地域或网络环境分流（例如国内用户解析至优选 IP，海外用户使用默认节点）‌。 二、CDN 加速与内容分发\n静态资源缓存‌：将图片、CSS/JS 等静态文件缓存在全球 300+ 边缘节点，用户就近获取资源，减少回源请求‌。 动态内容优化‌：通过 Argo Smart Routing 动态选择最优传输路径，并结合 TCP 参数优化（如窗口调整、连接复用）提升动态请求响应速度‌。 边缘计算（Workers）‌：在边缘节点运行 JavaScript 代码，直接处理身份验证、API 转发等逻辑，减少回源压力‌。 三、安全与防护能力\nSSL/TLS 全托管‌：自动为自定义域名签发和管理 SSL 证书，支持免费泛域名证书，避免手动续期风险‌。 ‌DDoS 防护与 WAF‌：在边缘层拦截大规模攻击和恶意流量（如 SQL 注入、XSS），保护源服务器稳定运行‌。 流量加密与合规性‌：通过 HTTPS 强制跳转、HSTS 等策略保障数据传输安全，满足企业级合规需求‌。 四、统一管理与扩展性\n自定义主机名（Custom Hostnames）‌：支持客户绑定独立域名（如 client.yoursaas.com），通过 API 或控制台统一管理证书和流量策略‌。 混合解析方案‌：允许 SaaS 提供商自建 DNS 服务器或使用第三方服务，仅将 CDN 和防护功能托管至 Cloudflare，提升灵活性‌。 数据分析与监控‌：提供实时流量统计、攻击日志和性能报告，辅助优化服务策略‌。 ","date":"2025-03-16T23:59:41+08:00","image":"https://hugo-ap0.pages.dev/bg/41.webp","permalink":"https://hugo-ap0.pages.dev/p/cloudflare-for-saas-%E4%B8%8E-cdn/","title":"Cloudflare for SaaS 与 CDN"},{"content":"前言 阿里云云解析 DNS / 腾讯云 DNSPod 支持境内外分线解析，blog.uuanqin.top 将根据用户 IP 选择合适的线路。由于 blog.uuanqin.top 配置的是 CNAME 的记录类型，访客对于分线过程无感知，浏览器地址栏不变。\n境内用境内 CDN，境外用境外 CDN，取长补短。为了更加节省开支或避免由于攻击造成的高额账单，国内线路可以不用 CDN，直接连接国内源站。\n阿里云云解析 DNS / 腾讯云 DNSPod 支持境内外分线解析，blog.uuanqin.top 将根据用户 IP 选择合适的线路。由于 blog.uuanqin.top 配置的是 CNAME 的记录类型，访客对于分线过程无感知，浏览器地址栏不变。\n至于国内 CDN 或源站的选择看你自己的情况，文章主要将介绍两个操作重点：\n使用腾讯云 DNSPod 进行线路选择 CNAME 方式接入 Cloudflare dnspod 实现网站国内外分流，需两个域名配合。免费域名托管到 Cloudflare 开启免费 cdn，收费域名托管在 DNSPod，用来实现 dns 负载均衡（别称智能 dns???）\nCloudflare 控制台 根据自己情况，添加 dns 记录，用来开启 Cloudflare cdn 服务。我这里填写免费域名，用来开启 cdn\nDNSPod 控制台 DNSPod 配置 3 条线路类型：国内、国外、默认。国内路线解析到国内源站，国外线路解析到 Cloudflare 免费 cdn 域名，实现国内外分流\n验证 连接机场节点测试，返回 Cloudflare 特有的标记\n关闭机场节点测试，返回国内源站特有信息。\n国内外测试返回不同的信息，证明 DNSPod dns 负载均衡配置成功。\n","date":"2025-03-16T23:39:50+08:00","image":"https://hugo-ap0.pages.dev/bg/50.webp","permalink":"https://hugo-ap0.pages.dev/p/dnspod-%E5%AE%9E%E7%8E%B0%E7%BD%91%E7%AB%99%E5%9B%BD%E5%86%85%E5%A4%96%E5%88%86%E6%B5%81%E5%A2%83%E5%A4%96%E6%8E%A5%E5%85%A5-cloudflare/","title":"dnspod 实现网站国内外分流（境外接入 Cloudflare）"},{"content":"前言 pages 服务如何套 cloudFront cdn，加速国内网络。前提，必须拥有一张国内信用卡，不是储蓄卡。aws 账号不要作弊！不要作弊！不要作弊！\nCloudFront 免费套餐 1 2 3 4 5 AWS 免费套餐 1TB 的数据传出 1000 万次 HTTP 或 HTTPS 请求 200 万次 CloudFront 函数调用 每个月，永远免费 原理解析 Cloudflare 的模式\n你需要在你购买域名的网站(比如可能是阿里云，可能是 namesilo，可能是 freenom 等等)那边把你的域名服务器(英文NameServer，一般简称NS)修改为 Cloudflare 的NS服务器，也就是说，需要 Cloudflare全面接管你的域名，接管后，你想要添加DNS解析(添加A记录)，就需要在 Cloudflare 中添加，而不是在你购买域名的服务商那边添加，添加解析时，把小云朵的开关打开，就会走 cdn，不打开就不会走 cdn。\nCloudFront 模式\nAWS 的 CloudFront 与 Cloudflare 工作模式不同，你无需(也无法)把你的域名交给 CloudFront 接管，要使用 CloudFront 做cdn，你需要准备两个域名：\n你要套cdn的域名(A域名)：假设为“aa.test.com”； 源域名(B域名)：假设为“bb.test.com”。cdn是用于加速用的，你需要告诉cdn你要加速的内容(图片、视频、网站)存放在哪台服务器上，但不能填ip，只能填域名，所以你需要解析一个域名到你要加速的服务器上，这个域名就叫“源域名”。 CloudFront cdn 加速原理：就是把B域名(bb.test.com)解析到你的服务器上，然后在 CloudFront 的“选择源域”中填写B域名，这样 CloudFront 就知道你要加速的服务器是哪个服务器，最后它会自动生成一个xxx.cloudfront.net域名作为加速域名，然后你需要把你的网站域名(即你要套cdn的域名)“aa.test.com” cname 到“xxx.cloudfront.net”，最终效果就是你访问aa.test.com其实是在访问xxx.cloudfront.net(当然这是 cname，不是 301/302 跳转)，而xxx.cloudfront.net是 CloudFront 的域名，它会对应前面B域名所对应的那个网站。\n举例说明 假设你现在有如下域名和服务器\n1 2 3 A域名：aa.test.com B域名: bb.test.com 服务器：11.22.33.44 假设你想把A域名(aa.test.com)套到cloudflare cdn上，用cdn来加速这个域名； 那么你需要先把B域名(bb.test.com)解析到你的服务器(11.22.33.44)； 然后把B域名(bb.test.com)填到 CloudFront 的“选择源域”里，把A域名(aa.test.com)填到“备用域名(CNAME)”里(这一栏与前一栏不是挨着，需要往下滚动很多才能看到)； 然后填好其它选项后，最终创建好之后，它会生成一个“xxx.cloudfront.net”格式的域名，这个域名就是 CloudFront 给你分配的加速域名，比如你之前访问一张图片是这样访问的：aa.test.com/imgs/1.jpg，而用了cdn之后就是：xxx.cloudfront.net/imgs/1.jpg； 按第4步的说法，虽然cdn可以加速，可是域名就变了，这是不可接受的，这就要用到前面第3步填的“备用域名”了，其实我觉得把它叫“自定义域名”更好一点，你需要添加一条DNS解析(CNAME记录)，把你在“备用域名”那一栏填的那个域名(aa.test.com)添加一个cname，对应到 CloudFront 给你分配的加速域名“xxx.cloudfront.net”，最终的请求的流向为\n1 aa.test.com ====cname===\u0026gt; xxx.cloudfront.net ===\u0026gt; CDN服务器 ===bb.test.com===\u0026gt; 源服务器 aws 控制台 打开以下地址，点击注册。创建账号不要作弊！不要作弊！不要作弊！\nAmazon CloudFront 内容分发网络(CDN)_免费CDN加速-AWS云服务 登录控制台，搜索 CloudFront 服务，\n创建分配\n然后在下图的“选择源域”中填写一个“源域名”\n注意这个域名不能是你要套cdn的域名，这个域名只是用来告诉 CloudFront：“喂，你要加速的内容是abc.examle.com服务器中，记得给它加速哟”；它只能填域名，不能直接填ip，所以我们需要解析一个域名指向这个ip(你VPS的ip)，用域名的方式来告诉 CloudFront，告诉它要给哪台服务器的内容加速，这个域名我们叫“源域名”，它指向将要被加速的“源服务器”(就是你的VPS)；匹配查看器，其实就是匹配浏览器，“查看器”其实是browser的翻译，本来应该翻译为浏览器的，这aws的翻译也是厉害，不知道为什么会翻译成查看器的。\n接着往下，这些按默认就可以。这里选择源域填了之后，自动和前面的一样，不用理会。\n缓存策略选择“CachingDisabled”(禁用缓存)，源请求策略选择“AllViewer”。这里能禁用就禁用，其他服务需要收费，aws 服务小心一点。\n禁用防火墙，这是收费服务\n这里“价格与级别”，看你的服务器在哪儿，一般来说第一个和第三个都可以，仅北美和欧洲肯定不行，因为你在国内是亚洲，它不对亚洲加速的话，你要它来干嘛。这个价格可以不用太在意，因为你个人使用不超过免费用量是不会收费的。特别注意这里的“备用域名(CNAME)”一栏要填“你真正要套cdn的域名”(就是你的网站域名，就是你要加速的域名)\n这里要选择证书，点击“请求证书”来申请一个证书，点击后它会在另一个标签中打开新页面，这个证书不需要我们源域名(bb.test.com)或网站域名(bb.test.com)的证书，就是说这个证书归这个证书，跟你自己域名的证书无关\n默认下一步即可，证书认证，不然 cdn 加速失败\n以 *.baidu.com 为例子，填你拥有的地址，dns 验证，默认下一步即可。\n在域名控制台添加对应的记录，添加完等待认证成功即可。\n认证成功截图\n回到之前请求证书的地方，点击右侧的“刷新”按钮，然后下拉菜单中就可以选择刚刚请求的证书了\n下图都默认就行，或者把 http3 也选上，最终点“创建分配”\n可以看到显示创建成功，它会给你分配一个“分配域名”，然后下边还会有一个“备用域名”，这时你就会比较明白什么叫备用域名了，因为它已经给你分配了，你直接用它分配的域名就能用，但是用我们自己的域名通过添加cname后，也是可以走cdn加速的，所以才叫“备用域名”\n这两个域名都可以用来访问你的网站，只不过备用域名的好处就是自定义，更像是你自己的域名，而自动分配的域名就统一是 CloudFront 的域名(如果是做代理用的话，用 CloudFront 分配的域名也没什么，就是可能不容易记住)。\nwww.carlos2016.cfd 为 dcrl3j7vhd2m7.cloudfront.net 别名\n如果你想使用自定义域名(即上图的“备用域名”)，你需要在域名解析服务商那边添加一个cname记录，把自己要套cdn的域名作为名称，而把 CloudFront 给你分配的域名作为“目标”，添加之后就可以使用它了。\n按照本例的示例域名，aa.test.com就是套了cdn的域名，你用aa.test.com访问你的网站就是走了cdn的，而bb.test.com则是一个用来中转用的域名，真实使用的时候并不使用它\n1 aa.test.com ====cname===\u0026gt; xxx.cloudfront.net ===\u0026gt; CDN服务器 ===bb.test.com===\u0026gt; 源服务器 服务器端操作 CloudFront 会通过443端口和80端口，即https和http协议去请求你的服务器，你必须在你的服务器配置前面所说的“A域名”(套cdn的域名)和“B域名”(源域名)，如果是nginx，则server_name应该把aa.test.com和bb.test.com都写上\n1 2 3 4 5 server { listen 80; server_name aa.test.com bb.test.com; …… } bb.test.com作为源域名，不用说肯定要配置的，不然CDN服务器没法通过这个域名获取到源站的内容，而aa.test.com是cname到xxx.cloudfront.net，理论上来说aa.test.com并没有直接参与访问你服务器的内容，为什么它也要在nginx中配置呢？\n原因是，你在浏览器(或其它客户端)发起请求的时候，用的是aa.test.com，虽然DNS那边最终会把cname的域名(即xxx.cloudfront.net)对应的ip返回，但浏览器并不知道这个ip是cname那边的，所以GET请求中header中的Host值还是aa.test.com，这个请求最终会被CDN服务器转发到你的VPS中，那么VPS中的nginx接收到这个请求，就会根据Host值判断应该用哪个server模块来处理你的请求(如果你同一个端口有多个模块的话)，当然如果同一端口只有一个模块，其实server_name可以不写bb.test.com，因为只有一个它默认就进去了，但建议还是写比较好。\n另外，server模块中的证书，一般来说用通配符证书都是能匹配上，如果是单独指定多个域名，申请证书时记得把aa.test.com和bb.test.com的证书都加上。\npages 服务 cdn 加速 填写 github 分配的地址即可，操作和上面的一样\n域名控制台添加 cname 记录，将自己购买的域名指向 CloudFront 分配的域名\npages 自定义域名填写自己购买的域名\n然后 cmd 测试，返回数据出现 CloudFront 特有的标记，就证明 cdn 开启成功\n点击以下在线测试工具，就会发现中国绿\n在线ping_多地ping_多线路ping_持续ping_网络延迟测试_服务器延迟测试 ","date":"2025-03-16T22:01:59+08:00","image":"https://hugo-ap0.pages.dev/bg/59.webp","permalink":"https://hugo-ap0.pages.dev/p/pages-%E6%9C%8D%E5%8A%A1%E5%A5%97-cloudfront-cdn/","title":"pages 服务套 cloudFront cdn"},{"content":"前言 域名解析中，在控制台添加 a 记录指向任意 ip 地址，就能正常解析？\n流程 添加A记录\n在域名注册商的管理后台（如GoDaddy、Namecheap等）进入DNS解析设置页，添加一条 ‌A记录\n1 2 类型 a 主机 @ 指向到 110.242.68.66 类型 a 主机 www 指向到 110.242.68.66 根据自己实际情况填写\n保存并等待生效\n提交设置后，DNS解析通常 ‌10分钟-24小时‌ 内生效，可通过 ping 域名 或在线工具检测是否解析到目标IP‌。\n域名解析的权限逻辑 A记录解析的主动权在域名所有者\n只要拥有域名的管理权限，即可在域名注册商后台添加A记录指向任意IP地址‌。域名A的所有者可将A记录指向你的服务器IP，但这不意味着该域名能直接访问你的服务器内容。\n服务器端的访问控制\n若服务器未配置针对该域名的 ‌虚拟主机（Virtual Host）‌，访问请求可能被拒绝或显示默认页面‌。如果服务器未绑定该域名，即使解析成功，用户也无法正常加载目标内容‌。\n实际访问的限制条件 服务器绑定域名\n需在Web服务器（如Nginx/Apache）中明确配置域名绑定，仅允许特定域名访问对应网站内容‌。\n‌示例配置（Nginx）\n1 2 3 4 5 server { listen 80; server_name your-domain.com; # 仅允许your-domain.com访问 root /var/www/html; } 防火墙与端口限制\n服务器防火墙需开放 ‌80/443端口‌ 以允许HTTP/HTTPS流量‌。若服务器设置白名单或安全组策略，需额外允许来源IP或域名‌。\nHTTPS证书约束\n若启用HTTPS，SSL证书需与访问域名匹配。其他域名因证书不匹配会被浏览器拦截‌。\n","date":"2025-03-16T05:34:40+08:00","image":"https://hugo-ap0.pages.dev/bg/40.webp","permalink":"https://hugo-ap0.pages.dev/p/%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90%E5%85%A5%E9%97%A8%E5%8F%AA%E9%9C%80-a-%E8%AE%B0%E5%BD%95%E5%B0%B1%E8%83%BD%E6%8C%87%E5%90%91%E6%9C%8D%E5%8A%A1%E5%99%A8/","title":"域名解析入门：只需 A 记录就能指向服务器？"},{"content":"前言 如何关闭搜狗输入法弹窗\n实操 打开设置，呵呵，哪里打开都可以\n把所有推荐都手动关闭，呵呵呵\n","date":"2025-03-15T04:09:42+08:00","image":"https://hugo-ap0.pages.dev/bg/42.webp","permalink":"https://hugo-ap0.pages.dev/p/%E6%90%9C%E7%8B%97%E8%BE%93%E5%85%A5%E6%B3%95%E6%B0%B8%E4%B9%85%E5%85%B3%E9%97%AD%E5%BC%B9%E7%AA%97/","title":"搜狗输入法永久关闭弹窗"},{"content":"nextcloud Nextcloud 是 ownCloud 创始人发起的分支项目，是一款用于自建企业云存储（私有网盘）的开源软件。支持 PC、IOS 和 Android 三个同步客户端，用户可以很方便地与服务器上存储的文件、日程安排、通讯录、书签等重要数据保持同步。它还支持将数据保存到第三方存储中：Amazon S3、Dropbox、FTP、Google Drive、SMB、WebDAV、SFTP等。\n连接外部存储 登录 Nextcloud 后台，通过 应用 管理，启用 External storage support 扩展。\n打开：【管理设置】\u0026gt;【外部存储】\u0026gt;【Add storage】\u0026gt;【External Storage】，选择一个外部存储服务。\n根据实际情况配置，连接到相应的对象存储。建议选择本地，也可以选择 ftp、webdav 等方式挂载。我尝试过 webdav 挂载 alist，但是 onlyoffice 打不开 alist 上的文件，换成本地就能正常打开。\n手动安装扩展 nextcloud 官方插件地址：https://apps.nextcloud.com/\n点击图片红框下载即可。\n将下载的文件解压到 docker 容器中的 /var/www/html/apps 目录即可。每个版本的扩展目录都不一样。\n我是如下版本号。\n具体目录参考官方文档：https://hub.docker.com/_/nextcloud/\n集成 onlyoffice 手动安装完 onlyoffice，在“已禁用的应用”中启用。我这里已经启用，所以没有 onlyoffice。\nonlyoffice 配置如下。记得关闭 jwt，并且外部存储挂载方式选择“本地”。\nnextcloud 默认使用系统盘，使用系统盘兼容性最好，打开 onlyoffice 不会报错，通过 webdav 方式挂载 alist 会报错。或者也可以使用“本地”方式挂载。\nonlyoffice 集成 nextcloud 是不能直接保存 office 本地文件，也就是说在线编辑完，是不能对本地文件直接修改。但是会在线保存文件，通过 web 端访问，上一次修改的记录还在，要保存，必须保存为副本，然后下载到本地。\n集成 mail 手动安装 mail 扩展，实现邮件统一管理。不过需要邮件服务器密码，不是账号密码。所以没有手机号，是登录不了谷歌邮箱的，没有手机号，是获取不了应用密码，也就无法登录。\n集成 talk 手动安装 talk，实现局域网文本传输。\n","date":"2025-03-15T02:46:46+08:00","image":"https://hugo-ap0.pages.dev/bg/46.webp","permalink":"https://hugo-ap0.pages.dev/p/onlyoffice-%E5%AF%B9%E6%8E%A5-nextcloud%E4%BB%A5%E5%8F%8A%E5%B8%B8%E7%94%A8%E6%89%A9%E5%B1%95/","title":"onlyoffice 对接 nextcloud，以及常用扩展"},{"content":"前提说明 onlyoffice 对接 alist 并不能实现在线编辑，而且 onlyoffice 在手机上表现得很不好，连滑动文档都不可以，应该是专为电脑端开发软件。\n代替方案，通过同步软件同步 office 文件，然后手机用专业 office 软件打开，也能实现多人编辑，缺点就是步骤繁琐。\nOnlyOffice Document Server 并不能直接打开本地 Office 文件进行编辑，必须配合网盘使用，才能实现文档的在线预览和编辑功能，类似腾讯文档，区别就是可以内网使用。\nonlyoffice 对接 alist，必须选用版本 7.1.1，因为此版本不会强制 jwt 校验，不然 onlyoffice 打开不了 alist 的 office 文档，必须自己参考官方文档手动开发。\nonlyoffice 对接 alist 原理：\nalist 请求 nginx 中的 view.html。 view.html 请求 onlyoffice。 所以 onlyoffice 对接 alist，是通过手动编写 view.html 文件实现对接的。\n安装 onlyoffice 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 services: onlyoffice-documentserver: container_name: onlyoffice-documentserver image: onlyoffice/documentserver:7.1.1 depends_on: - onlyoffice-postgresql - onlyoffice-rabbitmq environment: - DB_TYPE=postgres - DB_HOST=onlyoffice-postgresql - DB_PORT=5432 - DB_NAME=onlyoffice - DB_USER=onlyoffice - AMQP_URI=amqp://guest:guest@onlyoffice-rabbitmq # Uncomment strings below to enable the JSON Web Token validation. - JWT_ENABLED=false # - JWT_SECRET=secret # - JWT_HEADER=Authorization # - JWT_IN_BODY=true ports: - \u0026#39;9875:80\u0026#39; - \u0026#39;446:443\u0026#39; stdin_open: true restart: always stop_grace_period: 60s volumes: - ./data:/var/www/onlyoffice/Data - ./log:/var/log/onlyoffice - ./lib:/var/lib/onlyoffice/documentserver/App_Data/cache/files - ./public:/var/www/onlyoffice/documentserver-example/public/files - ./fonts:/usr/share/fonts onlyoffice-rabbitmq: container_name: onlyoffice-rabbitmq image: rabbitmq restart: always expose: - \u0026#39;5672\u0026#39; onlyoffice-postgresql: container_name: onlyoffice-postgresql image: postgres:12 environment: - POSTGRES_DB=onlyoffice - POSTGRES_USER=onlyoffice - POSTGRES_HOST_AUTH_METHOD=trust restart: always expose: - \u0026#39;5432\u0026#39; volumes: - ./postgresql_data:/var/lib/postgresql volumes: postgresql_data: 将 view.html 部署到 nginx view.html 内容如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;OnlyOffice Viewer\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div id=\u0026#34;placeholder\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;script type=\u0026#34;text/javascript\u0026#34; src=\u0026#34;https:/onlyoffice/web-apps/apps/api/documents/api.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; function getQueryParamValue(name) { const searchParams = new URLSearchParams(window.location.search); return searchParams.get(name); } const url = decodeURIComponent(getQueryParamValue(\u0026#34;src\u0026#34;)); const fileName = url.substring(url.lastIndexOf(\u0026#39;/\u0026#39;) + 1, url.lastIndexOf(\u0026#39;?\u0026#39;) != -1 ? url.lastIndexOf(\u0026#39;?\u0026#39;) : url.length); const fileExtension = fileName.split(\u0026#39;.\u0026#39;).pop(); const docEditor = new DocsAPI.DocEditor(\u0026#34;placeholder\u0026#34;, { \u0026#34;document\u0026#34;: { \u0026#34;fileType\u0026#34;: fileExtension, \u0026#34;permissions\u0026#34;: { \u0026#34;edit\u0026#34;: false, \u0026#34;comment\u0026#34;: true, \u0026#34;download\u0026#34;: true, \u0026#34;print\u0026#34;: true, \u0026#34;fillForms\u0026#34;: true, }, \u0026#34;title\u0026#34;: fileName, \u0026#34;url\u0026#34;: url, }, \u0026#34;editorConfig\u0026#34;: { \u0026#34;lang\u0026#34;: \u0026#34;zh-CN\u0026#34;, \u0026#34;mode\u0026#34;: \u0026#34;view\u0026#34;, }, \u0026#34;height\u0026#34;: \u0026#34;1080px\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;desktop\u0026#34;, }); \u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 其中的https:/onlyoffice/web-apps/apps/api/documents/api.js 地址的domain 替换为自己onlyoffice 的地址。\nalist 预览配置 alist 预览配置指向 nginx 地址即可。\nonlyoffice 错误：“文档安全令牌未正确形成。” 解决方案：禁用jwt，并且重启服务。\n配置文件修改为：JWT_ENABLED=false\n或者容器中修改：/etc/onlyoffice/documentserver/local.json\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 \u0026#34;token\u0026#34;: { \u0026#34;enable\u0026#34;: { \u0026#34;request\u0026#34;: { \u0026#34;inbox\u0026#34;:false, \u0026#34;outbox\u0026#34;:false }, \u0026#34;browser\u0026#34;: false }, \u0026#34;inbox\u0026#34;: { \u0026#34;header\u0026#34;: \u0026#34;Authorization\u0026#34; }, \u0026#34;outbox\u0026#34;: { \u0026#34;header\u0026#34;: \u0026#34;Authorization\u0026#34; } }, 将 3 个选项修改为 false。\nonlyoffice 文档下载失败 原因是被禁用了私有IP访问服务，需要打开。\n修改配置文件：/etc/onlyoffice/documentserver/default.json\n1 2 3 4 \u0026#34;request-filtering-agent\u0026#34; : { \u0026#34;allowPrivateIPAddress\u0026#34;: true, \u0026#34;allowMetaIPAddress\u0026#34;: true }, vim 操作说明 命令模式 / 可以搜索关键字，输入模式小写 n 寻找下一个，大写 N 寻找上一个。\n","date":"2025-03-15T02:46:09+08:00","image":"https://hugo-ap0.pages.dev/bg/09.webp","permalink":"https://hugo-ap0.pages.dev/p/onlyoffice-%E5%AF%B9%E6%8E%A5-alist/","title":"onlyoffice 对接 alist"},{"content":"前言 架构、系统、框架、方法论并非描述同一事物，不要混淆概念\n核心定义差异 系统\n由关联的个体组成，按规则协作形成整体能力的实体。例如：电商系统由订单、支付、库存等子系统构成，各子系统通过接口规则协作完成交易‌。\n架构\n系统的顶层结构设计，包含子系统/模块/组件的划分、协作关系及约束原则。例如：微服务架构通过服务拆分、API网关、容错机制定义技术路线‌。\n框架\n解决特定问题的半成品工具或规范，提供可直接使用的技术能力。例如：Spring框架提供依赖注入、事务管理等基础功能，开发者基于此扩展业务逻辑‌。\n方法论\n解决问题的理论体系或指导原则，不涉及具体实现。例如：敏捷开发方法论强调迭代交付，但不会直接生成代码‌。\n层级关系与协作模式 概念 层级定位 协作关系示例 系统 实体层（实际运行的软件） 基于架构设计实现功能，依赖框架加速开发‌ 架构 结构层（设计蓝图） 指导系统实现，可能通过框架落地核心机制‌ 框架 工具层（可复用技术组件） 受架构约束，为系统提供基础能力‌ 方法论 抽象层（理论指导） 驱动架构设计过程（如DDD方法论）‌ 混淆场景与区分标准 架构 vs 框架\n架构是结构设计（如分层架构），框架是具体实现工具（如Spring MVC框架）‌ 架构决策可借助框架落地，但架构本身不包含代码‌。 系统 vs 架构\n系统是实体，架构是系统的抽象描述。例如：微信是系统，其架构描述聊天/支付等模块的交互关系‌。\n方法论 vs 架构\n方法论是设计思想（如微服务设计原则），架构是方法论指导下的具体结构输出‌。\n总结 系统‌是实体，‌架构‌是其结构，‌框架‌是构建工具，‌方法论‌是设计指导思想。 实际开发中：方法论 → 架构设计 → 选择框架 → 实现系统‌。 若混淆这些概念，可能导致技术选型偏差（如误将框架等同于架构）或设计缺乏扩展性（如忽略方法论指导）。需根据目标层级明确概念边界。 在软件工程的知识体系中，“方法论→架构设计→选择框架→实现系统”这一递进链确实存在更抽象的上层概念。根据现有理论体系和实践积累，可将其抽象层次进一步向上延伸至哲学层面的元模型和思维范式。\n在抽象层次体系中，现实生活中的做事策略属于‌方法论与架构设计之间的战术层‌。\n","date":"2025-03-15T02:02:36+08:00","image":"https://hugo-ap0.pages.dev/bg/36.webp","permalink":"https://hugo-ap0.pages.dev/p/%E5%8C%BA%E5%88%86%E6%9E%B6%E6%9E%84%E7%B3%BB%E7%BB%9F%E6%A1%86%E6%9E%B6%E6%96%B9%E6%B3%95%E8%AE%BA/","title":"区分架构、系统、框架、方法论"},{"content":"前言 在 Obsidian 知识管理体系中，标签与分类是两种不同的组织结构\n分类\n主要通过文件夹实现专题式管理，适用于纵向层级划分（例如：读书笔记/先秦文学/五经）‌ 标准分类通常采用单值模式，即一篇笔记默认归属一个文件夹‌ 标签\n侧重横向维度拓展，支持多重属性标注（例如：#时间管理 #工作效率） 天然支持多值体系，允许无限叠加关联标签‌ 实操 这是错误案例，根据分类定义，不可能有多个值\n不确定分类就默认为空即可，不然不方便查找\n","date":"2025-03-15T01:11:27+08:00","image":"https://hugo-ap0.pages.dev/bg/27.webp","permalink":"https://hugo-ap0.pages.dev/p/obsidian-%E4%B8%AD%E6%A0%87%E7%AD%BE%E4%B8%8E%E5%88%86%E7%B1%BB/","title":"obsidian 中标签与分类"},{"content":"前言 我 obsidian 只装了图片链接插件，比如移动文件的时候，自动批量修改图片链接。obsidian 默认修改图片链接并不好用，有时候生效，有时候不生效，很奇怪。\n插件安装 安装第三方插件\n开启开关，即可自动更新笔记图片\n","date":"2025-03-15T00:20:56+08:00","image":"https://hugo-ap0.pages.dev/bg/56.webp","permalink":"https://hugo-ap0.pages.dev/p/obsidian-%E5%9B%BE%E7%89%87%E9%93%BE%E6%8E%A5/","title":"obsidian 图片链接"},{"content":"前言 介绍 github pages 默认 cdn 服务\n介绍 GitHub Pages 默认启用了基础的 CDN 加速服务，但其加速范围主要面向全球网络而非特定区域。\n‌默认 CDN 情况‌\nGitHub Pages ‌自带基础 CDN 加速‌，无论使用默认的 xxx.github.io 域名还是自定义域名，均通过 GitHub 的 CDN 分发静态资源‌。 该 CDN 的节点分布以‌海外为主‌，国内访问时可能出现速度不稳定或延迟较高的情况‌。 加速优化方案\n若需提升国内访问速度，可额外配置第三方 CDN 服务\n海外 CDN‌（如 Cloudflare）：通过修改 DNS 解析将域名指向 CDN 服务商，利用其全球节点加速访问‌。 国内 CDN‌（如阿里云/腾讯云）：需备案域名后，将源站设置为 GitHub Pages 默认域名，并通过 CDN 服务商缓存资源，优化国内线路‌。 综上，GitHub Pages 默认提供基础 CDN，但如需针对性优化访问速度（尤其是国内），需自行集成第三方服务‌。\n","date":"2025-03-15T00:05:46+08:00","image":"https://hugo-ap0.pages.dev/bg/46.webp","permalink":"https://hugo-ap0.pages.dev/p/github-pages-%E9%BB%98%E8%AE%A4-cdn/","title":"github pages 默认 cdn"},{"content":"前言 dns 负载均衡一般都是根据用户的地理位置以及网络延迟来解析不同的域名，根据网络延迟实现负载均衡，自己实现太过困难，呵呵\n而且 workers 反代不支持自定义域名，呵呵呵\n反向代理应把握其作为\u0026quot;中间人\u0026quot;的定位，主要负责请求的智能路由和基础服务，不涉及业务逻辑处理或页面渲染。渲染工作实际上是由客户端浏览器或后端服务器的服务端渲染(SSR)功能完成的。\n如果反代返回纯文本，添加对应的响应头即可。反向代理未正确处理后端返回的 Content-Type 响应头，导致浏览器无法识别为 HTML。\n代码 根据网络延迟选择最优路线，玩具级别代码，只能说能用级别，呵呵呵\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 addEventListener(\u0026#34;fetch\u0026#34;, event =\u0026gt; { event.respondWith(handleRequest(event.request)); }); const backends = [ \u0026#34;https://tencent.carlos.ip-ddns.com\u0026#34;, \u0026#34;https://github.carlos.ip-ddns.com\u0026#34;, \u0026#34;https://blog.carlos.ip-ddns.com\u0026#34; ]; async function checkLatency(url) { const controller = new AbortController(); const timeout = setTimeout(() =\u0026gt; controller.abort(), 3000); const start = Date.now(); try { await fetch(url, { method: \u0026#34;HEAD\u0026#34;, signal: controller.signal }); return Date.now() - start; } catch (err) { return Infinity; // 超时或失败时返回最大值 } finally { clearTimeout(timeout); } } async function handleRequest(request) { let latencies = await Promise.all( backends.map(async url =\u0026gt; ({ url, latency: await checkLatency(url) })) ); latencies = latencies.filter(entry =\u0026gt; entry.latency !== Infinity); if (latencies.length === 0) { return new Response(\u0026#34;All backends are down\u0026#34;, { status: 503 }); } latencies.sort((a, b) =\u0026gt; a.latency - b.latency); const bestBackend = latencies[0].url; const modifiedRequest = new Request(bestBackend + new URL(request.url).pathname, request); return fetch(modifiedRequest); } ","date":"2025-03-14T23:57:31+08:00","image":"https://hugo-ap0.pages.dev/bg/31.webp","permalink":"https://hugo-ap0.pages.dev/p/cloudflare-worker-%E5%8F%8D%E4%BB%A3%E5%AE%9E%E7%8E%B0-dns-%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/","title":"cloudflare worker 反代实现 dns 负载均衡"},{"content":"前言 本文用来梳理网站中实名与备案的关系\n域名购买与实名制的关系 实名制是强制要求\n根据中国《互联网域名管理办法》，‌国内域名（如 .cn、.com.cn 等）必须在购买后 5 天内完成实名认证‌，否则域名将被暂停解析（无法访问）‌。 实名认证需提交‌企业营业执照‌或个人身份证信息‌，且主体需与后续备案主体一致‌。 实名与备案的关联性。实名认证是备案的前提条件，但‌备案并非购买域名的强制要求‌。若域名仅注册未实际使用（如未指向国内服务器搭建网站），则无需备案‌。\n备案的触发条件\n当域名解析至中国大陆境内的服务器‌并用于网站、小程序等公开服务时，‌必须完成 ICP 备案‌。未备案的域名会被拦截访问‌。 备案需通过云服务商（如腾讯云、阿里云）提交域名、服务器 IP、主体信息等材料，审核周期约 20 个工作日‌。 无需备案的场景\n若域名解析至 ‌境外服务器‌（如中国香港、新加坡等），或仅作为保留域名（未实际使用），则无需备案‌。 总结 购买国内域名‌必须实名认证‌，但‌备案仅在实际使用境内服务器时触发‌。若仅持有域名或指向海外服务器，无需备案‌。\n所以，国内要想使用 cdn 服务必须备案，若要购买域名，强制实名，无需备案。因为 cdn 服务使用了国内服务器，必须备案。\n备案是国内特色，服务器在国外，并没有这么多繁琐的操作。\n","date":"2025-03-14T23:21:06+08:00","image":"https://hugo-ap0.pages.dev/bg/06.webp","permalink":"https://hugo-ap0.pages.dev/p/%E7%BD%91%E7%AB%99%E5%AE%9E%E5%90%8D%E4%B8%8E%E5%A4%87%E6%A1%88%E5%85%B3%E7%B3%BB/","title":"网站实名与备案关系"},{"content":"前言 dns 服务器和域名关系，用来确定是否需要搭建 dns 服务器。\ndns 服务器 自建完 dns 服务器需在域名注册商处将域名 NS（Name Server）记录指向您自建的 DNS 服务器 IP 地址，完成域名托管权转移‌。\n域名 公网访问的强制要求\n若需通过‌标准域名（如example.com）‌在公网被广泛访问，则必须购买合法域名并完成备案‌。公共DNS系统仅解析已注册且备案的域名，否则外部用户无法通过域名访问您的服务‌。\n私有网络或小范围访问的替代方案\n自定义域名（无需购买）‌：通过自建DNS服务器定义私有域名（如myhome.local），可在局域网或指定设备间直接访问‌。\n完全自定义域名，并且公网解析\n在自建 DNS 服务器中配置权威解析（如my.site），并将域名NS记录指向您的服务器 IP\n需购买域名并拥有其管理权，否则公共DNS系统不会认可您的解析记录‌\n自定义顶级域名 在公网上解析完全自定义的顶级域名（如 baidu.carlos2016）存在技术限制，因为公共互联网的DNS系统仅识别 ICANN 授权的标准顶级域名（如 .com、.net 等）。\n仅需在内部网络使用 baidu.carlos2016 这类域名，可自建DNS服务器。使用Bind或CoreDNS等工具搭建私有DNS服务器，并配置权威解析‌。\n公网限制：自定义顶级域名（如 .carlos2016）无法在公网被全球DNS系统识别，仅适用于私有网络或特定DNS覆盖范围‌。\n若需公网访问，必须注册ICANN认可的顶级域名（如 .com、.app）或其子域名‌。\n域名层级管理 根域名（Root Domain）：DNS层级的最顶端，用空标签 . 表示（通常省略）。\n示例：www.example.com.（末尾的 . 表示根域名，实际使用中常省略为 www.example.com）。\n顶级域名：紧接在根域名之下的层级，分为两类\n‌通用顶级域名（gTLD）‌：如 .com、.net、.org ‌国家/地区顶级域名（ccTLD）‌：如 .cn（中国）、.us（美国） ‌作用‌：标识域名的类别或归属地。\n示例‌：example.com 中的 .com 是顶级域名。\n次级域名：位于顶级域名下方，由用户注册的独特名称。标识具体组织、品牌或服务。\n示例：example.com 中的 example 是次级域名。\n子域名：在次级域名下进一步划分的层级，可多层嵌套。用于分类服务（如 blog.example.com）、环境（如 dev.example.com）或地理位置。\n示例：mail.server.example.com 中的 server 是子域名，mail 是更下一层的子域名。\n主机名：域名最左侧的部分，标识网络中的具体设备或服务。指向服务器、虚拟机或服务的IP地址。\n示例‌：www.example.com 中的 www 是主机名，表示Web服务器。\n","date":"2025-03-14T23:12:38+08:00","image":"https://hugo-ap0.pages.dev/bg/38.webp","permalink":"https://hugo-ap0.pages.dev/p/dns-%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%A5%E5%8F%8A%E5%9F%9F%E5%90%8D%E5%85%B3%E7%B3%BB/","title":"dns 服务器以及域名关系"},{"content":"前言 dnspod 智能 dns，别称 dns 负载均衡，呵呵，概念很好，网站访问速度 0 提升。\n如果你有境内外分线解析的需要可以配置。www.example.com 将根据用户 IP 选择合适的线路。由于 www.example.com 配置的是 CNAME 的记录类型，访客对于分线过程无感知，浏览器地址栏不变。\ncloudflare 也提供同样的服务，一般 dns 服务商都会提供这个服务，但是 cloudflare 收费，dnspod 免费，不过对网站访问速度 0 提升。而且 dnspod 只能解析 2 条域名。\n需要额外购买域名，免费域名不支持托管 dnspod，比如：cloudns ，一直认证失败，呵呵呵\n通过以下域名比价工具购买低价域名，该工具可能随时跑路，呵呵呵呵，手慢无\n哪煮米 - 全网域名,一站比价 我选择 Spaceship 域名服务商，好像 7 块钱 1 年，用来测试足够了\n启动您的网站、想法和未来 - Spaceship 添加域名 将域名托管在 dnspod\ndnspod 添加域名就能获取 dns 服务器地址\n复制以下 dns 服务器地址，粘贴到域名服务商后台的名称服务器即可。\n设置 dns 服务器，别称 ns 记录、name server 或者名称服务器？？？总之到你的域名服务商后台修改 dns 服务器\n把这个改成 dnspod 提供的 dns 服务器即可，然后你的任务就是“只需等待”\n智能 dns 配置智能 dns，别称 dns 负载均衡？？？\n添加 2 条相同的 cname 记录就会实现 dns 负载均衡，非常的傻瓜哦。\n还可以设置解析线路，这也太棒了吧。\nhttps 访问失败 找到“SSL 证书”\n申请免费证书\n默认下一步即可，认证成功就能访问 https 了\n自动添加 txt 记录，自动认证，非常的傻瓜哦\n","date":"2025-03-14T21:12:12+08:00","image":"https://hugo-ap0.pages.dev/bg/12.webp","permalink":"https://hugo-ap0.pages.dev/p/%E8%85%BE%E8%AE%AF-dnspod-dns-%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/","title":"腾讯 dnspod dns 负载均衡"},{"content":"前言 腾讯云国际 pages 服务，呵呵，速度堪忧\n创建账号 腾讯云不用完成注册，有个账号就行了，什么电话卡和银行卡我都没绑（如果他不让你登录就直接点下面page创建链接即可。\n注册腾讯云国际账号 注册完账号，不要绑定信息，我是绑定谷歌账号，填写密码，直接退出，直接点击腾讯控制台就能使用 pages 服务了。我并没有完成注册，也可以登录控制台。\n创建项目 创建项目，github 授权，填写配置就能自动化构建。\n配置参数\n1 2 HUGO_VERSION=0.125.7 HUGO_ENV=production hugo npm install 自定义域名 如果 https 访问不成功，在域名服务商后台配置 https 证书认证即可。dns 服务器添加 txt 记录认证。\n","date":"2025-03-14T20:23:05+08:00","image":"https://hugo-ap0.pages.dev/bg/05.webp","permalink":"https://hugo-ap0.pages.dev/p/%E7%99%BD%E5%AB%96%E8%85%BE%E8%AE%AF%E4%BA%91%E5%9B%BD%E9%99%85-pages-%E6%9C%8D%E5%8A%A1/","title":"白嫖腾讯云国际 pages 服务"},{"content":"前言 vscode 中有全局搜索功能，然后通过正则匹配需要修改的内容，进行替换即可\n操作 右键打开项目\n鼠标聚焦在文件，快捷键 crtl+shift+f\n我这里需要将图片 jpg 后缀改为 webp，通过正则匹配 \\.jpg$ jpg 后缀，然后替换即可\n","date":"2025-03-13T19:03:44+08:00","image":"https://hugo-ap0.pages.dev/bg/44.webp","permalink":"https://hugo-ap0.pages.dev/p/vscode-%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9%E4%B8%8D%E5%90%8C%E6%96%87%E4%BB%B6%E4%B8%AD%E7%9A%84%E7%9B%B8%E5%90%8C%E6%95%B0%E6%8D%AE/","title":"vscode 批量修改不同文件中的相同数据"},{"content":"前言 hugo 整合 cwebp，自动化工作流。\n‌cwebp 是谷歌官方开发的工具‌，属于 WebP 技术套件的一部分。该工具专门用于将其他格式的图片（如 PNG、JPEG）转换为 WebP 格式，其核心功能围绕谷歌提出的 WebP 图像格式标准实现‌。\n安装 更新软件包列表\n1 sudo apt update 安装 webp 工具包\n1 sudo apt install webp 验证安装\n1 cwebp -version 压缩脚本 将路径替换成脚本内容\n1 2 3 4 5 6 7 8 9 10 # 示例脚本：convert_images.sh # 说明 hugo 图片压缩脚本，需要安装 cwebp #!/bin/bash # 遍历 content/images 目录下的 PNG/JPG 图片 find /root/hugo/static/bg -type f -name \u0026#34;*.png\u0026#34; -o -name \u0026#34;*.jpg\u0026#34; | while read img; do webp_path=\u0026#34;${img%.*}.webp\u0026#34; # 调用 cwebp 转换（需提前安装 cwebp 工具） cwebp -q 80 \u0026#34;$img\u0026#34; -o \u0026#34;$webp_path\u0026#34; done 修改模板文件 修改文章图片\n/root/hugo/themes/hugo-theme-stack/layouts/_default/_markup/render-image.html\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 {{- $originalURL := $fullURL -}} {{- $webpURL := replaceRE `(\\.[a-z]+)$` `.webp` $originalURL | relURL -}} {{- $decodedPath := replace $webpURL \u0026#34;%20\u0026#34; \u0026#34; \u0026#34; -}} {{- $webpExists := fileExists (path.Join \u0026#34;static\u0026#34; (strings.TrimPrefix \u0026#34;/\u0026#34; $decodedPath)) -}} \u0026lt;a data-fancybox=\u0026#34;gallery\u0026#34; href=\u0026#34;{{ if $webpExists }}{{ $webpURL }}{{ else }}{{ $originalURL }}{{ end }}\u0026#34; data-webp=\u0026#34;{{ $webpURL }}\u0026#34; data-original=\u0026#34;{{ $originalURL }}\u0026#34; class=\u0026#34;webp-fancybox\u0026#34;\u0026gt; \u0026lt;picture\u0026gt; {{ if $webpExists }} \u0026lt;!-- 第一重回退：服务端确认存在的 WebP --\u0026gt; \u0026lt;source srcset=\u0026#34;{{ $webpURL }}\u0026#34; type=\u0026#34;image/webp\u0026#34;\u0026gt; {{ end }} \u0026lt;!-- 终极回退：原始图片 --\u0026gt; \u0026lt;img src=\u0026#34;{{ $originalURL }}\u0026#34; alt=\u0026#34;{{ .Text }}\u0026#34; {{ with .Title }}title=\u0026#34;{{ . }}\u0026#34;{{ end }} loading=\u0026#34;lazy\u0026#34; data-fallback\u0026gt; \u0026lt;/picture\u0026gt; \u0026lt;/a\u0026gt; 修改封面\n/root/hugo/themes/hugo-theme-stack/layouts/partials/article/components/header.html\n1 2 3 4 5 6 7 8 9 10 11 12 \u0026lt;!-- 自定义变量 --\u0026gt; {{- $originalPath := $image.permalink -}} {{- $webpPath := replaceRE `(\\.[a-z]+)$` `.webp` $originalPath -}} {{- $webpExists := fileExists (path.Join \u0026#34;static\u0026#34; $webpPath) -}} \u0026lt;picture class=\u0026#34;webp-fallback\u0026#34;\u0026gt; {{ if $webpExists }} \u0026lt;source srcset=\u0026#34;{{ $webpPath }}\u0026#34; type=\u0026#34;image/webp\u0026#34;\u0026gt; {{ end }} \u0026lt;img src=\u0026#34;{{ $originalPath }}\u0026#34; loading=\u0026#34;lazy\u0026#34; alt=\u0026#34;Featured image of post {{ .Title }}\u0026#34;\u0026gt; \u0026lt;/picture\u0026gt; 修改归档图片\n/root/hugo/themes/hugo-theme-stack/layouts/partials/article-list/compact.html\n1 2 3 4 5 6 7 8 9 10 11 12 \u0026lt;!-- 自定义变量 --\u0026gt; {{- $originalPath := $image.permalink -}} {{- $webpPath := replaceRE `(\\.[a-z]+)$` `.webp` $originalPath -}} {{- $webpExists := fileExists (path.Join \u0026#34;static\u0026#34; $webpPath) -}} \u0026lt;picture class=\u0026#34;webp-fallback\u0026#34;\u0026gt; {{ if $webpExists }} \u0026lt;source srcset=\u0026#34;{{ $webpPath }}\u0026#34; type=\u0026#34;image/webp\u0026#34;\u0026gt; {{ end }} \u0026lt;img src=\u0026#34;{{ $originalPath }}\u0026#34; loading=\u0026#34;lazy\u0026#34; alt=\u0026#34;Featured image of post {{ .Title }}\u0026#34;\u0026gt; \u0026lt;/picture\u0026gt; github action 添加代码\n1 2 3 4 5 6 7 - name: Install cwebp run: sudo apt-get install webp - name: Compress images run: | chmod +x /home/runner/work/hugo/hugo/convert_images.sh /home/runner/work/hugo/hugo/convert_images.sh 完整代码截图，根据自己实际情况添加\n这样在提交代码的时候，就会自动化压缩图片以及 hugo 生成静态文件\n","date":"2025-03-13T18:47:06+08:00","image":"https://hugo-ap0.pages.dev/bg/06.webp","permalink":"https://hugo-ap0.pages.dev/p/hugo-%E9%85%8D%E7%BD%AE-webp-%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9/","title":"hugo 配置 webp 图片压缩"},{"content":"前言 cloudns(免费域名)托管到 cloudflare，正常购买的域名，只要在域名服务商管理后台添加 2 条 dns 记录，就能正常托管 cloudflare，但是免费域名需要额外配置。\n操作 注册cloudns：地址1 一个账号只能申请一个域名，点击这里申请\n申请免费域名即可\n点击申请的域名，进行 dns 记录添加\n然后 cloudflare 域名托管，默认操作即可，点击下一步，点击下一步\n域名管理后台添加 dns 记录，根据自己实际情况填写\n1 2 3 4 5 类型 NS 主机 留空 指向到 ready.ns.cloudflare.com 类型 NS 主机 留空 指向到 auth.ns.cloudflare.com 类型 NS 主机 _acme-challenge 指向到 ready.ns.cloudflare.com 类型 NS 主机 _acme-challenge 指向到 auth.ns.cloudflare.com 类型 CNAME 主机 * 指向到 ready.ns.cloudflare.com 将 ns 记录改成自己的\ndns 记录配置参考，正常域名只要添加 2 条 ns 记录就能托管在 cloudflare，但是我用的是免费域名\n添加 7 条 dns 记录，可以不用配置 cloudflare 边缘证书，也不用更改“SSL/TLS 加密”模式\n1 2 3 4 5 6 7 类型 NS 主机 留空 指向到 ready.ns.cloudflare.com 类型 NS 主机 留空 指向到 auth.ns.cloudflare.com 类型 NS 主机 _acme-challenge 指向到 ready.ns.cloudflare.com 类型 NS 主机 _acme-challenge 指向到 auth.ns.cloudflare.com 类型 NS 主机 maintunnel 指向到 ready.ns.cloudflare.com 类型 NS 主机 maintunnel 指向到 auth.ns.cloudflare.com 类型 CNAME 主机 * 指向到 maintunnel.mydns.ip-ddns.com 如果使用的是7条域名记录，那么须要在cloudflare添加一条CNAME记录\n类型 CNAME 主机 maintunnel 指向到 fast-fast.asuscomm.com 或指向到 cloudflare.182682.xyz 看这个域名应该是使用第三方服务，呵呵。\n以上是实现了子级域名的基本操作，以后子级域名只需要在cloudflare上操作即可。\n对于主域名 mydns.ip-ddns.com 的解析操作分为两种情况（假设服务器IP是 10.20.30.40） 完全走CDN 【推荐使用这种方案】\n1 2 3 4 #cloudns 类型 A 主机 留空 指向到 104.18.15.19 #cloudflare 开启小黄云 类型 A 主机 @ 指向到 10.20.30.40 并开启小黄云 完全不走 CDN 【仅需要原始解析时使用】\n1 2 3 4 #cloudns 类型 A 主机 留空 指向到 10.20.30.40 #cloudflare 不开启小黄云 类型 A 主机 @ 指向到 10.20.30.40 最后回到 cloudflare,大概 5 分钟左右就会看到域名已经生效可用。不管是 A、AAAA 还是隧道都要记得开启小黄云Proxied\n经过以上的操作就可以让 cloudns 在 cloudflare 上愉快的撒欢了。\n我这里为 github pages 套 cdn，cloudflare dns 记录添加 a 记录指向以下 ip 地址即可\n1 2 3 4 185.199.108.153 185.199.109.153 185.199.110.153 185.199.111.153 参考配置\n然后在 cloudns 域名管理后台添加一条 a 记录，ip 地址为默认 ip，不需要改变，照着抄就可以了，应该是 cloudflare ip 地址\nhttps 访问失败 如果添加 5 条记录，https 访问会不正常，需要域名添加 txt 记录进行认证，边缘证书认证成功截图\n如果是“txt 待认证”需要在域名管理后台添加 txt 记录进行认证，根据实际情况填写\n也可以在 cloudflare 进行添加 txt 记录\ntxt 认证成功，删除即可，没什么鸟用，一般都是自动化认证的，呵呵。通过工具（如 acme.sh 或 Certbot）集成 Cloudflare 的 DNS API，自动完成 TXT 记录的添加和删除。\n「重定向的次数过多」解决方案 如果浏览器出现「重定向的次数过多」，需要额外配置 ssl 加密模型\n选择任意两个都可以\n验证成功 域名命令，出现 cf 特殊字段即可表示 cdn 开启成功，我这里给 github pages 套了 cdn\n1 curl -I https://www.carlos.ip-ddns.com 或者 ping 自己的主机名，没有出现 github ip 地址表示开启 cdn 成功\n1 ping www.carlos.ip-ddns.com ","date":"2025-03-13T02:28:40+08:00","image":"https://hugo-ap0.pages.dev/bg/40.webp","permalink":"https://hugo-ap0.pages.dev/p/cloudns-%E6%89%98%E7%AE%A1%E5%88%B0-cloudflare/","title":"cloudns 托管到 cloudflare"},{"content":"前言 本文主要介绍网站如何在 cloudflare 上开启 cdn\n操作 在 cloudflare 上添加域名\n默认下一步即可，这里保存名称服务器（Name Servers）\n在域名注册商后台添加 ns 记录（Name Servers），我这里的是免费域名：地址1 不同域名注册商操作不一样，但是都是大同小异，都是添加 dns 记录，成功截图\n在 Cloudflare 的 DNS 管理页面中，每个解析记录左侧的云朵图标‌需处于橙色点亮状态（表示流量经过 CDN）。灰色状态则代表直连服务器，未启用加速。\n要求域名支持托管，不然任何设置都白费。\n我这里主机名是 blog，橙色云朵表示已经开启 cdn\nSSL/TLS 模式配置\n需在 Cloudflare 后台的 SSL/TLS 设置中选择 ‌Full‌ 或 ‌Full (Strict)‌ 模式，否则 HTTPS 请求可能无法通过 CDN 加密传输。\n使用 CloudFlare 导致网站「重定向的次数过多」，记得点击一下，选择“完全”或者“完全（严格）”\n验证 CDN 是否生效 Ping 检测\n在终端执行 ping yourdomain.com，若返回的 IP 地址与源服务器不同（显示为 Cloudflare 边缘节点 IP），则 CDN 生效 ‌。\n我这里 ping www.carlos.ip-ddns.com，记录 ip 地址，这里是 github 地址，cdn 开启不成功\n命令 curl -I https://www.carlos.ip-ddns.com ，返回 github，没有 cf 特俗字段，cdn 还是没有开启成功\nubuntu 命令 dig www.carlos.ip-ddns.com +short，返回 github，懂的都懂，cdn 还是没有开启成功。\n正常情况，根域名添加 ns 记录，cf 控制台添加子域名 cname 记录，根域名 a 记录指向你的服务器 ip 地址，应该是可以开启 cdn 的，可能免费域名的缘故，没有开启 cdn 成功。\ncloudflare 域名管理那里手动添加同样的 dns 记录，我这个免费域名不支持托管，心累\n","date":"2025-03-13T00:39:30+08:00","image":"https://hugo-ap0.pages.dev/bg/30.webp","permalink":"https://hugo-ap0.pages.dev/p/cloudflare-%E5%BC%80%E5%90%AF-cdn/","title":"cloudflare 开启 cdn"},{"content":"前言 本文主要介绍 cloudflare 基本常用功能，让你少走弯路\n常用功能 以下是 Cloudflare 频率最高的 10 个功能及其核心应用场景\nDDoS 攻击防护：全球领先的分布式防御系统，通过流量清洗和边缘节点拦截大规模攻击，保障业务连续性‌。 内容分发网络（CDN）：全球分布式节点加速静态资源加载，隐藏源站 IP 并优化访问延迟，免费版支持自动缓存策略‌。 Web 应用防火墙（WAF）：拦截 SQL 注入、XSS 等 OWASP 十大 Web 漏洞攻击，支持自定义规则匹配攻击特征‌。 SSL/TLS 加密：提供免费泛域名证书，自动实现 HTTP 到 HTTPS 重定向，支持 TLS 1.3 协议强化数据传输安全‌。 域名注册与托管：低成本域名注册服务（仅收 ICANN 成本费），集成 DNS 解析与流量代理功能‌。 智能路由与负载均衡：Argo 技术优化全球流量路径，结合负载均衡实现故障转移和服务器资源动态分配‌。 边缘计算（Workers）：无服务器计算平台，支持在边缘节点执行 JavaScript/Wasm 代码，实现个性化逻辑处理‌。 零信任安全访问：Zero Trust 架构提供精细化权限控制，支持多因素认证（MFA）和私有网络接入保护‌。 Always Online 容灾：当源站宕机时自动返回缓存副本，结合页面规则设置不同 URL 的缓存失效策略‌。 图像与移动端优化：自动压缩图片为 WebP 格式，延迟加载非首屏资源，适配移动端网络环境提升加载速度‌。 配置建议 企业用户常通过页面规则（Page Rules）实现功能组合，例如为后台路径关闭缓存、为静态资源设置强缓存，同时启用 Under Attack Mode 应对突发安全威胁‌。免费版已覆盖 80% 基础需求，大型企业可升级套餐获取自定义 WAF 规则、实时日志分析等进阶功能‌。\n","date":"2025-03-12T17:38:18+08:00","image":"https://hugo-ap0.pages.dev/bg/18.webp","permalink":"https://hugo-ap0.pages.dev/p/cloudflare-%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD/","title":"cloudflare 常用功能"},{"content":"疑问 我在阿里购买 cdn 服务，并且 cname 指向该 cdn，为什么其他用户能访问到我的这条 dns 记录，所有 dns 服务器都会同步这条 dns 记录吗？\n解释 一、其他用户为何能访问到该 DNS 记录？\n权威 DNS 服务器的作用\n当您为域名配置了 CNAME 记录并指向阿里云 CDN 时，该记录存储在您的域名 ‌权威 DNS 服务器‌（如阿里云 DNS 或第三方 DNS 服务商）中‌。 其他用户访问域名时，其本地 DNS 服务器会向权威 DNS 查询记录，从而获取 CNAME 值并进一步解析到 CDN 节点‌。 DNS 查询的层级传递\n用户发起请求时，本地 DNS 服务器（如运营商 DNS 或公共 DNS）会逐级查询：本地缓存 → 根 DNS → 顶级 DNS（如 .com） → 域名权威 DNS‌。 权威 DNS 返回 CNAME 记录后，本地 DNS 会缓存该记录（根据 TTL 时间），供后续用户重复使用‌。 二、DNS 记录的同步范围\n并非所有 DNS 服务器同步记录\n‌权威 DNS 服务器‌ 是唯一存储完整解析记录的节点，其他 DNS 服务器（如运营商 DNS、公共 DNS）仅临时缓存查询结果，不会主动同步全量记录‌。 例如：用户 A 使用阿里云 DNS，用户 B 使用腾讯云 DNS，两者均通过查询权威 DNS 获取 CNAME 记录，但各自 DNS 服务商独立缓存数据‌。 缓存机制与 TTL 影响\n所有 DNS 服务器（包括本地 DNS）会根据记录的 ‌TTL（Time to Live）‌ 值决定缓存时长。TTL 过期后，会重新向权威 DNS 请求最新记录‌。 若您修改 CNAME 记录，需等待旧缓存过期（最长 TTL 时间）后，全网用户才能完全获取新记录‌。 总结 其他用户能访问到您的 CNAME 记录，是因为其 DNS 服务器通过查询权威 DNS 获取了最新配置，而非所有 DNS 服务器主动同步全量记录。DNS 系统通过层级查询和缓存机制实现记录传递，最终引导用户请求至 CDN 节点。确保 CNAME 配置正确并合理管理 TTL 值，可保障 CDN 服务的稳定性和一致性‌。\n","date":"2025-03-12T04:52:03+08:00","image":"https://hugo-ap0.pages.dev/bg/03.webp","permalink":"https://hugo-ap0.pages.dev/p/dns-%E5%90%8C%E6%AD%A5%E6%9C%BA%E5%88%B6/","title":"DNS 同步机制"},{"content":"前言 常规配置逻辑\nCNAME 记录‌ 将域名指向 CDN 服务商提供的加速域名（如 example.cdnprovider.com）‌。\nCDN 回源机制‌：CDN 节点会缓存源站内容，用户请求首先到达 CDN 节点，若内容未缓存则回源站拉取数据‌。\n特殊场景的分流配置\n分路径解析‌：通过 DNS 智能路由或 CDN 规则引擎，将静态资源（如图片、CSS）解析到 CDN 节点，动态请求（如 API）直接指向源站服务器‌。\n子域名分离‌：例如将 static.baidu.com 指向 CDN（用于加速静态资源），主域名 www.baidu.com 直接处理动态请求‌。\n访问流程 以 baidu.com 为例\n用户发起请求，用户在浏览器输入 www.baidu.com，触发 DNS 解析流程‌。 DNS 解析阶段，域名通过 ‌CNAME 记录‌ 指向 CDN 服务商的加速域名（如 baidu.cdnprovider.com）‌。CDN 的 DNS 系统根据用户地理位置、网络状态等返回最优节点 IP 地址（如北京 CDN 节点）‌。 CDN 节点处理，缓存命中‌：若请求的静态资源（如首页图片）已缓存在 CDN 节点，直接返回给用户‌。缓存未命中‌：CDN 节点向源站发起回源请求，拉取数据并缓存，再返回给用户‌。 动态内容处理，动态请求（如搜索接口）可能通过 ‌路径规则‌ 直接回源站处理，绕过 CDN 缓存，确保实时性‌。 配置注意事项 DNS 解析策略\n使用智能 DNS（如分线路解析），国内用户解析到国内 CDN 节点，海外用户解析到国际 CDN 节点‌。 避免直接使用 A 记录指向源站 IP，以防暴露服务器地址或导致负载不均‌。 动静分离设计\n静态资源通过 CDN 加速，动态内容由源站处理，提升整体性能‌。\n示例配置\n1 2 3 4 // 静态资源子域名 static.example.com CNAME → cdn.example.com // 主域名动态请求 www.example.com A → 源站 IP 总结 域名通过 ‌CNAME 记录指向 CDN‌ 是主流方案，用户请求由 CDN 节点优先响应，动态内容回源处理。类似 baidu.com 的网站通过 ‌分路径或子域名策略‌ 实现动静分离，兼顾加速效果与实时性‌。\nCDN 的核心机制依赖于 ‌DNS 的 CNAME 解析‌实现初始路由，通过全局负载均衡选择最优节点。缓存命中时加速响应，未命中时回源拉取数据并同步更新缓存‌。用户描述的流程基本准确，但需注意结合智能调度策略和缓存配置优化以提升实际效果‌。\n","date":"2025-03-12T04:26:57+08:00","image":"https://hugo-ap0.pages.dev/bg/58.webp","permalink":"https://hugo-ap0.pages.dev/p/cdn-%E5%B7%A5%E4%BD%9C%E6%B5%81/","title":"cdn 工作流"},{"content":"定义 区别\nCDN 核心功能‌：通过全球分布的节点缓存内容，加速用户访问速度并保护源站 IP，主要作用于内容分发而非域名管理‌。\n‌域名托管‌：通常指将域名的 ‌DNS 解析‌交由特定服务商（如 Cloudflare、阿里云）管理，与 CDN 服务可独立或结合使用‌。\nCDN 是否支持“托管域名”？\n‌广义托管（域名解析管理）‌：部分 CDN 服务商（如 ‌Cloudflare‌）允许将域名的 ‌Nameserver‌ 指向其 DNS 服务器，实现 DNS 解析与 CDN 加速的整合‌。\n示例‌：将域名托管到 Cloudflare 后，可同时使用其 CDN 和 DNS 管理功能‌。\n狭义托管（域名注册与归属权）‌：CDN 服务商通常不提供域名注册服务，需通过第三方注册域名后绑定到 CDN‌。\nCDN 与域名的常见协作方式 一、通过 CNAME 记录绑定加速域名\n将域名解析中的 ‌CNAME 记录‌ 指向 CDN 提供的加速域名（如 example.com → example.cdn.com），实现流量通过 CDN 节点分发‌。\n二、使用 CDN 服务商提供的 DNS 托管\n将域名的 Nameserver 更换为 CDN 服务商的 DNS 服务器（如 Cloudflare 的 ns1.cloudflare.com），统一管理 DNS 和 CDN 配置‌。\n‌三、独立域名托管与 CDN 加速分离\n域名托管在第三方服务商（如 NameSilo），通过 CNAME 或 A 记录单独绑定 CDN 加速服务‌。\n总结 CDN 服务商（如 Cloudflare、阿里云）可提供 ‌DNS 托管功能‌，允许用户将域名的解析与 CDN 加速整合管理‌16。但域名注册仍需通过第三方服务商，且实际使用中更常见的是通过 ‌CNAME 记录‌ 将现有域名绑定到 CDN 加速服务，而非完全托管域名所有权‌。\n","date":"2025-03-12T03:57:30+08:00","image":"https://hugo-ap0.pages.dev/bg/30.webp","permalink":"https://hugo-ap0.pages.dev/p/cdn-%E4%B8%8E%E5%9F%9F%E5%90%8D/","title":"cdn 与域名"},{"content":"域名 域名由主机头（www）+域名名称（baidu）+服务机构（com）组成。\ndns 记录类型 定义\n参数 作用 A 将域名指向一个IP地址，就需要添加A记录。 CNAME 将域名指向另一个域名，再由另一个域名提供ip地址。 AAAA 指定主机名（域名）对应的IPv6地址（例如：ff06:0:0:0:0:0:0:c3）记录。 MX 如果需要设置邮箱，让邮箱能收到邮件，就需要添加MX记录。 NS 域名服务器记录，如果需要把子域名交给其他DNS服务商解析，就需要添加NS记录。 TXT 可以填写任何东西，长度限制255。绝大多数的TXT记录是用来做SPF记录（反垃圾邮件）。 显性URL 从一个地址301重定向到另一个地址的时候，就需要添加显性URL记录（注：DNSPod目前只支持301重定向）。 隐性URL 类似于显性URL，区别在于隐性URL不会改变地址栏中的域名。 SRV 记录了哪台计算机提供了哪个服务。格式为：服务的名字 + 点 + 协议的类型，例如：_xmpp-server._tcp。 记录值\n记录类型 记录值 A 填写您服务器 IP。 CNAME 填写域名。 MX 填写邮件服务器提供的 IP 和 域名。 TXT 一般用于 Google、QQ等企业邮箱的反垃圾邮件设置。 显性URL 填写要跳转到的网址。 隐性URL 填写要引用内容的网址。 AAAA 填写 IPv6 地址。 NS 系统默认添加的两个NS记录请不要修改。NS向下授权，填写dns域名。 SRV 格式为：优先级 空格 权重 空格 端口 空格 主机名，记录生成后会自动在域名后面补一个.。 主机记录\n主机记录‌（Host Record）是域名解析中的核心字段，用于指定域名前缀与目标地址（IP或域名）的映射关系。它决定了用户通过特定子域名（如 www、mail）或主域名访问时，应指向哪个服务器资源‌。\n参数 作用 www 解析后的域名为：www.xxx.com @ 直接解析主域名：xxx.com * 泛解析，匹配其他所有域名：*.1756260160.com CNAME\nCNAME 被称为规范名字，这种记录允许您将多个域名映射到同一台计算机。 默认情况下，服务器是允许CNAME访问的。 一般网站都做了 CNAME 访问策略。 补充说明 线路\n让指定线路的用户访问这个IP。\n参数 作用 默认 必须添加，否则只有单独指定的线路才能访问您的网站（如果双线解析，建议「默认」线路填写「电信IP」）。 联通 单独为「联通用户」指定服务器 IP，其他用户依然访问「默认」。 搜索引擎 指定一个服务器 IP 让蜘蛛抓取。 MX 优先级\n首先，如果只有一条 MX 记录，谈优先级是没有意义的，当存在多条 MX 记录时优先级才会有意义。 MX 优先级是指指定邮件服务器接收邮件的先后顺序（1-50），一般 MX 优先级默认设置为 5、10、15 等（数值越小优先级越高）。 TTL\n即 Time To Live，缓存的生存时间。指地方dns缓存您域名记录信息的时间，缓存失效后会再次到DNSPod获取记录值。数值越小，修改记录生效时间越快。\n参数 说明 600（10分钟） 建议正常情况下使用 600。 60（1分钟） 如果您经常修改IP，修改记录一分钟即可生效。长期使用 60，解析速度会略受影响。 3600（1小时） 如果您IP极少变动（一年几次），建议选择 3600，解析速度快。如果要修改IP，提前一天改为 60，即可快速生效。 ","date":"2025-03-12T03:47:35+08:00","image":"https://hugo-ap0.pages.dev/bg/35.webp","permalink":"https://hugo-ap0.pages.dev/p/dns-%E8%AE%B0%E5%BD%95/","title":"dns 记录"},{"content":"主流域名分类与特点 通用顶级域名（gTLD）‌\n常见类型‌：.com（商业）、.net（网络）、.org（非营利组织）、.info（信息类）等，全球通用，需付费注册‌。\n国内备案要求‌：若解析至国内服务器，需完成 ICP 备案；若使用海外 CDN（如 Cloudflare），可免备案但国内访问速度受限‌。\n国别域名（ccTLD）\n常见类型‌：.cn（中国）、.us（美国）、.uk（英国）、.de（德国）等，需遵守注册国政策。\n中国特殊要求‌：.cn 域名必须备案才能解析至国内服务器；若绑定海外 CDN，可免备案但存在访问延迟‌。\n免备案域名及适用场景 免备案条件\n域名注册商位于海外‌：如 Namecheap、GoDaddy 等，注册的 .com、.net 等域名无需备案‌。\n绑定免备案 CDN\n海外 CDN‌：如 Cloudflare、Incapsula，通过 CNAME 解析至其节点，无需备案‌。 国内免备案 CDN‌：如百度云加速海外节点、火伞云（需配合特定线路）‌。 推荐免备案域名\n免费域名‌：\n‌L53.net‌：提供 filegear-sg.me 等免费域名，需用优惠码激活‌。 EU.ORG‌：老牌免费域名，但申请周期长且易被屏蔽‌。 pp.ua‌：需绑定信用卡，年续费制，稳定性较好‌。 低价付费域名‌：如 .xyz 、.top 适合长期项目‌。\n免费域名与 CDN 的风险提示 免费域名稳定性差‌：如 Freenom（.tk/.ml）因法律纠纷导致服务不稳定，域名可能被回收‌。 国内访问限制‌：部分免费域名（如 EU.ORG）可能被墙，需配合优选 IP 或中转服务‌。 CDN 流量限制‌：免费 CDN（如百度云加速、七牛云）通常有流量/带宽限制，超出需付费‌。 总结\n免备案域名‌：优先选择海外注册的通用顶级域名（如 .com），绑定 Cloudflare 等免备案 CDN‌。 ‌国内流畅访问‌：需备案域名+国内 CDN，或使用支持国内节点的付费海外服务（如 CDN5）‌ 免费方案‌：适合短期测试，长期项目建议使用低价付费域名+稳定 CDN‌。 ","date":"2025-03-12T00:26:08+08:00","image":"https://hugo-ap0.pages.dev/bg/08.webp","permalink":"https://hugo-ap0.pages.dev/p/%E5%9F%9F%E5%90%8D%E4%BB%A5%E5%8F%8A%E5%85%8D%E5%A4%87%E6%A1%88/","title":"域名以及免备案"},{"content":"定位 Cloudflare‌\n全球性 CDN‌，服务覆盖全球 300+ 城市，节点主要分布在海外地区（如欧美、亚太非中国大陆地区），中国大陆节点较少‌。\n功能集成‌，除 CDN 外，集成 DDoS 防护、Web 应用防火墙（WAF）、SSL 证书管理等安全功能‌。\n国内 CDN‌（如锐安盾、阿里云 CDN）\n本地化加速‌：节点集中在中国大陆境内，针对国内用户网络环境（如跨运营商、骨干网延迟）优化访问速度‌。\n合规性适配‌：需符合中国互联网监管要求（如 ICP 备案、内容过滤）‌。\n总结 相同点‌：均为内容分发网络（CDN），通过缓存静态资源加速访问‌。\n核心差异\n定位‌：Cloudflare 是全球化综合服务（CDN+安全），国内 CDN 专注本地化加速与合规‌。\n适用性‌\n若用户群体以海外为主 → ‌Cloudflare 更优‌‌。 若用户群体集中在中国大陆 → ‌国内 CDN 更优‌‌。 混合方案‌：可通过分线路解析（国内用国产 CDN，海外用 Cloudflare）实现全局加速‌。\n","date":"2025-03-11T23:57:45+08:00","image":"https://hugo-ap0.pages.dev/bg/45.webp","permalink":"https://hugo-ap0.pages.dev/p/cloudflare-%E4%B8%8E%E5%9B%BD%E5%86%85-cdn/","title":"Cloudflare 与国内 CDN"},{"content":"‌SaaS ‌SaaS（Software as a Service，软件即服务）‌ 是一种基于云端的软件服务模式，用户通过互联网访问服务商提供的应用程序，无需自行购买、安装或维护本地软硬件‌。\n类比理解‌：类似“共享单车”，用户只需扫码使用，无需承担车辆维护责任‌。\n核心特征\n服务商托管软件并负责维护、更新与安全‌； 用户通过订阅按需付费，降低初期投入成本‌。 Cloudflare for SaaS 定义：Cloudflare for SaaS‌ 是 Cloudflare 面向 SaaS 开发者提供的 ‌基础设施服务套件‌，专注于解决 SaaS 应用在域名管理、安全防护和性能优化方面的需求‌。\n核心功能\n自定义域名托管‌：允许客户绑定自己的域名（如 app.client-company.com）到你的 SaaS 平台，无需自行配置 DNS 或 SSL 证书‌； 自动化 SSL 证书‌：为每个客户域名自动签发和管理 SSL/TLS 证书（支持泛域名），保障 HTTPS 加密访问‌； 全球 CDN 加速‌：通过 Cloudflare 的全球网络分发静态和动态内容，降低延迟‌； 安全防护‌：集成 DDoS 防护、Web 应用防火墙（WAF）和 Bot 管理，抵御网络攻击‌。 概念混淆 明确上下文\n讨论软件服务模式‌时，SaaS 指代“软件即服务”； 讨论开发工具‌时，Cloudflare for SaaS 是专为 SaaS 开发者提供的技术方案。 Cloudflare for SaaS 与通用 SaaS 概念不冲突\nCloudflare for SaaS‌ 是工具，帮助开发者构建 SaaS 应用； 通用 SaaS‌ 是商业模式，描述软件交付方式。 ","date":"2025-03-11T23:22:37+08:00","image":"https://hugo-ap0.pages.dev/bg/37.webp","permalink":"https://hugo-ap0.pages.dev/p/cloudflare-for-saas-%E5%AE%9A%E4%B9%89/","title":"Cloudflare for SaaS 定义"},{"content":"前言 本文主题是 hugo 如何部署到 cloudflare，访问效果在国内其实和 github pages 差不多，呵呵\n实操 选择 pages\n选择仓库\n根据自己实际情况填写，构建命令\n1 hugo --gc --minify --environment production 我这里因为 github page 已经部署过了，所以再单独创建一份配置用来区分\n在 /root/hugo/config/production 创建 hugo.yaml 文件，然后上传到 github，通过 --environment production 参数用来指定配置文件\n通过 HUGO_VERSION 指定 hugo 版本，我这里选择 0.125.7 版本\n点击“保存并部署”即可将 github 的 hugo 源文件克隆到 cloudflare，cloudflare 就会自动生成 hugo 静态文件并发布\n删除项目 点击设置，划到最底部，点击删除即可。\n补充说明 如果样式错误，可以通过参数 --baseURL \u0026quot;https://custom-url.com/\u0026quot; 强制指定域名完整命令\n1 hugo --baseURL \u0026#34;https://custom-url.com/\u0026#34; ","date":"2025-03-11T21:12:53+08:00","image":"https://hugo-ap0.pages.dev/bg/52.webp","permalink":"https://hugo-ap0.pages.dev/p/hugo-%E9%83%A8%E7%BD%B2%E5%88%B0-cloudflare/","title":"hugo 部署到 cloudflare"},{"content":"前言 本文主要主题是通过 github 页面，修改默认分支。\n操作 找到 Settings\n点击该图标，就能切换分支\n修改成功截图\n","date":"2025-03-11T05:36:53+08:00","image":"https://hugo-ap0.pages.dev/bg/53.webp","permalink":"https://hugo-ap0.pages.dev/p/github-%E4%BF%AE%E6%94%B9%E9%BB%98%E8%AE%A4%E5%88%86%E6%94%AF/","title":"github 修改默认分支"},{"content":"前言 hugo 配合 github action 实现自动化部署，例如将 hugo 源码推送到 github 仓库，通过 github 服务器的 hugo 服务生成静态文件，最后自动发布到 main 分支。\n实操 github 创建 source 分支用来存放源码，然后在本地 git 仓库新建 .github/workflows 目录，文件名不能改变，这是 github action 默认识别路径。\n在该目录下创建 任意名称.yaml，内容如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 name: Deploy Hugo to GitHub Pages on: push: branches: [ source ] # 仅监控source分支的推送 jobs: deploy: runs-on: ubuntu-latest steps: - name: 监测 source 分支 uses: actions/checkout@v4 with: ref: source # 明确检出source分支 - name: hugo 设置 uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#39;0.125.7\u0026#39; # 指定Hugo版本 extended: true # 启用扩展版 - name: 删除符号链接 run: rm -f /home/runner/work/hugo/hugo/static/_resources - name: 复制图片 run: cp -r //home/runner/work/hugo/hugo/static/00-assets/ /home/runner/work/hugo/hugo/static/_resources - name: hugo 生成静态文件 run: hugo --minify --gc - name: 发布到 main 分支 uses: peaceiris/actions-gh-pages@v4 with: deploy_key: ${{ secrets.SSH_PRIVATE_KEY }} publish_dir: ./public publish_branch: main # 正确参数名称 force_orphan: true # 强制覆盖目标分支 env: # 配置 Git 用户信息 GIT_USER_NAME: \u0026#34;root\u0026#34; GIT_USER_EMAIL: \u0026#34;root@localhost\u0026#34; runs-on 指定环境，可以指定 windows、ubuntu 以及 macos on 为事件，自动执行脚本的事件，这里为 push 自动触发脚本 name 为注释 uses 为使用模块，这里加载了 actions/checkout@v4、peaceiris/actions-hugo@v2 等待模块 run 为执行命令，这里为 ubuntu 环境，所以都是 ubuntu 命令 ${{ secrets.SSH_PRIVATE_KEY }} 为变量名，我是通过 ssh 方式推送到 main 分支，用到 peaceiris/actions-gh-pages@v4 模块，其他为官方默认配置，不必理会 将本地 git 公钥和私钥配置到 github，我这里默认已经配置好公钥，只需要将私钥配置到 action 即可\n要想 github action 识别 ${{ secrets.SSH_PRIVATE_KEY }} 变量，需要手动配置，找到 Settings\n注意变量名要一致，我这里为 SSH_PRIVATE_KEY，用的时候是 ${{ secrets.SSH_PRIVATE_KEY }}\n将 git 仓库推送到 github source 分支即可自动构建，点击进去，即可排查错误\n","date":"2025-03-11T05:07:03+08:00","image":"https://hugo-ap0.pages.dev/bg/03.webp","permalink":"https://hugo-ap0.pages.dev/p/hugo-%E9%85%8D%E5%90%88-github-action-%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/","title":"hugo 配合 github action 自动化部署"},{"content":"前言 github 页面怎么创建新分支？有两种办法，一是通过网页创建，二是通过本地 git 命令创建，然后推送到远程仓库。本文主要通过网页图形化界面创建。\n实操 找到 Branch\n点击 New branch 按钮\nYour branches‌ 和 ‌Active branches GitHub 界面中显示的 ‌Your branches‌ 和 ‌Active branches‌ 是两种不同的分支分类方式\nYour branches‌ 是当前用户（即你）在仓库中创建的所有分支，包括本地推送或直接在 GitHub 网页创建的分支‌。\nActive branches 仓库中所有活跃的分支（包括 main、dev 等主分支及近期有更新的分支），无论创建者是谁‌。\n","date":"2025-03-11T02:35:32+08:00","image":"https://hugo-ap0.pages.dev/bg/32.webp","permalink":"https://hugo-ap0.pages.dev/p/github-%E5%88%9B%E5%BB%BA%E6%96%B0%E5%88%86%E6%94%AF/","title":"github 创建新分支"},{"content":"前言 我的部分文章是 joplin 导出，而静态资源是存放在 _resources 目录。GitHub Pages 默认启用 Jekyll 引擎，会忽略以下划线 _ 开头的目录（如 _resources）‌。\n解决方案 禁用 Jekyll 处理\n在项目根目录或发布分支（如 gh-pages）中添加空文件 .nojekyll，以阻止 Jekyll 过滤特殊命名目录‌。\n在 hugo public 目录运行命令\n1 touch .nojekyll 确保 .nojekyll 文件被提交到 Git 仓库中。\n访问成功，不会出现 404 错误。\n","date":"2025-03-11T00:33:02+08:00","image":"https://hugo-ap0.pages.dev/bg/02.webp","permalink":"https://hugo-ap0.pages.dev/p/hugo-%E9%83%A8%E7%BD%B2%E5%88%B0-github-pages-%E9%83%A8%E5%88%86%E6%96%87%E7%AB%A0-404/","title":"hugo 部署到 github pages 部分文章 404"},{"content":"前言 本文主题是 hugo 怎么部署到 github pages\n实操 设置 baseurl，不然会样式错误。\n将 public 目录下的静态文件上传到 github，找到 Settings\n找到 pages，设置分支，设置根目录，保存即可。\n如果 username.github.io 作为仓库名，直接访问即可，我的是 hugo 作为仓库名，所以要在后面加 hugo 目录，完整 url：username.github.io/hugo\n访问成功截图\n","date":"2025-03-10T23:44:35+08:00","image":"https://hugo-ap0.pages.dev/bg/35.webp","permalink":"https://hugo-ap0.pages.dev/p/hugo-%E9%83%A8%E7%BD%B2%E5%88%B0-github-pages/","title":"hugo 部署到 github pages"},{"content":"前言 提前配置好 git 仓库，配置好 ssh，该脚本是在 ssh 配置完成下编写，不然要输入用户名和密码\n实操 新建 sh 文件，内容如下\n1 2 3 4 5 6 7 cd /root/hugo hugo cd /root/hugo/public git add . git commit -m \u0026#34;auto commit: $(date +\u0026#39;%Y-%m-%d %H:%M:%S\u0026#39;)\u0026#34; git push origin main sudo nohup sh /root/shell/hugo.sh start \u0026amp;\u0026gt;\u0026gt; /root/shell/shell.log \u0026amp; 宝塔创建计划任务\n宝塔定时执行脚本即可\n可以手动执行，测试脚本\n","date":"2025-03-10T05:53:27+08:00","image":"https://hugo-ap0.pages.dev/bg/27.webp","permalink":"https://hugo-ap0.pages.dev/p/hugo-%E5%AE%9A%E6%97%B6%E6%8E%A8%E9%80%81%E4%BB%A3%E7%A0%81/","title":"hugo 定时推送代码"},{"content":"前言 如果使用 https 方式推送代码，每次推送代码都需要输入用户名和密码，不方便，也不利于创建脚本\n生成 SSH 密钥对 执行密钥生成命令\n1 ssh-keygen -t rsa -b 4096 -C \u0026#34;root@localhost\u0026#34; 这里的账户填写本地 git 账户，而非 github 账号\n默认回车 3 次\n密钥生成后，id_rsa 为私钥（需保密），id_rsa.pub 为公钥（需上传）‌\n查看公钥内容\n1 cat ~/.ssh/id_rsa.pub github 添加公钥 主页头像 -\u0026gt; \u0026ldquo;Settings\u0026rdquo;\n找到 \u0026ldquo;New SSH key\u0026rdquo;\n输入 github 账户密码\n配置 git 使用 ssh 协议 查看当前远程仓库协议\n1 git remote -v 若为 https 协议，需改为 ssh 格式\n1 git remote set-url origin git@github.com:zero3737/hugo.git 仓库改为自己的\n测试 ssh 连接 验证密钥配置是否成功\n1 ssh -T git@github.com 推送代码 出现 Are you sure you want to continue connecting (yes/no/[fingerprint])? 输入 yes 即可，此提示是 SSH 客户端的安全验证机制，在首次连接到某台服务器时触发。\n","date":"2025-03-10T05:08:44+08:00","image":"https://hugo-ap0.pages.dev/bg/44.webp","permalink":"https://hugo-ap0.pages.dev/p/github-ssh-%E5%85%8D%E5%AF%86%E6%8E%A8%E9%80%81%E4%BB%A3%E7%A0%81/","title":"github ssh 免密推送代码"},{"content":"github 新建仓库 github 仓库主页选择 new\n输入仓库名，‌然后选择公开（Public）或私有（Private）权限‌。\n划到底部，点击 “Create repository” 即可新建完毕\nubuntu 安装 git ubuntu 默认安装 git，呵呵，没有安装执行以下命令\n一、更新系统软件包列表\n1 sudo apt update 二、执行安装命令\n1 sudo apt install git -y 三、验证安装结果\n1 git --version 初始化 git 配置 git 用户名和邮箱\n1 2 git config --global user.name \u0026#34;root\u0026#34; git config --global user.email \u0026#34;root@localhost\u0026#34;‌ 查看全局配置\n1 2 git config --global user.name git config --global user.email 运行结果\n补充说明\nGit 全局配置中的用户名和邮箱均可完全自定义（如 root 和 root@localhost）。这两个命令设置的名字和邮箱会出现在每次提交记录中，而用户名的自定义是允许的，只要符合一定的规范。\n在团队项目中，建议使用真实姓名或可识别昵称，便于追溯提交记录‌。\n关联本地与远程仓库 本地初始化仓库并关联远程地址\n1 2 git init git remote add origin git@github.com:YourName/RepoName.git‌ 上传代码 手动提交命令，提交到本地 git\n1 2 git add . # 添加所有文件到暂存区 git commit -m \u0026#34;提交说明\u0026#34;‌ 重命名当前分支为 main‌\n1 git branch -M main 补充说明\n若通过 git init 初始化仓库后需将默认分支从 master 改为 main，执行一次 git branch -M main 即可永久生效‌。 强制重命名当前本地分支‌（例如将默认分支从 master 改为 main），与 GitHub 仓库名无关‌。这是 git 本地命令。 推送到 github 仓库\n1 git push -u origin main 补充说明：\n会将当前本地分支‌推送到远程仓库的 source 分支，并建立追踪关系（-u 参数的作用）‌。若远程 source 分支不存在，此命令会自动创建该分支‌。 本地分支名与远程分支名 ‌无需相同‌。例如，本地分支为 main，仍可推送至远程 source 分支‌。 后续使用 git push（不带参数）时，默认推送至已关联的远程分支（即 source）‌。 当本地分支名与远程分支名不一致时，‌需通过参数或配置明确指定映射关系‌，否则会因默认规则冲突导致推送失败‌。\n1 git push -u origin 本地分支名:远程分支名 如果是一个人，遇到冲突，不想处理，可以强制推送\n1 git push -f origin main 可执行脚本定时提交\n1 2 3 4 5 #!/bin/bash cd /path/to/your/repo # 切换到项目目录‌ git add . # 添加所有修改到暂存区‌ git commit -m \u0026#34;Auto commit: $(date +\u0026#39;%Y-%m-%d %H:%M:%S\u0026#39;)\u0026#34; # 自动生成带时间的提交说明‌ git push origin main # 推送代码到远程仓库‌ 输入 github 账户名以及密码，不是 git 的用户名和密码\n","date":"2025-03-10T03:59:47+08:00","image":"https://hugo-ap0.pages.dev/bg/47.webp","permalink":"https://hugo-ap0.pages.dev/p/github-%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93%E4%BB%A5%E5%8F%8A%E6%8E%A8%E9%80%81%E4%BB%A3%E7%A0%81/","title":"github 新建仓库以及推送代码"},{"content":"从 github 导入项目到码云 码云支持 github 导入项目\n自动同步 github 项目 仓库 -\u0026gt; 管理 -\u0026gt; 基本设置\n","date":"2025-03-10T02:27:12+08:00","image":"https://hugo-ap0.pages.dev/bg/12.webp","permalink":"https://hugo-ap0.pages.dev/p/gitee-%E5%AF%BC%E5%85%A5-github-%E9%A1%B9%E7%9B%AE/","title":"gitee 导入 github 项目"},{"content":"ssh 配置 如果使用 SSH 方式推送代码，需要配置 SSH Key。\n把邮件地址换成自己的邮件地址，该命令意思是生成 SSH Key。\n1 ssh-keygen -t rsa -C \u0026#34;youremail@example.com\u0026#34; 运行命令一路回车，使用默认值即可。如果运行顺利，会在用户主目录生成 .ssh 目录，里面有 id_rsa （私钥）和 id_rsa.pub （公钥）两个文件。\n进入用户主目录：\n1 cd ~ 然后登录 github 账号找到 SSH Keys 选项，添加 SSH Key，Key 内容为 id_rsa.pub （公钥）内容。\nGitHub 允许你添加多个 Key。假定你有若干电脑，只要把每台电脑的 Key 都添加到 GitHub，就可以在每台电脑上往 GitHub 推送了。\n在 GitHub 上免费托管的 Git 仓库，任何人都可以看到（但只有你自己才能改）。\n验证 SSH 配置是否成功：\n1 ssh -T git@github.com watch、star 和 fork 的区别 watch:\n对于别人的项目，默认自己都处于 Not watching 的状态；当你选择 Watching，表示你以后会关注这个项目的所有动态。这个项目以后只要发生变动，如被别人提交了 push request、被别人发起了 issue 等等情况，你都会在自己的个人通知中心，收到一条通知消息。如果你设置了个人邮箱，那么你的邮箱也可能收到相应的邮件。\nstar:\n类似关注或者点赞，当你点击 star，表示你喜欢这个项目，和对这个项目的支持。\nfork:\n点击 fork，相当于你自己有了一份原项目的拷贝，当然这个拷贝只是针对当时的项目文件；如果后续原项目文件发生改变，你必须通过其他的方式去同步。\n添加协作者（push权限） 设置选项，找到协作者（Collaborators）选项，添加用户。\nGitHub Pages 预览 HTML 你的仓库 -\u0026gt; Settings -\u0026gt; Options -\u0026gt; GitHub Pages\nSource 中选择 master branch。\n找到 GitHub Pages 中的地址，如下图所示：\n在上面的地址基础上加上你的相对与仓库的文件路径。\nGitHub Pages 自定义域名\n仓库 -\u0026gt; Settings\n箭头处填写对应域名即可（允许该域名进行CNAME访问）。\n等待域名生效，一般为 10 分钟。\n补充：DNS 服务器中将记录类型配置成 CNAME（别名记录），记录值填写 GitHub Pages 分配的域名。\nGithub 发布二进制文件让其他人下载 仓库主页 -\u0026gt; release\n点击下图箭头所指按钮。\n根据下图提示输入相应内容即可。\n分布完成别人即可下载你的发布内容。\nGithub 搜索指令 命令 作用 stars:\u0026gt;=500 搜索 star 大于等于 500 的项目。 stars:\u0026gt;=500 language:java 搜索 star 大于等于 500 的项目且为 JAVA 语言的项目。 ","date":"2025-03-10T02:24:20+08:00","image":"https://hugo-ap0.pages.dev/bg/20.webp","permalink":"https://hugo-ap0.pages.dev/p/github-%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/","title":"github 使用教程"},{"content":"放弃本地修改并强制拉取更新 1 2 git fetch --all git reset --hard origin/master git fetch 指令是下载远程仓库最新内容，不做合并。\ngit reset 指令把HEAD指向master最新版本。\ngit 忽略特殊文件 在 Git 工作区的根目录下创建一个特殊的 .gitignore 文件。忽略指定文件：\n1 2 test.md index.html 如果要忽略某一类文件，内容如下：\n1 2 *.class *.html git ssh 远程连接服务器 git bash 输入 ssh root@192.168.1.102 命令，接着输入密码即可连接远程服务器。\nroot 为用户名，@ 符号紧跟 IP 地址。\n退出连接：Ctrl + D 退出连接\ngit 服务器搭建 本地 git 服务器搭建方案\nGogs GitLab ","date":"2025-03-10T02:20:13+08:00","image":"https://hugo-ap0.pages.dev/bg/13.webp","permalink":"https://hugo-ap0.pages.dev/p/git-%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8-2/","title":"git 入门使用 2"},{"content":"概念 所有的版本控制系统，其实只能跟踪文本文件的改动，比如 TXT 文件、网页、所有的程序代码等等。而图片、视频这些二进制文件，虽然也能由版本控制系统管理，但没法跟踪文件的变化，只能把二进制文件每次改动串起来，也就是只知道图片从 100KB 改成了 120KB。Microsoft 的 Word 格式是二进制格式，因此，版本控制系统是没法跟踪 Word 文件的改动的。\n工作区：就是你在电脑里能看到的目录。\n版本库：工作区有一个隐藏目录 .git，这个不算工作区，而是 Git 的版本库。版本库里存了很多东西，其中最重要的就是称为 stage（或者叫 index）的暂存区。\n还有 Git 为我们自动创建的第一个分支 master，以及指向 master 的一个指针叫 HEAD。\n配置姓名和邮箱 1 2 git config --global user.name \u0026#34;Your Name\u0026#34; git config --global user.email \u0026#34;email@example.com\u0026#34; --global 参数表示这台机器上所有的 Git 仓库都会使用这个配置。当然也可以对某个仓库指定不同的用户名和 Email 地址。\n本地仓库 命令 说明 git init 在当前目录下会自动生成 .git 隐藏文件夹，该隐藏文件夹就是 git 版本库。 git add \u0026lt;file\u0026gt; 将文件添加到暂存区（将目标文件加入跟踪列表）。 git add -A 将所有文件添加到存储区。 git add -f App.class 强制添加。被 git 忽略的文件也可以强制添加。 git commit –m \u0026quot;message\u0026quot; 将暂存区文件提交到版本库。-m 参数为提交说明。 git status 显示工作目录和暂存区的状态。 git log --pretty=oneline 显示提交日志。--pretty=oneline 只显示 commit id 和描述。 git reflog 查看命令历史。 git diff \u0026lt;file\u0026gt; 比较当前文件和暂存区文件差异。 git diff HEAD [\u0026lt;path\u0026gt;...] 比较工作区与最新本地版本库。 git reset --hard HEAD^ 将当前 HEAD 复位到指定状态。HEAD 表示当前版本，HEAD^ 表示上一个版本，HEAD^^ 表示上上一个版本，HEAD~100 表示前 100 个版本。Git 的版本回退速度非常快，因为 Git 在内部有个指向当前版本的 HEAD 指针。当你回退版本的时候，Git 仅仅是改变 HEAD 指向。 git reset HEAD \u0026lt;file\u0026gt; 把暂存区的修改撤销掉，重新放回工作区。 git checkout --file 文件在工作区的修改全部撤销。文件没有被放到暂存区，撤销修改就回到和版本库一模一样的状态；文件已经添加到暂存区后，撤销修改就回到添加到暂存区后的状态。 git rm file 删除文件，同时还会将这个删除操作记录放到缓存区。 分支管理 命令 说明 git checkout master 切换分支。 git branch 查看当前有哪些分支。当前分支前面有个星号。 git branch dev 创建分支 dev。 git branch -d dev 删除 dev 分支。 git branch -D dev 强制删除 dev 分支。 git branch dev origin/dev 创建远程 origin 的 dev 分支到本地。默认克隆只有master分支。 git checkout -b dev 创建并切换到 dev 分支。 git merge dev 将当前分支合并到 dev 分支。 git merge --no-ff -m \u0026quot;merge with no-ff\u0026quot; dev 将当前分支合并到 dev 分支。--no-ff 参数，表示禁用快速模式。普通模式：当前分支合并时会提交到版本库，不是简单的变更指针指向。快速模式：把当前分支指向指定分支。 git log –graph 查看分支合并图。 分支策略\nmaster 分支称为主分支，HEAD 表示指向当前分支。\nmaster 分支应该是非常稳定的，dev 分支是不稳定的。1.0 版本发布时，再把 dev 分支合并到 master 上，在 master 分支发布 1.0 版本。每个人都在 dev 分支上干活，每个人都有自己的分支，时不时地往 dev 分支上合并。\n在 master 分支修复 bug，必须新建 bug 分支，修复完切换到 master 分支合并 bug 分支。\n在 dev 分支上开发新功能，新建 Feature 分支，新功能开发完毕切换到 dev 分支合并，如果不想合并必须强制删除。\n总结：\nmaster 分支是主分支，因此要时刻与远程同步。 dev 分支是开发分支，团队所有成员都需要在上面工作，所以也需要与远程同步。 bug 分支只用于在本地修复 bug，就没必要推到远程了，除非老板要看看你每周到底修复了几个 bug。 feature 分支是否推到远程，取决于你是否和你的小伙伴合作在上面开发。 status 命令 说明 git stash 会把所有未提交的修改（包括暂存的和非暂存的）都保存起来。便于切换其他分支，修改其它分支的代码。 git stash list 列出通过 stash 储藏的修改。 git stash apply stash@{0} 恢复 stash@{0}。 git stash drop stash@{0} 删除 stash@{0}。 git stash pop 恢复的同时把stash内容删除。 标签管理 命令 说明 git tag \u0026lt;name\u0026gt; 给最近的 commit 打上标签。tag 就是一个让人容易记住的有意义的名字，它跟某个 commit 绑在一起。 git tag v0.9 f52c633 给指定 commit id 打上标签。 git tag 显示所有标签。 远程仓库 命令 说明 git remote add [shortname] [url] 添加远程仓库关联。shortname 只能对应一个 url。注意：推送代码前必须先关联远程仓库。 git remote 不带参数，列出已经存在的远程连接。 git remote –v 列出远程连接，并显示对应 url。 git remote remove \u0026lt;name\u0026gt; 删除远程仓库。 git push \u0026lt;远程主机名\u0026gt; \u0026lt;本地分支名\u0026gt;:\u0026lt;远程分支名\u0026gt; 将本地分支的更新，推送到远程主机。 git push origin master 将本地的 master 分支推送到 origin 主机的 master 分支。如果 master 不存在，则会被新建。 git push -u origin master -u 选项指定一个默认主机，这样后面就可以不加任何参数使用 git push。 git push origin :master 删除指定的远程分支，因为这等同于推送一个空的本地分支到远程分支。 git push \u0026ndash;all origin 推送所有分支。 git push -f origin dev:master 强制推送。 git clone \u0026lt;版本库的网址\u0026gt; 本地主机生成一个目录，与远程主机的版本库同名。 git clone \u0026lt;版本库的网址\u0026gt; \u0026lt;本地目录名\u0026gt; 如果要指定不同的目录名，可以将目录名作为git clone命令的第二个参数。 git pull \u0026lt;远程主机名\u0026gt; \u0026lt;远程分支名\u0026gt;:\u0026lt;本地分支名\u0026gt; 拉取远程主机某个分支的更新，再与本地的指定分支合并。 git fetch \u0026lt;远程主机名\u0026gt; \u0026lt;远程分支名\u0026gt;:\u0026lt;本地分支名\u0026gt; git fetch 和 git pull 类似，但不会自动合并当前分支。 git branch --set-upstream debug origin/debug 将本地 bug 分支与远程的 bug 分支关联。解决拉取时 git 提示 no tracking information 的问题。 克隆和拉取\nclone 是本地没有 repository 时，将远程 repository 整个下载过来\npull 是本地有 repository 时，将远程 repository 里新的 commit 数据(如有的话)下载过来，并且与本地代码 merge。\n","date":"2025-03-10T02:09:10+08:00","image":"https://hugo-ap0.pages.dev/bg/10.webp","permalink":"https://hugo-ap0.pages.dev/p/git-%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8/","title":"git 入门使用"},{"content":"前言 outlook 本土化非常好，可以同步 qq、163、gamil 以及微软邮箱\nqq 邮箱 添加账户-输入邮箱账号\n输入邮箱服务器密码，不是 qq 账号密码\n获取 qq 邮箱服务器密码，设置-账号，划到底部\n找到管理服务\n生成授权码，即可获得 qq 邮箱服务器密码\n填入 Outlook 即可登录成功\n163 邮箱 和 qq 邮箱同理，先获取邮箱服务器密码，设置-\u0026ldquo;POP3/SMTP/IMAP\u0026rdquo;-开启，即可获取授权码\n然后填入 163 邮箱账号，以及授权码，即可同步邮箱\n微软和 gmail 邮箱 微软邮箱和 gmail 支持直接输入账户密码直接同步，不需要获取邮箱服务器密码\n微软以及谷歌官网登陆，然后默认下一步即可同步邮箱\n","date":"2025-03-09T23:32:19+08:00","image":"https://hugo-ap0.pages.dev/bg/19.webp","permalink":"https://hugo-ap0.pages.dev/p/outlook-%E8%81%9A%E5%90%88%E9%82%AE%E7%AE%B1%E5%AE%9E%E7%8E%B0%E9%82%AE%E7%AE%B1%E7%AE%A1%E7%90%86/","title":"outlook 聚合邮箱，实现邮箱管理"},{"content":"前言 hugo stack 默认的文章时间格式是英文的，本土化不是很好\n修改时间格式 配置文件 hugo.yaml 搜索 dateFormat，注释原本的时间格式\n添加代码\n1 2 3 4 5 dateFormat: # published: Jan 02, 2006 # lastUpdated: Jan 02, 2006 15:04 MST published: 2006-01-02 lastUpdated: 2006-01-02 15:04 MST 这样就修改成功了\n配置「最后修改于」 配置文件末尾添加代码\n1 2 frontmatter: lastmod: [\u0026#34;:fileModTime\u0026#34;, \u0026#34;lastmod\u0026#34;] 效果图\n","date":"2025-03-09T22:49:27+08:00","image":"https://hugo-ap0.pages.dev/bg/27.webp","permalink":"https://hugo-ap0.pages.dev/p/hugo-%E4%BF%AE%E6%94%B9%E6%97%B6%E9%97%B4%E6%A0%BC%E5%BC%8F/","title":"hugo 修改时间格式"},{"content":"前言 open webui 进入不了主界面，长时间白屏\n这是因为前端页面长时间请求外国 api 接口造成的\n解决方法 关闭 open api 即可解决，这样前端就不会访问外国的 api 接口。外国软件，本地化不是很好。\n","date":"2025-03-09T22:22:02+08:00","image":"https://hugo-ap0.pages.dev/bg/02.webp","permalink":"https://hugo-ap0.pages.dev/p/open-webui-%E9%95%BF%E6%97%B6%E9%97%B4%E7%99%BD%E5%B1%8F/","title":"open webui 长时间白屏"},{"content":"open webui 导入模型 api open webui 支持 3 种方式导入模型，分别是：OpenAI API、Ollama API 和直接连接。\n主流方式是 OpenAI API，许多第三方 api 都提供 OpenAI API 方式接入，比如腾讯、字节和百度。\nOllama API 是模型本地部署方案。所以 open webui 支持对接第三方 api 以及 Ollama 本地模型。\none api 只能通过“直接连接”方式对接 open webui\n点击加号即可对接 one api\n还可以通过函数方式创建模型，用来支持 deepseek 思维链功能。\n","date":"2025-03-09T21:56:49+08:00","image":"https://hugo-ap0.pages.dev/bg/49.webp","permalink":"https://hugo-ap0.pages.dev/p/open-webui-%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/","title":"open webui 使用教程"},{"content":"前言 主流大模型平台的 API：\nSiliconFlow (硅基流动) 百度云 千帆 字节跳动 火山方舟 阿里云 百炼 腾讯 知识引擎 详细地址 火山 创建 api key：地址 创建接入点\n没有实名认证，必须实名认证\none api 接入配置\noben webui 通过“外部链接”方式对接 one api，one api 统一管理所有 api 接口。\n这里 v1 为固定写法，不要钻牛角尖。秘钥填 one api 的。\n填这个秘钥即可。\n腾讯 创建 api key：地址 ，必须要实名认证。\n查看文档即可，只有 r1 和 v3。\n百度 申请地址：地址1 申请 api key 即可\n参数填 deepseek-r1 即可\n这里可查看哪些模型可以使用\n","date":"2025-03-09T21:54:56+08:00","image":"https://hugo-ap0.pages.dev/bg/56.webp","permalink":"https://hugo-ap0.pages.dev/p/open-webui-%E5%AF%B9%E6%8E%A5-deepseek/","title":"open webui 对接 deepseek"},{"content":"火山 api 申请 路径如下\n申请 api\n可以查看剩余 token\n火山联网 以火山为例：地址 默认即可，点击创建\n需要手动开通联网功能，有免费额度。\napi 调用\n选择“openai-sdk”\n联网功能的 api 和默认的 api 不一样，有区别。\n模型 id 也跟默认的不一样。\napi key 没有变化，按照下图配置即可。\n记得在这里启用，并修改名字。\n主页选择新的模型 api，即可体验联网功能的 deepseek\n腾讯 控制台 跟着文档走即可：文档地址 阿里 地址1 创建 api key\n","date":"2025-03-09T21:52:37+08:00","image":"https://hugo-ap0.pages.dev/bg/37.webp","permalink":"https://hugo-ap0.pages.dev/p/open-webui-deepseek-api-%E8%81%94%E7%BD%91/","title":"open webui deepseek api 联网"},{"content":"思维链 deepseek 支持思维链代码：地址1 填入本地地址即可\n管理员面板\n注意链接是固定格式\n点击启用，可以重命名。\n该方式是导入 deepseek 模型，所以要重新选择刚刚创建的模型，one api 有所区别。如果之前导入过其他 api 模型，需要重新选择，这种方式是通过函数导入模型。\n","date":"2025-03-09T21:48:09+08:00","image":"https://hugo-ap0.pages.dev/bg/09.webp","permalink":"https://hugo-ap0.pages.dev/p/open-webui-deepseek-%E6%94%AF%E6%8C%81%E6%80%9D%E7%BB%B4%E9%93%BE/","title":"open webui deepseek 支持思维链"},{"content":"前言 本文将分享一个全面且有创意的自我介绍框架，既能涵盖基础信息，又能突出个性和独特性。\n介绍自己 20 个角度\n个人简介 专业技能 工作经历 成就与荣誉 兴趣爱好 联系方式 性格特点 教育背景 语言能力 社会实践 社团活动 志愿经历 培训经历 个人作品 证书资质 行业见解 职业规划 个人价值观 技术栈 沟通风格 除了介绍自己，还能介绍博客的主题，博客初衷等待。\n“关于”页面案例 hugo “关于”页面模板\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ## 👤 我是谁？ - 🎮 游戏老餮：原神开服玩家/王者荣耀泉水指挥官/Steam喜加一专业户 - 💻 专业级赛博搬砖工，致富宣言：\u0026#34;只要副本刷得够，排骨顿顿能加肉\u0026#34;（懂的都懂） - 🖼️ 壁纸收藏家：小红车创意工坊常驻嘉宾，桌面壁纸半小时一换星人 - 🔄 人形重启键：\u0026#34;遇到问题先重启\u0026#34;是刻进DNA的祖传秘方（成功率51%） - ⚠️ 免责声明：会写代码≠会修电脑！ ## 🌸 我的快乐老家 - 🌸 美少女游戏非专业测评员（XP系统公开版） - 🕹️ 游戏日常：原神锄大地/王者0-10-0的快乐/Steam喜加一重症患者 - 🔧 数码日常：图吧垃圾佬预备役 ## 📒 关于这个博客 - 🪟 Windows驯兽师笔记 - 🐧 Ubuntu生存指南 - 🕳️ 踩坑记录（同一个坑绝不掉两次...大概） - 🎬 剪辑民工进化论 - 📈 Excel野路子研究院 - 💾 赛博口粮储备站（全网失效链接墓志铭合集） ","date":"2025-03-09T00:00:00Z","image":"https://hugo-ap0.pages.dev/bg/03.webp","permalink":"https://hugo-ap0.pages.dev/p/hugo-%E5%85%B3%E4%BA%8E%E9%A1%B5%E9%9D%A2%E6%A8%A1%E6%9D%BF/","title":"hugo “关于”页面模板"},{"content":"前言 通过 hugo server 命令可以启动为服务端，默认端口为 1313。但如果直接通过 Nginx 的 proxy_pass 反代为公网服务会遇到一些问题，应该加上一些参数启动。\n比如搜索页面加载图片失败，wss 一直访问失败\n点击链接，域名会默认加端口号，导致访问失败 404\n解决方案 appendPort 参数，这里需要设置为 false，这样你的 baseURL 就不会变成 \u0026lt;域名\u0026gt;:1313。如果不设置为 false，你在使用搜索等功能的时候，浏览器还是会向 1313 端口发送请求。 baseURL 参数，不然搜索页面中的笔记自动跳转 localhost。 liveReloadPort 参数，这个是 Hugo 用来实时更新网页内容的 WebSocket 端口。除了要设置 Nginx 支持 WebSocket，这里还要手动指定下 wss 访问的端口为与 https 相同的 443。 完整命令\n1 hugo server --port=1313 --bind=192.168.15.210 --baseURL=https://www.carlos.lh/ --liveReloadPort 443 --appendPort=false ","date":"2025-03-09T00:00:00Z","image":"https://hugo-ap0.pages.dev/bg/37.webp","permalink":"https://hugo-ap0.pages.dev/p/hugo-nginx-%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E5%9F%9F%E5%90%8D%E9%BB%98%E8%AE%A4%E5%8A%A0%E7%AB%AF%E5%8F%A3%E5%8F%B7/","title":"hugo nginx 反向代理域名默认加端口号"},{"content":"前言 本文主题是实现 hugo stack 主题，点击图片放大的功能。\n原来图片很小，不方便自己查看，比如这里，根本看不清楚日志。\n实操 修改 config.toml 或者 hugo.yaml\n添加配置，编辑 /root/hugo 主目录下的 hugo.yaml，我的 Ubuntu 环境\n1 2 params: fancybox: true 路径为/layouts/_default/_markup/render-image.html 添加内容为\n1 2 3 4 5 6 7 {{if .Page.Site.Params.fancybox }} \u0026lt;div class=\u0026#34;post-img-view\u0026#34;\u0026gt; \u0026lt;a data-fancybox=\u0026#34;gallery\u0026#34; href=\u0026#34;{{ $Permalink }}\u0026#34;\u0026gt; \u0026lt;img loading=\u0026#39;lazy\u0026#39; src=\u0026#34;{{ $Permalink }}\u0026#34; alt=\u0026#34;{{ .Text }}\u0026#34; {{ with .Title}} title=\u0026#34;{{ . }}\u0026#34;{{ end }} /\u0026gt; \u0026lt;/a\u0026gt; \u0026lt;/div\u0026gt; {{ end }} 路径为 /root/hugo/themes/hugo-theme-stack/layouts/partials/footer，编辑 custom.html 内容为：\n1 2 3 4 5 {{if .Page.Site.Params.fancybox }} \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://cdn.jsdelivr.net/gh/fancyapps/fancybox@3.5.7/dist/jquery.fancybox.min.css\u0026#34; /\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/gh/fancyapps/fancybox@3.5.7/dist/jquery.fancybox.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; {{ end }} 重启 hugo 服务即可实现点击图片放大功能。\n","date":"2025-03-09T00:00:00Z","image":"https://hugo-ap0.pages.dev/bg/40.webp","permalink":"https://hugo-ap0.pages.dev/p/hugo-stack-%E5%9B%BE%E7%89%87%E7%82%B9%E5%87%BB%E6%94%BE%E5%A4%A7/","title":"hugo stack 图片点击放大"},{"content":"前言 本文主题是如何实现 hugo stack 主题添加 b 站图标（或者是称作徽标？）跳转个人主页配置\n就是添加这么一个小图标的功能，点击即可跳到 b 站的个人主页\n实操 下载对应图标：地址1 保存格式为 svg，然后将资源放到 /root/hugo/themes/hugo-theme-stack/assets/icons 目录下\n我的文件为 bilibili.svg\n添加对应配置文件即可。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 menu: main: [] social: - identifier: github name: GitHub url: https://github.com/zero3737 weight: 1 # 权重值，决定图标在导航栏中的位置，越小越靠前 params: icon: brand-github - identifier: bilibili name: Bilibili url: \u0026#34;https://space.bilibili.com/4069668\u0026#34; # 替换为你的 B 站个人主页链接 weight: 2 # 权重值，决定图标在导航栏中的位置，越小越靠前 params: icon: bilibili # 图标的名称，应与你放置在 `assets/icons/` 目录下的文件名（不带扩展名）一致 重启服务器，即可添加完成。\n","date":"2025-03-09T00:00:00Z","image":"https://hugo-ap0.pages.dev/bg/38.webp","permalink":"https://hugo-ap0.pages.dev/p/hugo-stack-%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0-b-%E7%AB%99%E5%9B%BE%E6%A0%87%E8%B7%B3%E8%BD%AC%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5%E9%85%8D%E7%BD%AE/","title":"hugo stack 主题添加 b 站图标跳转个人主页配置"},{"content":"查看进程 ps 命令：命令用于报告当前系统的进程状态。常用的组合有 ps aux\na：显示所有用户的进程 u：以用户友好的格式显示 x：显示没有控制终端的进程 1 ps aux | grep 进程名 第二列为 pid，关闭进程的时候会用到。\n关闭进程 kill 命令：kill 命令用于向进程发送信号，最常用的信号是 SIGTERM（终止）和 SIGKILL（强制终止）。\n1 2 kill 进程ID # 发送 SIGTERM 信号 kill -9 进程ID # 发送 SIGKILL 信号，强制终止 pkill 命令：pkill 命令可以根据进程名或其他属性直接终止进程，而无需先查找进程 ID。\n1 pkill 进程名 killall 命令：killall 命令可以根据进程名终止所有匹配的进程。\n1 killall 进程名 ","date":"2025-03-09T00:00:00Z","image":"https://hugo-ap0.pages.dev/bg/10.webp","permalink":"https://hugo-ap0.pages.dev/p/linux-%E4%B8%AD%E6%9F%A5%E7%9C%8B%E8%BF%9B%E7%A8%8B%E4%BB%A5%E5%8F%8A%E6%9D%80%E6%AD%BB%E8%BF%9B%E7%A8%8B%E7%9A%84%E6%96%B9%E6%B3%95/","title":"Linux 中查看进程以及杀死进程的方法"},{"content":"前言 在局域网中复制代码，提示报错信息\n1 2 Uncaught TypeError: Cannot read properties of undefined (reading \u0026#39;writeText\u0026#39;) at HTMLButtonElement.\u0026lt;anonymous\u0026gt; (main.0761bcd8210a6cd3dc991b9464d19e763381e47bd94d7f30c1a0df2d68d6eb33.js:486:31) 而在本地却能正常复制粘贴，比如 localhost 可以正常复制粘贴。这可能是因为在局域网环境下，浏览器对剪贴板的访问权限被限制，导致navigator.clipboard对象不可用，从而引发该错误。\n解决方案 使用HTTPS：浏览器在非安全上下文（如HTTP）中可能会限制对剪贴板的访问。因此，建议在局域网中使用HTTPS来启动Hugo服务器。可以通过生成自签名的TLS证书来实现HTTPS，虽然浏览器可能会提示不安全，但对于本地开发和测试来说已经足够。\nnginx 配置 https 即可\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 server { listen 80; server_name www.carlos.lh; # 强制HTTPS return 301 https://$host$request_uri; } server { listen 443 ssl; server_name www.carlos.lh; ssl_certificate /root/ssl/server.crt; ssl_certificate_key /root/ssl/server.key.unsecure; ssl_session_cache shared:SSL:10m; ssl_session_timeout 5m; ssl_ciphers HIGH:!aNULL:!MD5; ssl_prefer_server_ciphers on; location / { proxy_pass http://192.168.15.210:1313; # 将请求转发到本地的8080端口 proxy_set_header Host $http_host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Real-Port $remote_port; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header X-Forwarded-Host $host; proxy_set_header X-Forwarded-Port $server_port; proxy_set_header REMOTE-HOST $remote_addr; proxy_connect_timeout 60s; proxy_send_timeout 600s; proxy_read_timeout 600s; proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection $connection_upgrade; } # 其他配置... } 局域网配置 https 即可正常复制，非常完美\n","date":"2025-03-08T00:00:00Z","image":"https://hugo-ap0.pages.dev/bg/13.webp","permalink":"https://hugo-ap0.pages.dev/p/hugo-stack-%E5%B1%80%E5%9F%9F%E7%BD%91%E4%B8%AD%E4%BB%A3%E7%A0%81%E5%9D%97%E4%B8%8D%E8%83%BD%E5%A4%8D%E5%88%B6/","title":"hugo stack 局域网中代码块不能复制"},{"content":"前言 我是局域网访问，使用搜索功能的时候，可以搜索出笔记，但是图片加载不出来，点击链接，直接 404，直接访问到 localhost，正常是访问 ip 地址的。\n这是因为启动命令没有设置 baseURL，添加这个参数即可正常访问。\n实操 命令添加参数 baseURL\n1 hugo server --port=1313 --bind=0.0.0.0 --baseURL=\u0026#34;http://192.168.15.210/\u0026#34; 加了参数之后，图片能正常加载，也能正常跳转指定的 ip 地址。\n","date":"2025-03-08T00:00:00Z","image":"https://hugo-ap0.pages.dev/bg/46.webp","permalink":"https://hugo-ap0.pages.dev/p/hugo-stack-%E6%90%9C%E7%B4%A2%E9%A1%B5%E9%9D%A2%E8%B7%B3%E8%BD%AC%E5%88%B0-localhost-%E9%97%AE%E9%A2%98/","title":"hugo stack 搜索页面跳转到 localhost 问题"},{"content":"启动文件夹 按 Win + R 键打开“运行”对话框。\n输入 shell:startup 并按 Enter 键，这将打开“启动”文件夹。这个文件夹中的所有程序都会在系统启动时自动运行。\n将脚本放入“启动”文件夹‌。\n隐藏命令窗口 创建文件，内容如下：\n1 2 Set WshShell = CreateObject(\u0026#34;WScript.Shell\u0026#34;) WshShell.Run chr(34) \u0026amp;\u0026#34;C:\\path\\to\\your\\batchfile.bat\u0026#34;\u0026amp; chr(34), 0 替换\u0026quot;C:\\path\\to\\your\\batchfile.bat\u0026quot;为你的批处理文件的实际路径。\n保存文件，扩展名为.vbs，例如runBatchSilent.vbs。\n将 vbs 文件放到“启动”文件夹，bat 文件放到自己喜欢的目录即可，vbs 中的路径一定要指向 bat 文件，原理是通过 vbs 隐藏命令窗口。\n","date":"2025-03-08T00:00:00Z","image":"https://hugo-ap0.pages.dev/bg/30.webp","permalink":"https://hugo-ap0.pages.dev/p/windows-%E5%BC%80%E6%9C%BA%E6%89%A7%E8%A1%8C-bat-%E8%84%9A%E6%9C%AC%E5%90%AB%E9%9A%90%E8%97%8F%E5%91%BD%E4%BB%A4%E7%AA%97%E5%8F%A3/","title":"windows 开机执行 bat 脚本，含隐藏命令窗口"},{"content":"前言 如何关闭 edge 自动填充表单功能\n在输入框中，输入信息，会自动弹出经常输入的信息，而且删不掉，没有任何实际作用。\n实操 地址栏输入 edge://wallet/settings\n关闭“保存并填充基本信息”即可\n","date":"2025-03-08T00:00:00Z","image":"https://hugo-ap0.pages.dev/bg/39.webp","permalink":"https://hugo-ap0.pages.dev/p/%E5%85%B3%E9%97%AD-edge-%E8%87%AA%E5%8A%A8%E5%A1%AB%E5%85%85%E8%A1%A8%E5%8D%95%E5%8A%9F%E8%83%BD/","title":"关闭 edge 自动填充表单功能"},{"content":"前言 图片懒加载是一种网页优化技术，用于延迟加载非关键的图片资源，直到用户滚动到它们的位置。这样可以加快页面初始加载速度，节省带宽，提升用户体验。\n工作原理 延迟加载：当网页加载时，只加载可视区域内的图片，其他图片暂不加载。 滚动检测：用户滚动页面时，检测图片是否进入可视区域。 按需加载：一旦图片进入可视区域，立即加载该图片。 优点 加快初始加载：减少首次加载的资源量，页面更快呈现。 节省带宽：用户无需加载未查看的图片，减少数据流量。 优化体验：页面响应更快，浏览更流畅。 应用场景 长网页：包含大量图片的长页面，如电商网站商品列表。 图片库：图片较多的页面，如社交媒体相册。 移动设备：带宽有限时，节省流量尤为重要。 实现方式 JavaScript 监听滚动事件：通过 onscroll 事件检测图片位置。 使用 Intersection Observer API：现代浏览器推荐，高效检测元素可见性。 第三方库：如 lazyload，简化实现过程。 懒加载技术在现代网页开发中广泛应用，有效提升性能和用户体验。\n","date":"2025-03-08T00:00:00Z","image":"https://hugo-ap0.pages.dev/bg/58.webp","permalink":"https://hugo-ap0.pages.dev/p/%E5%9B%BE%E7%89%87%E6%87%92%E5%8A%A0%E8%BD%BD/","title":"图片懒加载"},{"content":"前言 如何删除以及恢复 github 仓库，图文教程。\n删除 github 仓库 仓库主页找到 settings\n找到 general，往下滑\n点击如图按钮即可删除 github 仓库。\n恢复 github 仓库 点击头像\n找到\u0026quot;Deleted repositories\u0026quot;\n即可看到最近的仓库，如果时间太久，会永远删除。如果没有显示，就是删除时间太快，服务器还没有刷新，等一个小时就好。\n","date":"2025-03-07T00:00:00Z","image":"https://hugo-ap0.pages.dev/bg/20.webp","permalink":"https://hugo-ap0.pages.dev/p/github-%E5%88%A0%E9%99%A4%E4%BB%93%E5%BA%93/","title":"github 删除仓库"},{"content":"前言 本文是说明 hugo 基础配置，比如配置网站图标以及汉化主题等等。\nhugo 网站图片 hugo 配置文件，搜索 favicon 即可，填入图标地址即可。\nstack 网站主页头像 要修改 hugo 主页头像，不同主题修改方式不一样，以 stack 主题为例，将头像放到对应目录即可。\n我的是 /root/hugo/themes/hugo-theme-stack/assets/img 目录下。\n配置推广链接 我使用的 stack 主题，不同主题修改方式不同。\n搜索 github，修改成自己 github 主页地址。\n侧边栏汉化 侧边栏部分英文，需要修改页面数据。\n找到对应目录，编辑 md 文件即可。\n以 archives 为例，修改成“归档”即可。\nLanguage 如果只想保持一种语言，则 config 中的 language 只保留一种语言，如中文：\n1 2 3 4 languages: zh-cn: languageName: 中文 weight: 1 友链、归档多列显示 /root/hugo/themes/hugo-theme-stack/assets/scss 自定义 custom.scss 样式\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 @media (min-width: 1024px) { .article-list--compact { display: grid; // 目前是两列，如需三列，则后面再加一个1fr，以此类推 grid-template-columns: 1fr 1fr; background: none; box-shadow: none; gap: 1rem; article { background: var(--card-background); border: none; box-shadow: var(--shadow-l2); margin-bottom: 8px; margin-right: 8px; border-radius: 16px; } } } 删除归档页面中的分类 定位 /root/hugo/themes/hugo-theme-stack/layouts/_default 目录，编辑 archives.html 文件即可\n注释图中 html 片段即可\n归档页面添加标签 在 layouts/_default/archives.html 里的 \u0026lt;/header\u0026gt; 后面加上如下代码：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 {{- $taxonomy := $.Site.GetPage \u0026#34;taxonomyTerm\u0026#34; \u0026#34;tags\u0026#34; -}} {{- $terms := $taxonomy.Pages -}} {{ if $terms }} \u0026lt;section class=\u0026#34;widget tagCloud\u0026#34;\u0026gt; \u0026lt;h2 class=\u0026#34;section-title\u0026#34;\u0026gt;{{ $taxonomy.Title }}\u0026lt;/h2\u0026gt; \u0026lt;div class=\u0026#34;tagCloud-tags\u0026#34;\u0026gt; {{ if ne (len $.Site.Taxonomies.tags) 0 }} {{ range $name, $taxonomy := $.Site.Taxonomies.tags }} {{ $tagCount := len $taxonomy.Pages }} \u0026lt;a href=\u0026#34;{{ \u0026#34;/tags/\u0026#34; | relURL }}{{ $name | urlize }}\u0026#34; class=\u0026#34;tagCloud-tags\u0026#34;\u0026gt; {{ $name }}\u0026lt;span class=\u0026#34;tagCloud-count\u0026#34;\u0026gt;{{ $tagCount }}\u0026lt;/span\u0026gt; \u0026lt;/a\u0026gt; {{ end }} {{ end }} \u0026lt;/div\u0026gt; \u0026lt;section\u0026gt; {{ end }} /root/hugo/themes/hugo-theme-stack/assets/scss 自定义 custom.scss 样式\n1 2 3 4 5 .tagCloud { .tagCloud-count { color: var(--body-text-color); } } 引入动态背景 定位 /root/hugo/themes/hugo-theme-stack/layouts/partials/footer 编辑 custom.html\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 \u0026lt;div id=\u0026#34;particles-js\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.bootcdn.net/ajax/libs/particles.js/2.0.0/particles.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt; particlesJS.load(\u0026#39;particles-js\u0026#39;, \u0026#34;https://letere-gzj.github.io/hugo-stack/background/particles/particlesjs-config.json\u0026#34;, function() { console.log(\u0026#39;particles.js loaded - callback\u0026#39;); }); \u0026lt;/script\u0026gt; \u0026lt;style\u0026gt; #particles-js { position: fixed; top: 0; left: 0; width: 100%; z-index: -1; } \u0026lt;/style\u0026gt; 图片懒加载 注：Stack 主题默认有懒加载，不需要自行添加\n实现：/layouts/_default/_markup 中新建 render-image.html 然后丢入代码：\n1 2 3 \u0026lt;p class=\u0026#34;md_image\u0026#34;\u0026gt; \u0026lt;img loading=\u0026#39;lazy\u0026#39; src=\u0026#34;{{ $Permalink }}\u0026#34; alt=\u0026#34;{{ .Text }}\u0026#34; {{ with .Title}} title=\u0026#34;{{ . }}\u0026#34;{{ end }} /\u0026gt; \u0026lt;/p\u0026gt; ","date":"2025-03-07T00:00:00Z","image":"https://hugo-ap0.pages.dev/bg/09.webp","permalink":"https://hugo-ap0.pages.dev/p/hugo-stack-%E4%B8%BB%E9%A2%98%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/","title":"hugo stack 主题基础配置"},{"content":"前言 本文主题是如何批量重命名文件，从 00 开始递增，强制保留 2 位数\n使用 PowerRename 批量重命名 右键点击选定的文件，选择“PowerRename”选项，打开 PowerRename 窗口。\n启用正则表达式，输入 .* 匹配任意文件名\n在“替换为”字段中输入新的命名格式。使用 ${padding=2;increment=1;start=0} 来实现从 00 开始的两位数递增编号。\n最后点击应用即可。\n","date":"2025-03-07T00:00:00Z","image":"https://hugo-ap0.pages.dev/bg/02.webp","permalink":"https://hugo-ap0.pages.dev/p/powertoys-%E6%89%B9%E9%87%8F%E9%87%8D%E5%91%BD%E5%90%8D/","title":"PowerToys 批量重命名"},{"content":"限定符“？” 当 “?” 紧跟在一个字符或子表达式之后时，它表示该字符或子表达式在匹配中可以出现0次或1次。换句话说，它是可选的。\n例如，colou?r 可以匹配 “color” 或 “colour”。\n限定符“*” 在正则表达式中，“* ”具有特殊的匹配规则，它表示前面的字符或子表达式可以出现任意次数，包括零次。例如，正则表达式a*可以匹配空字符串、一个“a”、两个连续的“a”、三个连续的“a”等等，即匹配零个或多个连续的字母“a”‌。\n限定符“+” 在正则表达式中，“+”是一个量词，用于指定前面的字符或子表达式必须至少出现一次，并且可以重复出现多次。例如，正则表达式a+可以匹配“a”、“aa”、“aaa”等，但不能匹配空字符串。这是因为“+”要求前面的字符或子表达式至少出现一次。\n限定符“{}” 在正则表达式中，“{}”内部可以包含一个数字或两个由逗号分隔的数字，具体含义如下：\n{n}‌：表示前面的字符或子表达式恰好出现n次。例如，a{3}将匹配三个连续的“a”字符‌。 {n,}‌：表示前面的字符或子表达式至少出现n次，可以更多。例如，a{1,}表示至少有一个“a”，可以是一个或多个连续的“a”字符‌。 {n,m}‌：表示前面的字符或子表达式至少出现n次，但不超过m次。例如，a{1,3}将匹配一个到三个连续的“a”字符‌。 限定符“()” 在正则表达式中，括号“（）”可以将一些字符组合在一起，形成一个分组。这个分组通常用于确定优先级、重复次数或应用特殊的匹配规则。例如，(ab)可以将字符a和b组合在一起作为一个整体进行匹配，而(abc|bcd|cde)则表示匹配abc、bcd或cde这三者之一‌。\n运算符“|” 在正则表达式中，“|”被称为选择符，它允许在两个或多个可能的匹配中进行选择。例如，正则表达式abc|def将匹配字符串“abc”或“def”。需要注意的是，选择符“|”会优先于其他运算符进行匹配，除非被括号等分组符号所包围。\n字符类“[]” ‌正则表达式中的“[]”用于定义一个字符集合，匹配方括号内的任意一个字符‌。\n在正则表达式中，[]被称为字符类，它允许匹配方括号内指定的任意一个字符。例如，[abc]表示匹配字符a、b或c中的任意一个；[a-z]表示匹配任意一个小写字母；[a-zA-Z0-9_]表示匹配任意一个字母、数字或下划线。此外，字符类还支持使用“^”符号进行取反操作，例如[^abc]表示匹配不是a、b或c的任意一个字符‌。\n元字符“\\d” ‌正则表达式中的\\d代表匹配一个数字字符‌。等价于[0-9]，即它可以匹配任何一个在0到9之间的单个数字‌。\n元字符“\\D” ‌正则表达式中的\\D代表匹配任何非数字字符‌。这里的“非数字字符”是指除了0到9的数字之外的所有字符，包括字母、空格、标点符号、特殊字符等。\n具体来说，\\D是\\d的反义，\\d匹配的是[0-9]，即任何一个数字字符，而\\D则匹配的是[0-9]，即除了0到9之外的任何一个字符。\n元字符“\\w” 正则表达式中的\\w代表匹配任何字母（包括大写和小写字母）、数字字符以及下划线_‌。\n具体来说，\\w相当于[a-zA-Z0-9_]，即它可以匹配以下字符：\n所有小写字母（a-z） 所有大写字母（A-Z） 所有数字（0-9） 下划线（_） 元字符“\\W” ‌正则表达式中的\\W代表匹配任何非单词字符‌。这里的“非单词字符”是指除了字母（包括大写和小写）、数字以及下划线之外的所有字符。\n具体来说，\\W是\\w的反义，\\w匹配的是[a-zA-Z0-9_]，即字母、数字和下划线，而\\W则匹配的是[a-zA-Z0-9_]，即除了字母、数字和下划线之外的所有字符，包括空格、标点符号、特殊字符等。\n元字符“\\s” 正则表达式中的\\s表示匹配任何空白字符‌。这些空白字符包括空格、制表符（tab）、换行符等‌。\n元字符“\\b” 在正则表达式中，\\b 是一个表示单词边界的元字符。它用来匹配一个位置，这个位置前后分别是一个单词字符和一个非单词字符（或字符串的开始或结束）。\n以下是一些例子来说明它的使用：\n正则表达式 \\bword\\b 会匹配独立的单词“word”。比如，在字符串“word boundary”中会匹配“word”，但在字符串“wordplay”中不会匹配。 正则表达式 \\b123\\b 会匹配独立的数字“123”。比如，在字符串“123 is a number”中会匹配“123”，但在字符串“1234”中不会匹配。 元字符“.” 在正则表达式中，. 是一个非常重要的元字符，‌它代表匹配除换行符 \\n 之外的任何单个字符‌。这意味着，. 可以匹配字母、数字、标点符号、空格等几乎所有字符（但不包括换行符，除非在特定的模式或标志下，如 JavaScript 中的 s 标志可以使其匹配换行符）。\n‌匹配任意字符‌：正则表达式 a.b 可以匹配 acb、a1b、a b（注意这里的空格也是字符）等，但不能匹配 ab（因为中间没有字符）或 a\\nb。\n元字符“^” 在正则表达式中，符号“^”有两种主要用途：\n表示行的开始：当它出现在模式的开头时，表示字符串必须以该模式开头。例如，模式^abc将匹配以“abc”开头的任何字符串。 取反：当它在方括号内的字符类的开头时，表示字符类中的字符集的补集。例如，模式\\[^abc\\]将匹配任何不包含字符“a”、“b”或“c”的单个字符。 元字符“$” 在正则表达式中，符号“$”主要用于表示行的结束。当它出现在模式的末尾时，表示字符串必须以该模式结束。\n例如：正则表达式 abc$ 可以匹配以“abc”结尾的任何字符串，例如“123abc”，但不能匹配“abc123”。\n“贪婪”和“懒惰”匹配 正则表达式中的“贪婪”和“懒惰”是描述量词行为的术语。量词用来指定要匹配的字符数，而贪婪和懒惰决定了这些量词如何进行匹配。\n贪婪量词：默认情况下，正则表达式中的量词是贪婪的，即它们会尽可能多地匹配字符。\n例如，模式 .* 是一个贪婪量词，会匹配尽可能多的字符。例如，对于字符串“abc123”，模式 a.*3 会匹配“abc123”。\n懒惰量词：懒惰量词通过在贪婪量词后面加上一个问号?来实现，它们会匹配尽可能少的字符。\n例如，模式 .? 是一个懒惰量词，会匹配尽可能少的字符。例如，对于字符串“abc123”，模式 a.?3 会匹配“abc3”。\n","date":"2025-03-07T00:00:00Z","image":"https://hugo-ap0.pages.dev/bg/08.webp","permalink":"https://hugo-ap0.pages.dev/p/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/","title":"正则表达式"},{"content":"Homepage 主要配置文件功能介绍 1、settings.yaml\nhomepage的设置文件，用来设置：语言、布局、标题、favicon图标、背景图片等。\n2、service.yaml\nhomepage的服务文件，用来设置：Docker或其他服务导航入口等。\n3、widgets.yaml\nhomepage的小组件文件，用来设置：功能显示如：CPU、内存占用率、温度、上线时间等；搜索框、天气、日期和时间等。\n4、bookmarks.yaml\nhomepage的书签文件，用来设置：网站收藏书签、书签图标、url等。\nsettings.yaml language：语言设置 background：背景图片设置 1 2 3 4 5 6 7 8 9 10 providers: openweathermap: openweathermapapikey weatherapi: weatherapiapikey language: zh-CN background: image: https://images.unsplash.com/photo-1502790671504-542ad42d5189?auto=format\u0026amp;fit=crop\u0026amp;w=2560\u0026amp;q=80 hideVersion: true services.yaml 配置模板：\n1 2 3 4 5 6 7 8 9 10 11 12 - 媒体影音: - EmbyServer: icon: emby.png href: http://x.x.x.x:8096/ # Emby IP:8096 description: Movies \u0026amp; TV Shows ping: 127.0.0.1 # Emby IP widget: type: emby url: http://x.x.x.x:8096 key: xxxxxxxxxxxxxxxxxxxxxxxxxxxxx enableBlocks: true # optional, defaults to false enableNowPlaying: true # optional, defaults to true Group 组和 Service 服务之前要用 -，且上下级空格排列，下面参数要多几个空格对齐。\nhomepage内置自带图标集合。使用的是如下开源图标集：https://github.com/homarr-labs/dashboard-icons/blob/main/ICONS.md\n我们可以在icon参数中，直接调用。只要是以上图标集中存在的图标即可。\nhref 中 url 结尾有 / 比如 http://xxxx:1234/，与之后添加组件 widget 中的 url 不需要加 /，两者是不同的。\nHomepage支持的服务非常多，每个具体的widget组件参数设置均不相同，具体可以查看：https://gethomepage.dev/widgets/\nwidgets.yaml 此为 homepage 的功能组件，注意和 service 的 widgets 服务组件参数区分。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 # 比如上线时间、CPU使用率、温度范围最低最高等扩展显示 - resources: cpu: true memory: true disk: / cputemp: false # disabled by default uptime: true # disabled by default expanded: true # show the expanded view # 搜索框设置，可选搜索引擎：如百度、谷歌等，_blank搜索结果开新页面显示 - search: provider: [google, baidu] target: _blank # 天气组件 - openmeteo: label: 中山小榄 # optional latitude: 22.671981 longitude: 113.243876 timezone: Asia/Shanghai # optional units: metric # or imperial cache: 5 # Time in minutes to cache API responses, to stay within limits bookmarks.yaml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 - Developer: - Github: - abbr: GH href: https://github.com/ - Social: - Reddit: - icon: reddit.png href: https://reddit.com/ description: The front page of the internet - Entertainment: - YouTube: - abbr: YT href: https://youtube.com/ 也可使用http/https网页图标，如：https://www.baidu.com/favicon.ico\n","date":"2025-03-06T00:00:00Z","image":"https://hugo-ap0.pages.dev/bg/54.webp","permalink":"https://hugo-ap0.pages.dev/p/homepage-%E9%85%8D%E7%BD%AE/","title":"homepage 配置"},{"content":"本地存储方案 一、static 文件夹集中管理\n在 Hugo 项目根目录创建 static/images 文件夹，将图片统一存放于此。引用时使用绝对路径：![描述](/images/图片名.jpg)。\n优势：Hugo 构建时自动复制到网站根目录，路径稳定，适合高频更新且需长期保留的图片‌。\n二、内容同级目录管理\n在 content 目录下，创建与 Markdown 文件同名的文件夹（如 post.md 对应 post 文件夹），将图片存放其中。引用时使用相对路径：![描述](./图片名.jpg)。\n优势：图片与笔记文件物理位置绑定，迁移或备份时不易丢失关联，适合单篇笔记专属图片‌。\n三、Assets 资源库管理\n在 assets/images 中存放全局图片（如头像、Logo），通过配置文件 config.toml 指定路径。示例配置：avatarURL = \u0026quot;images/avatar.png\u0026quot;。\n优势：统一管理全站公共图片资源，便于复用和维护‌4。\n符号链接 hugo static 目录可以使用符号链接，而 content/post 目录是不能使用符号链接，hugo 默认忽略 post 中的符号链接。\n","date":"2025-03-06T00:00:00Z","image":"https://hugo-ap0.pages.dev/bg/34.webp","permalink":"https://hugo-ap0.pages.dev/p/hugo-%E7%AC%94%E8%AE%B0%E5%9B%BE%E7%89%87%E7%AE%A1%E7%90%86/","title":"hugo 笔记图片管理"},{"content":"前言 本文是在 ubuntu 环境中安装 hugo。\n安装 安装命令\n1 2 sudo apt update sudo apt -y install hugo 验证是否安装成功\n1 hugo version 安装成功会显示如下信息。\n启动与配置 创建站点目录\n1 hugo new site quickstart 将主题文件放到站点目录中的 themes 目录下\n启动 hugo 服务\n1 hugo server 绑定到 0.0.0.0 hugo server 默认绑定到 127.0.0.1（localhost），因此只能在本机访问。\n1 hugo server --bind=\u0026#34;0.0.0.0\u0026#34; 在启动 hugo server 时，使用 \u0026ndash;bind 参数将其绑定到 0.0.0.0，这样可以监听所有网络接口。\n这样，局域网内的其他设备可以通过你的服务器 IP 地址访问 Hugo 服务。例如，如果服务器的 IP 是 192.168.1.100，可以通过 http://192.168.1.100:1313 访问。\n指定端口号 如果需要指定端口号，可以使用 -p 参数：\n1 hugo server --bind=\u0026#34;0.0.0.0\u0026#34; -p 1234 设置 baseURL 如果页面资源加载失败或样式错乱，可能是因为 baseURL 默认指向 localhost。可以通过 \u0026ndash;baseURL 参数指定为服务器的 IP 地址：\n1 hugo server --bind=\u0026#34;0.0.0.0\u0026#34; --baseURL=\u0026#34;http://192.168.1.100/\u0026#34; 将 192.168.1.100 替换为你的实际服务器 IP。\n主题 把 hugo_blog/themes/hugo-theme-stack/exampleSite/config.yaml 文件拷贝到 hugo_blog 目录下。 把 hugo_blog/themes/hugo-theme-stack/exampleSite/content 目录下的文件拷贝到 hugo_blog 目录下。 hugo-theme-stack 主题有样例配置文件作为参考，直接复制粘贴即可。\n头部元数据 Hugo 的 ‌Front Matter‌（文件头部元数据）定义了内容的核心参数，控制页面生成、URL 结构和内容管理。\n参数 说明 slug 自定义文章 URL 末尾部分，优先级高于标题（title）‌ draft 标记是否为草稿（true/false），草稿默认不发布到生产环境‌ categories 类别 tags 标签 image 定义文章或页面的封面图 title‌ 定义页面标题 date 设置内容发布日期，控制文章在列表中的排序 description 提供页面摘要描述，用于 SEO 优化和社交媒体分享 weight 控制内容在列表或菜单中的排序权重 author 声明文章作者信息，支持多作者配置 categories 和 tags\n1 2 categories = [\u0026#34;技术\u0026#34;, \u0026#34;前端\u0026#34;] # 支持多层级 tags = [\u0026#34;Hugo\u0026#34;, \u0026#34;静态站点\u0026#34;] # 多个标签以数组形式定义‌:ml-citation{ref=\u0026#34;1\u0026#34; data=\u0026#34;citationList\u0026#34;} image 基础用法，需将图片存放在 static 目录下，通过相对路径引用‌。\n1 image = \u0026#34;/img/logo3.png\u0026#34; # 对应 static/img/logo3.png 支持 http 远程调佣\n1 image = \u0026#34;https://example.com/cover.jpg\u0026#34; 文章不同元数据模板 ‌TOML 格式‌编写元数据，用来兼容 hugo\n1 2 3 4 5 6 7 8 9 +++ date = \u0026#34;{{date:YYYY-MM-DD}}\u0026#34; title = \u0026#34;{{title}}\u0026#34; tags = [\u0026#34;Hugo\u0026#34;, \u0026#34;静态站点\u0026#34;] categories = [\u0026#34;技术\u0026#34;, \u0026#34;前端\u0026#34;] description = \u0026#34;hello world!\u0026#34; image = \u0026#34;https://api.timelessq.com/bing/random\u0026#34; author = \u0026#34;carlos\u0026#34; +++ YAML 格式‌编写元数据\n1 2 3 4 5 --- title: \u0026#34;示例文章\u0026#34; date: 2025-03-06 draft: false --- JSON 格式\n1 2 3 4 5 { \u0026#34;title\u0026#34;: \u0026#34;示例文章\u0026#34;, \u0026#34;date\u0026#34;: \u0026#34;2025-03-06\u0026#34;, \u0026#34;draft\u0026#34;: false } ","date":"2025-03-06T00:00:00Z","image":"https://hugo-ap0.pages.dev/bg/49.webp","permalink":"https://hugo-ap0.pages.dev/p/hugo-%E5%85%A5%E9%97%A8%E7%AF%87/","title":"hugo 入门篇"},{"content":"前言 在 hugo 中，当文章时间设置为当天的话，将文章发布到国外服务器中并进行构建的话，该文章可能没有显示在文章列表里。\nHugo 时间默认为格林威治时间，因为中国的时间比格林威治时间早 8 个小时，格林威治时间没有到你配置的时间的时候，文章是不会出现在文章列表里的。\n解决方案 解决方法一： 是在命令后添加 \u0026ndash;buildFuture 或 -F 选项 ，来构建未来发布的文章，比如：\n1 2 hugo server --buildFuture hugo --buildFuture 解决方法二： 在站点配置文件 config.toml 中添加下面的配置：\n1 buildfuture = true 我的是 yaml 文件，文件末尾添加即可\n","date":"2025-03-06T00:00:00Z","image":"https://hugo-ap0.pages.dev/bg/15.webp","permalink":"https://hugo-ap0.pages.dev/p/hugo-%E6%97%B6%E5%8C%BA%E9%97%AE%E9%A2%98%E5%AF%BC%E8%87%B4%E6%96%87%E7%AB%A0%E6%9C%AA%E6%98%BE%E7%A4%BA/","title":"hugo 时区问题导致文章未显示"},{"content":"文件与链接 配置如图\n内部链接类型选择“相对路径”，兼容markdown “使用wiki链接”关闭，兼容markdown 修改“附件默认存放路径”，不然图片默认存放根目录，很不美观 兼容 joplin joplin 导出 markdown 默认目录结构。\nobsidian 主流知识库目录结构要符合主流标准，不然很难管理。joplin 附件都是存放在自己的数据文件夹下，用户不用关心附件管理问题。而 obsidian 需要自己设计知识库目录结构，不然管理非常头疼。\n我的设计思路非常简单，根目录下穿件 00-assets 目录，用于存放所有附件即可。\n看起来非常清爽，为了兼容新的目录结构，需要使用符号链接。\n先将 _resources 目录重命名为 00-assets，然后运行命令\n1 mklink /D \u0026#34;C:\\Users\\carlos\\Desktop\\obsidian\\_resources\u0026#34; \u0026#34;C:\\Users\\carlos\\Desktop\\obsidian\\00-assets\u0026#34; 这样导出的 markdown 文件就能在 vscode 中正常显示图片，已经完美兼容 obsidian\n快捷键 快捷键 说明 ctrl+shift+v 无格式粘贴 ctrl+o Ctrl+O 可直接打开“打开文件”对话框，用于快速选择并加载本地文件‌。 ctrl+p 调出命令面板 右键快速插入表格\n元数据 在笔记第 1 行输入 --- 用于添加元数据。\n双链 反向链接，不用手动链接，当别的笔记提到当前文件名，就会自动提示。\n不过很鸡肋唉，谁会写笔记的时候复制粘贴别的笔记名啊。\n出链，和网页的跳转页面一样，就是跳转到需要链接的笔记。和反向链接一样，输入需要链接的笔记名，就会自动显示。\n白板 侧边栏创建白板\n简单可视化操作，就是实现思维导图。\n第三方插件 如果网络访问不了官方社区，可以访问第三方社区：地址1 首先关闭安全模式\n点击浏览即可安装第三方插件，访问的是 github\n模板 开启原生模板插件，点击左下角「设置」→「核心插件」→ 启用「模板」功能‌。\n在「模板」插件设置中指定模板文件夹（如 Templates）‌。\n编写模板内容，在 Templates 文件夹新建 hugo-template.md，内容如下\n1 2 3 4 5 6 7 8 9 10 +++ date = \u0026#34;{{date:YYYY-MM-DD}}\u0026#34; author = \u0026#34;carlos\u0026#34; title = \u0026#34;{{title}}\u0026#34; description = \u0026#34;hello worlld!\u0026#34; tags = [ \u0026#34;hello\u0026#34;, \u0026#34;world\u0026#34;, ] +++ 插入模板到新笔记\n新建笔记 → 点击左侧「插入模板」按钮 → 选择模板文件。 手动补充字段 Obsidian 原生模板语法只支持动态插入时间日期，其他需要自己手动填写。\n","date":"2025-03-06T00:00:00Z","image":"https://hugo-ap0.pages.dev/bg/18.webp","permalink":"https://hugo-ap0.pages.dev/p/obsidian-%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/","title":"obsidian 基础使用教程"},{"content":"前言 知识库目录结构设计：\n临时收集层‌：设立Inbox文件夹存放未整理的零散笔记，作为缓冲区域‌。 时间维度‌：通过Calendar或日期格式文件夹（如2025/03/2025-03-06）管理日记、会议记录等时间敏感内容‌。 主题/领域层‌：按知识领域（如Domains/Science、Domains/Technology）或项目（如Projects/Work）分类核心笔记‌。 功能辅助层‌：设置Sources（文献）、Cards（卡片笔记）等文件夹存放特定类型内容‌。 动态调整机制：\n新笔记先进入Inbox，定期整理后迁移至主题或时间目录‌。 高频使用的笔记可保留在主题目录，低频或完成的项目移至Archive归档文件夹‌。 我这里只保留了草稿区和归档区。assets 用来保存图片和附件，templates 用来存放模板文件。\n实例 方案1，以主题为主，时间为辅，适用场景‌：知识库以学科领域或长期项目为核心。\n1 2 3 4 5 6 7 📂 Knowledge_Base ├─ 📂 Domains # 主题领域 │ ├─ 📂 Science │ └─ 📂 Technology ├─ 📂 Projects # 短期项目 ├─ 📂 Calendar # 时间相关笔记（日记、会议记录） └─ 📂 Inbox # 临时收集区 方案2，时间轴驱动，‌适用场景‌：日记、日常灵感记录为主。\n实现方式‌：\n设置日记模板路径为YYYY/MM/YYYY-MM-DD，按年月自动生成嵌套文件夹‌。 结合标签（如#会议、#灵感）实现跨时间检索。 方案3，功能导向扁平化，适用场景‌：追求快速检索，避免过度分类。\n结构示例‌：\n1 2 3 4 📂 Notes ├─ 📄 2025-03-06-会议纪要 # 直接以日期+标题命名 ├─ 📄 科技趋势分析 # 主题型笔记 └─ 📂 Archive # 低频内容归档 总结 避免过度细分‌：文件夹层级建议不超过3层，依赖搜索和双向链接替代硬性分类‌。 统一命名规则‌：日期格式（如YYYY-MM-DD）、主题前缀（如[科技]XXX）提升可读性‌。 结合插件优化‌：使用Templater自动生成时间目录，或Quick Switcher快速跳转高频文件夹‌。 ","date":"2025-03-06T00:00:00Z","image":"https://hugo-ap0.pages.dev/bg/25.webp","permalink":"https://hugo-ap0.pages.dev/p/obsidian-%E7%9F%A5%E8%AF%86%E5%BA%93%E8%AE%BE%E8%AE%A1/","title":"obsidian 知识库设计"},{"content":"前言 符号链接（Symbolic Link）是一种文件系统中的概念，它允许你创建一个指向另一个文件或目录的快捷方式。符号链接在 Windows、Linux 和 Mac 系统中都有支持，但它们的行为和兼容性可能会有所不同。下面我将详细解释符号链接的作用以及为什么在某些情况下可能无法兼容不同路径。\nWindows 使用 在 Windows 系统中，可以使用 mklink 命令来创建符号链接。以下是基本语法：\n1 mklink /D \u0026#34;目标目录\u0026#34; \u0026#34;源目录\u0026#34; 例如，假设你的 Joplin 导出目录是 D:\\JoplinExport，而你的 Obsidian 目录是 C:\\ObsidianVault，你可以使用以下命令在 Obsidian 目录中创建一个指向 Joplin 导出目录的符号链接：\n1 mklink /D \u0026#34;C:\\ObsidianVault\\JoplinExport\u0026#34; \u0026#34;D:\\JoplinExport\u0026#34; Linux 使用 在 Linux 或 Mac 系统中，可以使用 ln -s 命令来创建符号链接。以下是基本语法：\n1 ln -s 源目录 目标目录 例如，假设你的 Joplin 导出目录是 /home/user/JoplinExport，而你的 Obsidian 目录是 /home/user/ObsidianVault，你可以使用以下命令在 Obsidian 目录中创建一个指向 Joplin 导出目录的符号链接：\n1 ln -s /home/user/JoplinExport /home/user/ObsidianVault/JoplinExport 注意事项 符号链接只是创建了一个指向实际文件的快捷方式，如果路径不正确，图片仍然无法显示。 符号链接的路径是相对于创建时的路径。如果目标文件或目录的路径发生变化，符号链接可能会失效。例如，如果你创建了一个符号链接指向 D:\\JoplinExport，但后来将 JoplinExport 文件夹移动到了 D:\\NewFolder，那么原来的符号链接将无法找到目标。 不同的文件系统对符号链接的支持程度不同。例如，NTFS 文件系统支持符号链接，但 FAT32 和 exFAT 文件系统不支持。如果你将符号链接从一个支持的文件系统移动到不支持的文件系统，符号链接可能会失效。 某些应用程序可能不支持符号链接。例如，某些程序可能无法正确解析符号链接，导致无法访问目标文件或目录。这可能是由于程序的设计或安全限制。 在不同操作系统之间移动符号链接可能会导致问题。例如，Windows 和 Linux 系统对符号链接的处理方式不同，如果你在 Windows 上创建了一个符号链接，然后在 Linux 系统上访问，可能会遇到兼容性问题。 不支持符号链接功能‌ exFAT是一种为移动存储设备（如U盘、SD卡）设计的轻量级文件系统，主要目标是‌跨平台兼容性‌（Windows/macOS/Linux）和‌大文件支持‌，但未包含符号链接等高级功能‌。\n与NTFS的对比 ‌ NTFS、ext4等文件系统支持符号链接，因为它们具备更复杂的元数据管理能力。而exFAT的设计简化了文件结构以提高兼容性，牺牲了此类高级特性‌。\n案例 假设你的 Joplin 导出目录是 D:\\JoplinExport，而你的 Obsidian 目录是 C:\\ObsidianVault，你可以使用以下命令在 Obsidian 目录中创建一个指向 Joplin 导出目录的符号链接：\n1 mklink /D \u0026#34;C:\\ObsidianVault\\JoplinExport\u0026#34; \u0026#34;D:\\JoplinExport\u0026#34; 注意，JoplinExport 目录下的资源文件夹一定要存在，不然无法加载资源，例如图片、视频、办公文件等。JoplinExport 目录下存在 images 目录，那么 C:\\ObsidianVault\\JoplinExport 目录下也必须有 images 目录，不然无法加载图片资源。\n软链接与硬链接 一、跨文件系统支持\n软链接：可跨不同文件系统或分区创建，仅需存储目标文件的路径信息即可实现间接引用‌。 硬链接：仅能在同一文件系统内创建，因依赖共享同一inode的特性，无法跨越不同存储设备或分区‌。 二、目标类型支持\n软链接：若目标文件被删除或移动，软链接会失效（成为“悬挂链接”）‌。 硬链接：删除任一硬链接不会影响其他链接，只有当所有硬链接被删除后，文件数据才会被释放‌。 三、目标文件删除后的行为\n软链接：若目标文件被删除或移动，软链接会失效（成为“悬挂链接”）‌。 硬链接：删除任一硬链接不会影响其他链接，只有当所有硬链接被删除后，文件数据才会被释放‌。 ","date":"2025-03-06T00:00:00Z","image":"https://hugo-ap0.pages.dev/bg/13.webp","permalink":"https://hugo-ap0.pages.dev/p/%E7%AC%A6%E5%8F%B7%E9%93%BE%E6%8E%A5-mklink/","title":"符号链接 mklink"}]